ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"GFX.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5cFontC2EPK7GFXfont,"ax",%progbits
  19              		.align	1
  20              		.p2align 2,,3
  21              		.global	_ZN5cFontC2EPK7GFXfont
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5cFontC2EPK7GFXfont:
  27              	.LVL0:
  28              	.LFB2631:
  29              		.file 1 "GFX.cpp"
   1:GFX.cpp       **** //------------------------------------------------------------------------
   2:GFX.cpp       **** // Copyright(c) 2024 Dad Design.
   3:GFX.cpp       **** //      Bibliothèque graphique
   4:GFX.cpp       **** //
   5:GFX.cpp       **** // Inspiré largement de :
   6:GFX.cpp       **** //    Adafruit-GFX-Library : https://github.com/adafruit/Adafruit-GFX-Library
   7:GFX.cpp       **** //    eSPI : https://github.com/Bodmer/TFT_eSPI
   8:GFX.cpp       **** //------------------------------------------------------------------------
   9:GFX.cpp       **** #include "Debug.h"
  10:GFX.cpp       **** #include "GFX.h"
  11:GFX.cpp       **** 
  12:GFX.cpp       **** //***********************************************************************************
  13:GFX.cpp       **** // CFont
  14:GFX.cpp       **** // Gestion des polices de caratères
  15:GFX.cpp       **** // Utilisation de la structuration des fonts de Adafruit-GFX-Library
  16:GFX.cpp       **** // Ce qui permet de profiter des outils de conversion (ex: https://rop.nl/truetype2gfx/)
  17:GFX.cpp       **** cFont::cFont(const GFXfont *pFont)
  30              		.loc 1 17 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LBB78:
  18:GFX.cpp       **** {
  19:GFX.cpp       ****     m_pFont = pFont;         // Pointe sur le descripteur de font
  35              		.loc 1 19 5 view .LVU1
  36              	.LBE78:
  17:GFX.cpp       **** {
  37              		.loc 1 17 1 is_stmt 0 view .LVU2
  38 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 2


  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42              	.LBB82:
  20:GFX.cpp       ****     m_pTable = pFont->glyph; // Pointe sur la table des descriteurs de carratères
  21:GFX.cpp       **** 
  22:GFX.cpp       ****     // On parcours tous les caratères pour déterminer la hauteur max des caratères
  23:GFX.cpp       ****     // En sortie nous avons deux variables configurées :
  24:GFX.cpp       ****     //    m_NegHeight = hauteur sous la ligne du curseur;
  25:GFX.cpp       ****     //    m_PosHeight = hauteur au dessus de la ligne du curseur;
  26:GFX.cpp       ****     GFXglyph *pTable = m_pTable;
  27:GFX.cpp       ****     uint16_t SizeTable = 1 + pFont->last - pFont->first;
  43              		.loc 1 27 14 view .LVU3
  44 0002 B1F80AE0 		ldrh	lr, [r1, #10]
  28:GFX.cpp       ****     m_NegHeight = 0;
  29:GFX.cpp       ****     m_PosHeight = 0;
  45              		.loc 1 29 17 view .LVU4
  46 0006 4FF0000C 		mov	ip, #0
  27:GFX.cpp       ****     m_NegHeight = 0;
  47              		.loc 1 27 14 view .LVU5
  48 000a 0B89     		ldrh	r3, [r1, #8]
  49 000c 0EF1010E 		add	lr, lr, #1
  20:GFX.cpp       ****     m_pTable = pFont->glyph; // Pointe sur la table des descriteurs de carratères
  50              		.loc 1 20 23 view .LVU6
  51 0010 4A68     		ldr	r2, [r1, #4]
  19:GFX.cpp       ****     m_pTable = pFont->glyph; // Pointe sur la table des descriteurs de carratères
  52              		.loc 1 19 13 view .LVU7
  53 0012 0160     		str	r1, [r0]
  20:GFX.cpp       **** 
  54              		.loc 1 20 5 is_stmt 1 view .LVU8
  27:GFX.cpp       ****     m_NegHeight = 0;
  55              		.loc 1 27 14 is_stmt 0 view .LVU9
  56 0014 AEEB030E 		sub	lr, lr, r3
  20:GFX.cpp       **** 
  57              		.loc 1 20 14 view .LVU10
  58 0018 4260     		str	r2, [r0, #4]
  26:GFX.cpp       ****     uint16_t SizeTable = 1 + pFont->last - pFont->first;
  59              		.loc 1 26 5 is_stmt 1 view .LVU11
  60              	.LVL1:
  27:GFX.cpp       ****     m_NegHeight = 0;
  61              		.loc 1 27 5 view .LVU12
  62              		.loc 1 29 17 is_stmt 0 view .LVU13
  63 001a A0F808C0 		strh	ip, [r0, #8]	@ movhi
  27:GFX.cpp       ****     m_NegHeight = 0;
  64              		.loc 1 27 14 view .LVU14
  65 001e 1FFA8EF3 		uxth	r3, lr
  66              	.LVL2:
  28:GFX.cpp       ****     m_PosHeight = 0;
  67              		.loc 1 28 5 is_stmt 1 view .LVU15
  68              		.loc 1 29 5 view .LVU16
  30:GFX.cpp       ****     for (uint16_t index = 0; index < SizeTable; index++)
  69              		.loc 1 30 5 view .LVU17
  70              	.LBB79:
  71              		.loc 1 30 36 view .LVU18
  72 0022 B3B1     		cbz	r3, .L2
  73 0024 02EBC30E 		add	lr, r2, r3, lsl #3
  74 0028 6446     		mov	r4, ip
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 3


  75 002a 03E0     		b	.L5
  76              	.LVL3:
  77              	.L12:
  78              	.LBB80:
  31:GFX.cpp       ****     {
  32:GFX.cpp       ****         int8_t Offset = pTable->yOffset;
  33:GFX.cpp       ****         int8_t NegHeight = pTable->height + Offset;
  34:GFX.cpp       ****         if (NegHeight > m_NegHeight)
  79              		.loc 1 34 25 is_stmt 0 view .LVU19
  80 002c 90F90940 		ldrsb	r4, [r0, #9]
  35:GFX.cpp       ****         {
  36:GFX.cpp       ****             m_NegHeight = NegHeight;
  37:GFX.cpp       ****         }
  38:GFX.cpp       ****         if (Offset < m_PosHeight)
  81              		.loc 1 38 22 view .LVU20
  82 0030 90F908C0 		ldrsb	ip, [r0, #8]
  83              	.LVL4:
  84              	.L5:
  32:GFX.cpp       ****         int8_t NegHeight = pTable->height + Offset;
  85              		.loc 1 32 9 is_stmt 1 view .LVU21
  36:GFX.cpp       ****         }
  86              		.loc 1 36 13 view .LVU22
  87              		.loc 1 38 9 view .LVU23
  39:GFX.cpp       ****         {
  40:GFX.cpp       ****             m_PosHeight = Offset;
  88              		.loc 1 40 13 view .LVU24
  41:GFX.cpp       ****         }
  42:GFX.cpp       ****         pTable++;
  89              		.loc 1 42 9 view .LVU25
  32:GFX.cpp       ****         int8_t NegHeight = pTable->height + Offset;
  90              		.loc 1 32 16 is_stmt 0 view .LVU26
  91 0034 92F90610 		ldrsb	r1, [r2, #6]
  92              	.LVL5:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
  93              		.loc 1 33 9 is_stmt 1 view .LVU27
  94              		.loc 1 42 15 is_stmt 0 view .LVU28
  95 0038 0832     		adds	r2, r2, #8
  96              	.LVL6:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
  97              		.loc 1 33 43 view .LVU29
  98 003a 12F8053C 		ldrb	r3, [r2, #-5]	@ zero_extendqisi2
  99              	.LVL7:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
 100              		.loc 1 33 43 view .LVU30
 101              	.LBE80:
  30:GFX.cpp       ****     {
 102              		.loc 1 30 5 is_stmt 1 view .LVU31
  30:GFX.cpp       ****     {
 103              		.loc 1 30 36 view .LVU32
 104              	.LBB81:
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
 105              		.loc 1 33 43 is_stmt 0 view .LVU33
 106 003e 0B44     		add	r3, r3, r1
  33:GFX.cpp       ****         if (NegHeight > m_NegHeight)
 107              		.loc 1 33 16 view .LVU34
 108 0040 5BB2     		sxtb	r3, r3
 109              	.LVL8:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 4


  34:GFX.cpp       ****         {
 110              		.loc 1 34 9 is_stmt 1 view .LVU35
 111 0042 A342     		cmp	r3, r4
  36:GFX.cpp       ****         }
 112              		.loc 1 36 25 is_stmt 0 view .LVU36
 113 0044 C8BF     		it	gt
 114 0046 4372     		strbgt	r3, [r0, #9]
  38:GFX.cpp       ****         {
 115              		.loc 1 38 9 view .LVU37
 116 0048 6145     		cmp	r1, ip
  40:GFX.cpp       ****         }
 117              		.loc 1 40 25 view .LVU38
 118 004a B8BF     		it	lt
 119 004c 0172     		strblt	r1, [r0, #8]
 120              	.LBE81:
  30:GFX.cpp       ****     {
 121              		.loc 1 30 36 view .LVU39
 122 004e 7245     		cmp	r2, lr
 123 0050 ECD1     		bne	.L12
 124              	.LVL9:
 125              	.L2:
  30:GFX.cpp       ****     {
 126              		.loc 1 30 36 view .LVU40
 127              	.LBE79:
 128              	.LBE82:
  43:GFX.cpp       ****     }
  44:GFX.cpp       **** }
 129              		.loc 1 44 1 view .LVU41
 130 0052 10BD     		pop	{r4, pc}
 131              		.cfi_endproc
 132              	.LFE2631:
 134              		.global	_ZN5cFontC1EPK7GFXfont
 135              		.thumb_set _ZN5cFontC1EPK7GFXfont,_ZN5cFontC2EPK7GFXfont
 136              		.section	.text._ZN4cGFX12drawFillRectEttss6cColor,"ax",%progbits
 137              		.align	1
 138              		.p2align 2,,3
 139              		.global	_ZN4cGFX12drawFillRectEttss6cColor
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	_ZN4cGFX12drawFillRectEttss6cColor:
 145              	.LVL10:
 146              	.LFB2634:
  45:GFX.cpp       **** 
  46:GFX.cpp       **** //***********************************************************************************
  47:GFX.cpp       **** // cGFX
  48:GFX.cpp       **** //   Bibliothèque Graphique
  49:GFX.cpp       **** 
  50:GFX.cpp       **** //-----------------------------------------------------------------------------------
  51:GFX.cpp       **** // Tracer un rectange vide 
  52:GFX.cpp       **** void cGFX::drawRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color){
  53:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
  54:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
  55:GFX.cpp       **** 
  56:GFX.cpp       ****     drawLine(x, y, x+dx, y, Color);
  57:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
  58:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 5


  59:GFX.cpp       ****     drawLine(x, y+dy, x, y, Color);
  60:GFX.cpp       **** }
  61:GFX.cpp       **** 
  62:GFX.cpp       **** //-----------------------------------------------------------------------------------
  63:GFX.cpp       **** // Tracer un rectangle plein
  64:GFX.cpp       **** void cGFX::drawFillRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color){
 147              		.loc 1 64 86 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 8, pretend = 0, frame = 8
 150              		@ frame_needed = 0, uses_anonymous_args = 0
  65:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 151              		.loc 1 65 5 view .LVU43
  64:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 152              		.loc 1 64 86 is_stmt 0 view .LVU44
 153 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 154              		.cfi_def_cfa_offset 36
 155              		.cfi_offset 4, -36
 156              		.cfi_offset 5, -32
 157              		.cfi_offset 6, -28
 158              		.cfi_offset 7, -24
 159              		.cfi_offset 8, -20
 160              		.cfi_offset 9, -16
 161              		.cfi_offset 10, -12
 162              		.cfi_offset 11, -8
 163              		.cfi_offset 14, -4
 164              		.loc 1 65 5 view .LVU45
 165 0004 002B     		cmp	r3, #0
 166              	.LVL11:
  64:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 167              		.loc 1 64 86 view .LVU46
 168 0006 83B0     		sub	sp, sp, #12
 169              		.cfi_def_cfa_offset 48
  64:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 170              		.loc 1 64 86 view .LVU47
 171 0008 BDF93070 		ldrsh	r7, [sp, #48]
 172              		.loc 1 65 5 view .LVU48
 173 000c 04DA     		bge	.L14
 174              		.loc 1 65 17 is_stmt 1 discriminator 1 view .LVU49
 175              		.loc 1 65 19 is_stmt 0 discriminator 1 view .LVU50
 176 000e 9BB2     		uxth	r3, r3
 177 0010 1944     		add	r1, r1, r3
 178              	.LVL12:
 179              		.loc 1 65 29 discriminator 1 view .LVU51
 180 0012 5B42     		rsbs	r3, r3, #0
 181              		.loc 1 65 19 discriminator 1 view .LVU52
 182 0014 89B2     		uxth	r1, r1
 183              	.LVL13:
 184              		.loc 1 65 26 is_stmt 1 discriminator 1 view .LVU53
 185              		.loc 1 65 29 is_stmt 0 discriminator 1 view .LVU54
 186 0016 1BB2     		sxth	r3, r3
 187              	.LVL14:
 188              	.L14:
  66:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 189              		.loc 1 66 5 is_stmt 1 view .LVU55
 190 0018 002F     		cmp	r7, #0
 191 001a 04DA     		bge	.L15
 192              		.loc 1 66 17 discriminator 1 view .LVU56
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 6


 193              		.loc 1 66 19 is_stmt 0 discriminator 1 view .LVU57
 194 001c BFB2     		uxth	r7, r7
 195 001e 3A44     		add	r2, r2, r7
 196              	.LVL15:
 197              		.loc 1 66 29 discriminator 1 view .LVU58
 198 0020 7F42     		rsbs	r7, r7, #0
 199              		.loc 1 66 19 discriminator 1 view .LVU59
 200 0022 92B2     		uxth	r2, r2
 201              	.LVL16:
 202              		.loc 1 66 26 is_stmt 1 discriminator 1 view .LVU60
 203              		.loc 1 66 29 is_stmt 0 discriminator 1 view .LVU61
 204 0024 3FB2     		sxth	r7, r7
 205              	.LVL17:
 206              	.L15:
  67:GFX.cpp       **** 
  68:GFX.cpp       ****     RGB *pFrame;
 207              		.loc 1 68 5 is_stmt 1 view .LVU62
  69:GFX.cpp       ****     RGB *pEndLigne;
 208              		.loc 1 69 5 view .LVU63
  70:GFX.cpp       ****     
  71:GFX.cpp       ****     for (uint16_t PosY = y; PosY < (y+dy); PosY++){
 209              		.loc 1 71 5 view .LVU64
 210              	.LBB90:
 211              		.loc 1 71 34 view .LVU65
 212              		.loc 1 71 38 is_stmt 0 view .LVU66
 213 0026 1744     		add	r7, r7, r2
 214              	.LVL18:
 215              		.loc 1 71 34 view .LVU67
 216 0028 BA42     		cmp	r2, r7
 217 002a 45DA     		bge	.L13
 218              		.loc 1 71 34 view .LVU68
 219 002c B0F85C90 		ldrh	r9, [r0, #92]
  72:GFX.cpp       ****         pFrame = getPtr(x, PosY);
  73:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 220              		.loc 1 73 27 view .LVU69
 221 0030 0B44     		add	r3, r3, r1
 222              	.LVL19:
 223              		.loc 1 73 27 view .LVU70
 224 0032 B0F85EA0 		ldrh	r10, [r0, #94]
 225              	.LBB91:
 226              	.LBB92:
 227              		.file 2 "Frame.h"
   1:Frame.h       **** //------------------------------------------------------------------------
   2:Frame.h       **** // Copyright(c) 2024 Dad Design.
   3:Frame.h       **** //      Gestion d'une frame de pixel
   4:Frame.h       **** //      Les pixels sont organisés en bloc de transmission
   5:Frame.h       **** //      pour une mise à jour optimisé de l'écran
   6:Frame.h       **** //------------------------------------------------------------------------
   7:Frame.h       **** #pragma once
   8:Frame.h       **** #include <stdint.h>
   9:Frame.h       **** #include "TFT_SPI.h"
  10:Frame.h       **** #include "Debug.h"
  11:Frame.h       **** 
  12:Frame.h       **** #define NB_BLOC (FRAME_GRILLE*FRAME_GRILLE)
  13:Frame.h       **** #if TFT_COLOR == 16
  14:Frame.h       ****     #define TAILLE_BLOC (TFT_WIDTH * TFT_HEIGHT * 2) / NB_BLOC
  15:Frame.h       **** #else
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 7


  16:Frame.h       ****     #define TAILLE_BLOC (TFT_WIDTH * TFT_HEIGHT * 3) / NB_BLOC
  17:Frame.h       **** #endif
  18:Frame.h       **** 
  19:Frame.h       **** //***********************************************************************************
  20:Frame.h       **** // Cmd_CASET
  21:Frame.h       **** //   Commande SPI de séléction des colones  
  22:Frame.h       **** //*********************************************************************************** 
  23:Frame.h       **** class Cmd_CASET {
  24:Frame.h       ****     public :
  25:Frame.h       ****     friend class cRBG_Frame;
  26:Frame.h       ****     // --------------------------------------------------------------------------
  27:Frame.h       ****     // Constructeur
  28:Frame.h       ****     Cmd_CASET(){
  29:Frame.h       ****         m_Commande = TFT_CASET;
  30:Frame.h       ****     }
  31:Frame.h       **** 
  32:Frame.h       ****     // --------------------------------------------------------------------------
  33:Frame.h       ****     // Définition de l'abcisse de la fenetre
  34:Frame.h       ****     void setData(uint16_t x, uint16_t dx){
  35:Frame.h       ****         m_Data[0] = x >> 8;
  36:Frame.h       ****         m_Data[1] = x & 0xFF;
  37:Frame.h       ****         m_Data[2] = dx >> 8;
  38:Frame.h       ****         m_Data[3] = dx & 0xFF;
  39:Frame.h       ****     }
  40:Frame.h       ****     
  41:Frame.h       ****     // --------------------------------------------------------------------------
  42:Frame.h       ****     // Données de la classe
  43:Frame.h       ****     protected :
  44:Frame.h       ****     uint8_t m_Commande;
  45:Frame.h       ****     uint8_t m_Data[4];
  46:Frame.h       **** };
  47:Frame.h       **** 
  48:Frame.h       **** //***********************************************************************************
  49:Frame.h       **** // Cmd_RASET
  50:Frame.h       **** //   Commande SPI de selection des rangées  
  51:Frame.h       **** //*********************************************************************************** 
  52:Frame.h       **** class Cmd_RASET {
  53:Frame.h       ****     public :
  54:Frame.h       ****     friend class cRBG_Frame;
  55:Frame.h       **** 
  56:Frame.h       ****     // --------------------------------------------------------------------------
  57:Frame.h       ****     // Constructeur
  58:Frame.h       ****     Cmd_RASET(){
  59:Frame.h       ****         m_Commande = TFT_RASET;
  60:Frame.h       ****     }
  61:Frame.h       ****     
  62:Frame.h       ****     // --------------------------------------------------------------------------
  63:Frame.h       ****     // Définition de l'ordonnée de la fenètre
  64:Frame.h       ****     void setData(uint16_t y, uint16_t dy){
  65:Frame.h       ****         m_Data[0] = y >> 8;
  66:Frame.h       ****         m_Data[1] = y & 0xFF;
  67:Frame.h       ****         m_Data[2] = dy >> 8;
  68:Frame.h       ****         m_Data[3] = dy & 0xFF;
  69:Frame.h       ****     }
  70:Frame.h       **** 
  71:Frame.h       ****     // --------------------------------------------------------------------------
  72:Frame.h       ****     // Données de la classe
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 8


  73:Frame.h       ****     protected :
  74:Frame.h       ****     uint8_t m_Commande;
  75:Frame.h       ****     uint8_t m_Data[4];
  76:Frame.h       **** };
  77:Frame.h       **** 
  78:Frame.h       **** //***********************************************************************************
  79:Frame.h       **** // Cmd_RAMWR
  80:Frame.h       **** //   Commande SPI d'ecriture des pixels 
  81:Frame.h       **** //***********************************************************************************
  82:Frame.h       **** class cRBG_Frame;
  83:Frame.h       **** class Cmd_RAMWR {
  84:Frame.h       ****     public :
  85:Frame.h       ****     friend class cRBG_Frame;
  86:Frame.h       **** 
  87:Frame.h       ****     // --------------------------------------------------------------------------
  88:Frame.h       ****     // Constructeur
  89:Frame.h       ****     Cmd_RAMWR(){
  90:Frame.h       ****         m_Commande = TFT_RAMWR;
  91:Frame.h       ****     }
  92:Frame.h       **** 
  93:Frame.h       ****     // --------------------------------------------------------------------------
  94:Frame.h       ****     // Définition des pixels de la frame à transférer
  95:Frame.h       ****     void setData(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, cRBG_Frame *pFrame);
  96:Frame.h       **** 
  97:Frame.h       ****     // --------------------------------------------------------------------------
  98:Frame.h       ****     // Données de la classe
  99:Frame.h       ****     protected :
 100:Frame.h       ****     uint8_t m_Commande;
 101:Frame.h       ****     uint8_t m_Data[TAILLE_BLOC];
 102:Frame.h       **** };
 103:Frame.h       **** 
 104:Frame.h       **** //***********************************************************************************
 105:Frame.h       **** // cColor 
 106:Frame.h       **** //*********************************************************************************** 
 107:Frame.h       **** struct cColor { 
 108:Frame.h       ****     // Constructeur
 109:Frame.h       ****     cColor(uint8_t R, uint8_t G, uint8_t B, uint8_t Trans=255){
 110:Frame.h       ****         m_R = R;
 111:Frame.h       ****         m_G = G;
 112:Frame.h       ****         m_B = B;
 113:Frame.h       ****         m_Trans = Trans;
 114:Frame.h       ****     }
 115:Frame.h       **** 
 116:Frame.h       ****     uint8_t m_R;
 117:Frame.h       ****     uint8_t m_G;
 118:Frame.h       ****     uint8_t m_B;
 119:Frame.h       ****     uint8_t m_Trans;
 120:Frame.h       **** };
 121:Frame.h       **** 
 122:Frame.h       **** //***********************************************************************************
 123:Frame.h       **** // RGB
 124:Frame.h       **** // Définition d'un pixel RGB 
 125:Frame.h       **** //*********************************************************************************** 
 126:Frame.h       **** struct RGB {
 127:Frame.h       ****     friend class cRBG_Frame;
 128:Frame.h       **** 	// --------------------------------------------------------------------------
 129:Frame.h       **** 	// Mise à jour d'un pixel et indication que le bloc a changé d'état
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 9


 130:Frame.h       ****     void inline set(cColor Color){
 131:Frame.h       ****         R = Color.m_R;
 132:Frame.h       ****         G = Color.m_G;
 133:Frame.h       ****         B = Color.m_B;
 134:Frame.h       ****         *m_pChange = true;
 135:Frame.h       ****     }
 136:Frame.h       **** 
 137:Frame.h       ****     // --------------------------------------------------------------------------
 138:Frame.h       **** 	// Lecture de la composante Rouge 
 139:Frame.h       ****     uint8_t inline getR(){
 140:Frame.h       ****         return R;
 141:Frame.h       ****     }
 142:Frame.h       ****     // --------------------------------------------------------------------------
 143:Frame.h       **** 	// Lecture de la composante Verte 
 144:Frame.h       ****     uint8_t inline getG(){
 145:Frame.h       ****         return G;
 146:Frame.h       ****     }
 147:Frame.h       **** 
 148:Frame.h       ****     // --------------------------------------------------------------------------
 149:Frame.h       **** 	// Lecture de la composante Bleue 
 150:Frame.h       ****     uint8_t inline getB(){
 151:Frame.h       ****         return B;
 152:Frame.h       ****     }
 153:Frame.h       **** 
 154:Frame.h       ****     // --------------------------------------------------------------------------
 155:Frame.h       ****     // Données de la classe
 156:Frame.h       ****     protected :
 157:Frame.h       ****     uint8_t R;          // Composante Rouge
 158:Frame.h       ****     uint8_t G;          // Composante Verte
 159:Frame.h       ****     uint8_t B;          // Composante Bleue
 160:Frame.h       ****     bool *m_pChange;    // Indicateur de changement d'état (pointe sur un tableau de bloc) 
 161:Frame.h       **** };
 162:Frame.h       **** 
 163:Frame.h       **** //***********************************************************************************
 164:Frame.h       **** // cRBG_Frame
 165:Frame.h       **** //  Gestion de la framme
 166:Frame.h       **** //*********************************************************************************** 
 167:Frame.h       **** 
 168:Frame.h       **** //   Pour le fonctionnement du DMA cette structure doit être instanciée dans la
 169:Frame.h       **** //   mémoire DMA_BUFFER_MEM_SECTION
 170:Frame.h       **** struct FIFO_Data {
 171:Frame.h       ****     Cmd_CASET m_CmdCASET[SIZE_FIFO];
 172:Frame.h       ****     Cmd_RASET m_CmdRASET[SIZE_FIFO];
 173:Frame.h       ****     Cmd_RAMWR m_CmdRAWWR[SIZE_FIFO];
 174:Frame.h       **** };
 175:Frame.h       **** 
 176:Frame.h       **** // ================================
 177:Frame.h       **** // cRBG_Frame
 178:Frame.h       **** class cRBG_Frame  : protected TFT_SPI {
 179:Frame.h       ****     public:
 180:Frame.h       ****     // --------------------------------------------------------------------------
 181:Frame.h       ****     // Constructeur 
 182:Frame.h       ****     // FIFO_Data doit être instanciée dans la mémoire DMA_BUFFER_MEM_SECTION
 183:Frame.h       ****     cRBG_Frame(){
 184:Frame.h       ****         m_FIFO_in = 0;
 185:Frame.h       ****         m_FIFO_out = 0;
 186:Frame.h       ****         m_FIFO_NbElements = 0;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 10


 187:Frame.h       ****         m_Busy = false;
 188:Frame.h       ****     }
 189:Frame.h       **** 
 190:Frame.h       ****     // ==========================================================================
 191:Frame.h       ****     // Configuration
 192:Frame.h       **** 
 193:Frame.h       ****     // --------------------------------------------------------------------------
 194:Frame.h       ****     // Initialisation de la classe.
 195:Frame.h       ****     // Doit être appelée avant toute utilisation (aucune vérification réalisée) 
 196:Frame.h       ****     void setFrame(RGB *pFrameBuff,  FIFO_Data *pFIFO_Data, uint16_t Width,  uint16_t Height);
 197:Frame.h       ****     
 198:Frame.h       ****     // --------------------------------------------------------------------------
 199:Frame.h       ****     // Configuration l'orientation de la frame et de l'écran
 200:Frame.h       ****     void setFrameRotation (Rotation r);
 201:Frame.h       **** 
 202:Frame.h       ****     // ==========================================================================
 203:Frame.h       ****     // Lecture / Ecriture
 204:Frame.h       **** 
 205:Frame.h       ****     // --------------------------------------------------------------------------
 206:Frame.h       ****     // Retourne l'adresse d'un pixel à partir de ses coordonnées         
 207:Frame.h       ****     inline RGB *getPtr(uint16_t x, uint16_t y){
 208:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 228              		.loc 2 208 26 view .LVU71
 229 0036 09F1FF38 		add	r8, r9, #-1
 230              	.LBE92:
 231              	.LBE91:
 232              		.loc 1 73 27 view .LVU72
 233 003a 9BB2     		uxth	r3, r3
 234 003c 466D     		ldr	r6, [r0, #84]
 235              	.LBB97:
 236              	.LBB93:
 237              		.loc 2 208 26 view .LVU73
 238 003e 1FFA88F8 		uxth	r8, r8
 239 0042 9DF83450 		ldrb	r5, [sp, #52]	@ zero_extendqisi2
 240 0046 9DF83540 		ldrb	r4, [sp, #53]	@ zero_extendqisi2
 209:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 210:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 241              		.loc 2 210 26 view .LVU74
 242 004a 4945     		cmp	r1, r9
 243 004c 34BF     		ite	cc
 244 004e 8B46     		movcc	fp, r1
 245 0050 C346     		movcs	fp, r8
 246              	.LBE93:
 247              	.LBE97:
 248              	.LBB98:
 249              	.LBB99:
 250 0052 4B45     		cmp	r3, r9
 251 0054 38BF     		it	cc
 252 0056 9846     		movcc	r8, r3
 253              	.LBE99:
 254              	.LBE98:
 255              	.LBB102:
 256              	.LBB94:
 209:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 257              		.loc 2 209 27 view .LVU75
 258 0058 0AF1FF33 		add	r3, r10, #-1
 259 005c 9DF836E0 		ldrb	lr, [sp, #54]	@ zero_extendqisi2
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 11


 260 0060 9BB2     		uxth	r3, r3
 261 0062 0193     		str	r3, [sp, #4]
 262              	.LVL20:
 263              	.L20:
 209:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 264              		.loc 2 209 27 view .LVU76
 265              	.LBE94:
 266              	.LBE102:
  72:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 267              		.loc 1 72 9 is_stmt 1 view .LVU77
 268              	.LBB103:
 269              	.LBI91:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 270              		.loc 2 207 17 view .LVU78
 271              	.LBB95:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 272              		.loc 2 208 9 view .LVU79
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 273              		.loc 2 209 9 view .LVU80
 274 0064 0199     		ldr	r1, [sp, #4]
 275 0066 9245     		cmp	r10, r2
 276 0068 88BF     		it	hi
 277 006a 1146     		movhi	r1, r2
 278              	.LVL21:
 279              		.loc 2 210 9 view .LVU81
 280              		.loc 2 210 30 is_stmt 0 view .LVU82
 281 006c 09FB01F1 		mul	r1, r9, r1
 282              		.loc 2 210 27 view .LVU83
 283 0070 0BEB0103 		add	r3, fp, r1
 284              	.LBE95:
 285              	.LBE103:
 286              	.LBB104:
 287              	.LBB100:
 288 0074 4144     		add	r1, r1, r8
 289              	.LBE100:
 290              	.LBE104:
 291              	.LBB105:
 292              	.LBB96:
 293              		.loc 2 210 39 view .LVU84
 294 0076 06EBC303 		add	r3, r6, r3, lsl #3
 295              	.LVL22:
 296              		.loc 2 210 39 view .LVU85
 297              	.LBE96:
 298              	.LBE105:
 299              		.loc 1 73 9 is_stmt 1 view .LVU86
 300              	.LBB106:
 301              	.LBI98:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 302              		.loc 2 207 17 view .LVU87
 303              	.LBB101:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 304              		.loc 2 208 9 view .LVU88
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 305              		.loc 2 209 9 view .LVU89
 306              		.loc 2 210 9 view .LVU90
 307              		.loc 2 210 39 is_stmt 0 view .LVU91
 308 007a 06EBC101 		add	r1, r6, r1, lsl #3
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 12


 309              	.LVL23:
 310              		.loc 2 210 39 view .LVU92
 311              	.LBE101:
 312              	.LBE106:
  74:GFX.cpp       ****         while (pFrame < pEndLigne){
 313              		.loc 1 74 9 is_stmt 1 view .LVU93
 314              		.loc 1 74 23 view .LVU94
 315 007e 9942     		cmp	r1, r3
 316 0080 16D9     		bls	.L21
 317              		.loc 1 74 23 is_stmt 0 view .LVU95
 318 0082 0139     		subs	r1, r1, #1
 319              	.LVL24:
 320              		.loc 1 74 23 view .LVU96
 321 0084 03F11000 		add	r0, r3, #16
 322 0088 C91A     		subs	r1, r1, r3
 323              	.LVL25:
 324              		.loc 1 74 23 view .LVU97
 325 008a 0833     		adds	r3, r3, #8
 326              	.LVL26:
 327              		.loc 1 74 23 view .LVU98
 328 008c 21F00701 		bic	r1, r1, #7
 329 0090 0144     		add	r1, r1, r0
 330              	.LVL27:
 331              	.L22:
  75:GFX.cpp       ****             pFrame->set(Color);
 332              		.loc 1 75 13 is_stmt 1 view .LVU99
 333              	.LBB107:
 334              	.LBI107:
 130:Frame.h       ****         R = Color.m_R;
 335              		.loc 2 130 17 view .LVU100
 336              	.LBB108:
 131:Frame.h       ****         G = Color.m_G;
 337              		.loc 2 131 9 view .LVU101
 134:Frame.h       ****     }
 338              		.loc 2 134 20 is_stmt 0 view .LVU102
 339 0092 53F8040C 		ldr	r0, [r3, #-4]
 340              	.LBE108:
 341              	.LBE107:
  74:GFX.cpp       ****             pFrame->set(Color);
 342              		.loc 1 74 23 view .LVU103
 343 0096 0833     		adds	r3, r3, #8
 344              	.LVL28:
 345              	.LBB111:
 346              	.LBB109:
 131:Frame.h       ****         G = Color.m_G;
 347              		.loc 2 131 11 view .LVU104
 348 0098 03F8105C 		strb	r5, [r3, #-16]
 132:Frame.h       ****         B = Color.m_B;
 349              		.loc 2 132 9 is_stmt 1 view .LVU105
 134:Frame.h       ****     }
 350              		.loc 2 134 20 is_stmt 0 view .LVU106
 351 009c 4FF0010C 		mov	ip, #1
 132:Frame.h       ****         B = Color.m_B;
 352              		.loc 2 132 11 view .LVU107
 353 00a0 03F80F4C 		strb	r4, [r3, #-15]
 133:Frame.h       ****         *m_pChange = true;
 354              		.loc 2 133 9 is_stmt 1 view .LVU108
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 13


 133:Frame.h       ****         *m_pChange = true;
 355              		.loc 2 133 11 is_stmt 0 view .LVU109
 356 00a4 03F80EEC 		strb	lr, [r3, #-14]
 134:Frame.h       ****     }
 357              		.loc 2 134 9 is_stmt 1 view .LVU110
 358              	.LBE109:
 359              	.LBE111:
  74:GFX.cpp       ****             pFrame->set(Color);
 360              		.loc 1 74 23 is_stmt 0 view .LVU111
 361 00a8 9942     		cmp	r1, r3
 362              	.LBB112:
 363              	.LBB110:
 134:Frame.h       ****     }
 364              		.loc 2 134 20 view .LVU112
 365 00aa 80F800C0 		strb	ip, [r0]
 366              	.LVL29:
 134:Frame.h       ****     }
 367              		.loc 2 134 20 view .LVU113
 368              	.LBE110:
 369              	.LBE112:
  76:GFX.cpp       ****             pFrame++;
 370              		.loc 1 76 13 is_stmt 1 view .LVU114
  74:GFX.cpp       ****             pFrame->set(Color);
 371              		.loc 1 74 9 view .LVU115
  74:GFX.cpp       ****             pFrame->set(Color);
 372              		.loc 1 74 23 view .LVU116
 373 00ae F0D1     		bne	.L22
 374              	.L21:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 375              		.loc 1 71 5 view .LVU117
 376 00b0 0132     		adds	r2, r2, #1
 377              	.LVL30:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 378              		.loc 1 71 5 is_stmt 0 view .LVU118
 379 00b2 92B2     		uxth	r2, r2
 380              	.LVL31:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 381              		.loc 1 71 34 is_stmt 1 view .LVU119
 382 00b4 BA42     		cmp	r2, r7
 383 00b6 D5DB     		blt	.L20
 384              	.L13:
  71:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 385              		.loc 1 71 34 is_stmt 0 view .LVU120
 386              	.LBE90:
  77:GFX.cpp       ****         }
  78:GFX.cpp       ****     }
  79:GFX.cpp       **** }
 387              		.loc 1 79 1 view .LVU121
 388 00b8 03B0     		add	sp, sp, #12
 389              		.cfi_def_cfa_offset 36
 390              		@ sp needed
 391 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 392              		.cfi_endproc
 393              	.LFE2634:
 395 00be 00BF     		.section	.text._ZN4cGFX8drawLineEtttt6cColor,"ax",%progbits
 396              		.align	1
 397              		.p2align 2,,3
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 14


 398              		.global	_ZN4cGFX8drawLineEtttt6cColor
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 403              	_ZN4cGFX8drawLineEtttt6cColor:
 404              	.LVL32:
 405              	.LFB2635:
  80:GFX.cpp       **** //-----------------------------------------------------------------------------------
  81:GFX.cpp       **** // Dessin d'une ligne
  82:GFX.cpp       **** // Merci a Frédéric Goset http://fredericgoset.ovh/
  83:GFX.cpp       **** // L'algorithme de ligne de Bresenham 
  84:GFX.cpp       **** void cGFX::drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, cColor Color)
  85:GFX.cpp       **** {
 406              		.loc 1 85 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 8, pretend = 0, frame = 16
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		.loc 1 85 1 is_stmt 0 view .LVU123
 411 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 412              		.cfi_def_cfa_offset 36
 413              		.cfi_offset 4, -36
 414              		.cfi_offset 5, -32
 415              		.cfi_offset 6, -28
 416              		.cfi_offset 7, -24
 417              		.cfi_offset 8, -20
 418              		.cfi_offset 9, -16
 419              		.cfi_offset 10, -12
 420              		.cfi_offset 11, -8
 421              		.cfi_offset 14, -4
  86:GFX.cpp       ****     int16_t dx = x1 - x0;
 422              		.loc 1 86 21 view .LVU124
 423 0004 A3EB010E 		sub	lr, r3, r1
  85:GFX.cpp       ****     int16_t dx = x1 - x0;
 424              		.loc 1 85 1 view .LVU125
 425 0008 85B0     		sub	sp, sp, #20
 426              		.cfi_def_cfa_offset 56
 427              		.loc 1 86 13 view .LVU126
 428 000a 0FFA8EFE 		sxth	lr, lr
  85:GFX.cpp       ****     int16_t dx = x1 - x0;
 429              		.loc 1 85 1 view .LVU127
 430 000e BDF83890 		ldrh	r9, [sp, #56]
 431 0012 9DF83C60 		ldrb	r6, [sp, #60]	@ zero_extendqisi2
 432              	.LVL33:
  87:GFX.cpp       ****     int16_t dy = y1 - y0;
 433              		.loc 1 87 21 view .LVU128
 434 0016 A9EB020C 		sub	ip, r9, r2
  88:GFX.cpp       ****     
  89:GFX.cpp       ****     int incX = dx < 0 ? -1 : (dx > 0 ? 1 : 0);
 435              		.loc 1 89 23 view .LVU129
 436 001a BEF1000F 		cmp	lr, #0
 437 001e 9DF83D50 		ldrb	r5, [sp, #61]	@ zero_extendqisi2
 438              	.LVL34:
  87:GFX.cpp       ****     int16_t dy = y1 - y0;
 439              		.loc 1 87 13 view .LVU130
 440 0022 0FFA8CFC 		sxth	ip, ip
 441 0026 9DF83E40 		ldrb	r4, [sp, #62]	@ zero_extendqisi2
 442              	.LVL35:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 15


  86:GFX.cpp       ****     int16_t dy = y1 - y0;
 443              		.loc 1 86 5 is_stmt 1 view .LVU131
  87:GFX.cpp       ****     int16_t dy = y1 - y0;
 444              		.loc 1 87 5 view .LVU132
 445              		.loc 1 89 5 view .LVU133
 446              		.loc 1 89 23 is_stmt 0 view .LVU134
 447 002a C0F28C80 		blt	.L27
 448              		.loc 1 89 38 discriminator 1 view .LVU135
 449 002e 14BF     		ite	ne
 450 0030 0127     		movne	r7, #1
 451 0032 0027     		moveq	r7, #0
 452              	.LVL36:
  90:GFX.cpp       ****     int incY = dy < 0 ? -1 : (dy > 0 ? 1 : 0);
 453              		.loc 1 90 5 is_stmt 1 discriminator 1 view .LVU136
 454              		.loc 1 90 23 is_stmt 0 discriminator 1 view .LVU137
 455 0034 BCF1000F 		cmp	ip, #0
 456 0038 48DB     		blt	.L29
 457              		.loc 1 90 38 view .LVU138
 458 003a 14BF     		ite	ne
 459 003c 4FF00108 		movne	r8, #1
 460 0040 4FF00008 		moveq	r8, #0
 461              	.LVL37:
  91:GFX.cpp       ****     if(dx < 0) dx = -dx;
 462              		.loc 1 91 5 is_stmt 1 view .LVU139
 463              	.L31:
  92:GFX.cpp       ****     if(dy < 0) dy = -dy;
  93:GFX.cpp       **** 
  94:GFX.cpp       ****     RGB *pFrame;
 464              		.loc 1 94 5 view .LVU140
  95:GFX.cpp       ****     RGB *pEndLigne;
 465              		.loc 1 95 5 view .LVU141
  96:GFX.cpp       ****  
  97:GFX.cpp       ****     if (dy == 0){
 466              		.loc 1 97 5 view .LVU142
 467              	.LBB145:
 468 0044 BCF1000F 		cmp	ip, #0
 469 0048 49D1     		bne	.L32
 470              	.LVL38:
 471              	.L58:
 472              	.LBB146:
  98:GFX.cpp       ****         // horizontal line
  99:GFX.cpp       ****         uint16_t Temp;
 473              		.loc 1 99 9 view .LVU143
 100:GFX.cpp       ****         if(x1 < x0) {Temp = x1; x1 = x0 ; x0= Temp;}
 474              		.loc 1 100 9 view .LVU144
 475 004a 8B42     		cmp	r3, r1
 476 004c 02D2     		bcs	.L33
 477 004e 0F46     		mov	r7, r1
 478 0050 1946     		mov	r1, r3
 479              	.LVL39:
 480              		.loc 1 100 9 is_stmt 0 view .LVU145
 481 0052 3B46     		mov	r3, r7
 482              	.LVL40:
 483              	.L33:
 101:GFX.cpp       ****         pFrame = getPtr(x0,y0);
 484              		.loc 1 101 9 is_stmt 1 view .LVU146
 485 0054 B0F85CC0 		ldrh	ip, [r0, #92]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 16


 486              	.LVL41:
 487              		.loc 1 101 9 is_stmt 0 view .LVU147
 488 0058 476D     		ldr	r7, [r0, #84]
 489              	.LBB147:
 490              	.LBB148:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 491              		.loc 2 208 9 view .LVU148
 492 005a 6145     		cmp	r1, ip
 493 005c B0F85E00 		ldrh	r0, [r0, #94]
 494              	.LVL42:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 495              		.loc 2 208 9 view .LVU149
 496              	.LBE148:
 497              	.LBI147:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 498              		.loc 2 207 17 is_stmt 1 view .LVU150
 499              	.LBB149:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 500              		.loc 2 208 9 view .LVU151
 501 0060 02D3     		bcc	.L34
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 502              		.loc 2 208 24 view .LVU152
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 503              		.loc 2 208 26 is_stmt 0 view .LVU153
 504 0062 0CF1FF31 		add	r1, ip, #-1
 505              	.LVL43:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 506              		.loc 2 208 26 view .LVU154
 507 0066 89B2     		uxth	r1, r1
 508              	.LVL44:
 509              	.L34:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 510              		.loc 2 209 9 is_stmt 1 view .LVU155
 511 0068 8242     		cmp	r2, r0
 512 006a 01D3     		bcc	.L35
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 513              		.loc 2 209 25 view .LVU156
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 514              		.loc 2 209 27 is_stmt 0 view .LVU157
 515 006c 421E     		subs	r2, r0, #1
 516              	.LVL45:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 517              		.loc 2 209 27 view .LVU158
 518 006e 92B2     		uxth	r2, r2
 519              	.LVL46:
 520              	.L35:
 521              		.loc 2 210 9 is_stmt 1 view .LVU159
 522              		.loc 2 210 27 is_stmt 0 view .LVU160
 523 0070 0CFB0212 		mla	r2, ip, r2, r1
 524              	.LBE149:
 525              	.LBE147:
 526              	.LBB151:
 527              	.LBB152:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 528              		.loc 2 208 9 view .LVU161
 529 0074 6345     		cmp	r3, ip
 530              	.LBE152:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 17


 531              	.LBE151:
 532              	.LBB154:
 533              	.LBB150:
 534              		.loc 2 210 39 view .LVU162
 535 0076 07EBC202 		add	r2, r7, r2, lsl #3
 536              	.LVL47:
 537              		.loc 2 210 39 view .LVU163
 538              	.LBE150:
 539              	.LBE154:
 102:GFX.cpp       ****         pEndLigne = getPtr(x1,y1);
 540              		.loc 1 102 9 is_stmt 1 view .LVU164
 541              	.LBB155:
 542              	.LBI151:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 543              		.loc 2 207 17 view .LVU165
 544              	.LBB153:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 545              		.loc 2 208 9 view .LVU166
 546 007a 02D3     		bcc	.L36
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 547              		.loc 2 208 24 view .LVU167
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 548              		.loc 2 208 26 is_stmt 0 view .LVU168
 549 007c 0CF1FF33 		add	r3, ip, #-1
 550              	.LVL48:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 551              		.loc 2 208 26 view .LVU169
 552 0080 9BB2     		uxth	r3, r3
 553              	.LVL49:
 554              	.L36:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 555              		.loc 2 209 9 is_stmt 1 view .LVU170
 556 0082 8145     		cmp	r9, r0
 557 0084 02D3     		bcc	.L37
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 558              		.loc 2 209 25 view .LVU171
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 559              		.loc 2 209 27 is_stmt 0 view .LVU172
 560 0086 0138     		subs	r0, r0, #1
 561 0088 1FFA80F9 		uxth	r9, r0
 562              	.LVL50:
 563              	.L37:
 564              		.loc 2 210 9 is_stmt 1 view .LVU173
 565              		.loc 2 210 27 is_stmt 0 view .LVU174
 566 008c 0CFB0933 		mla	r3, ip, r9, r3
 567              	.LVL51:
 568              		.loc 2 210 39 view .LVU175
 569 0090 07EBC307 		add	r7, r7, r3, lsl #3
 570              	.LVL52:
 571              		.loc 2 210 39 view .LVU176
 572              	.LBE153:
 573              	.LBE155:
 103:GFX.cpp       ****         while (pFrame < pEndLigne){
 574              		.loc 1 103 9 is_stmt 1 view .LVU177
 575              		.loc 1 103 23 view .LVU178
 576 0094 9742     		cmp	r7, r2
 577 0096 14D9     		bls	.L26
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 18


 578 0098 D343     		mvns	r3, r2
 579 009a 02F11001 		add	r1, r2, #16
 580 009e 0832     		adds	r2, r2, #8
 581              	.LVL53:
 582              		.loc 1 103 23 is_stmt 0 view .LVU179
 583 00a0 3B44     		add	r3, r3, r7
 584 00a2 23F00703 		bic	r3, r3, #7
 585 00a6 0B44     		add	r3, r3, r1
 586              	.LVL54:
 587              	.L39:
 104:GFX.cpp       ****             pFrame->set(Color);
 588              		.loc 1 104 13 is_stmt 1 view .LVU180
 589              	.LBB156:
 590              	.LBI156:
 130:Frame.h       ****         R = Color.m_R;
 591              		.loc 2 130 17 view .LVU181
 592              	.LBB157:
 131:Frame.h       ****         G = Color.m_G;
 593              		.loc 2 131 9 view .LVU182
 134:Frame.h       ****     }
 594              		.loc 2 134 20 is_stmt 0 view .LVU183
 595 00a8 52F8041C 		ldr	r1, [r2, #-4]
 596              	.LBE157:
 597              	.LBE156:
 103:GFX.cpp       ****             pFrame->set(Color);
 598              		.loc 1 103 23 view .LVU184
 599 00ac 0832     		adds	r2, r2, #8
 600              	.LVL55:
 601              	.LBB160:
 602              	.LBB158:
 131:Frame.h       ****         G = Color.m_G;
 603              		.loc 2 131 11 view .LVU185
 604 00ae 02F8106C 		strb	r6, [r2, #-16]
 132:Frame.h       ****         B = Color.m_B;
 605              		.loc 2 132 9 is_stmt 1 view .LVU186
 134:Frame.h       ****     }
 606              		.loc 2 134 20 is_stmt 0 view .LVU187
 607 00b2 0120     		movs	r0, #1
 132:Frame.h       ****         B = Color.m_B;
 608              		.loc 2 132 11 view .LVU188
 609 00b4 02F80F5C 		strb	r5, [r2, #-15]
 133:Frame.h       ****         *m_pChange = true;
 610              		.loc 2 133 9 is_stmt 1 view .LVU189
 133:Frame.h       ****         *m_pChange = true;
 611              		.loc 2 133 11 is_stmt 0 view .LVU190
 612 00b8 02F80E4C 		strb	r4, [r2, #-14]
 134:Frame.h       ****     }
 613              		.loc 2 134 9 is_stmt 1 view .LVU191
 614              	.LBE158:
 615              	.LBE160:
 103:GFX.cpp       ****             pFrame->set(Color);
 616              		.loc 1 103 23 is_stmt 0 view .LVU192
 617 00bc 9342     		cmp	r3, r2
 618              	.LBB161:
 619              	.LBB159:
 134:Frame.h       ****     }
 620              		.loc 2 134 20 view .LVU193
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 19


 621 00be 0870     		strb	r0, [r1]
 622              	.LVL56:
 134:Frame.h       ****     }
 623              		.loc 2 134 20 view .LVU194
 624              	.LBE159:
 625              	.LBE161:
 105:GFX.cpp       ****             pFrame++;
 626              		.loc 1 105 13 is_stmt 1 view .LVU195
 103:GFX.cpp       ****             pFrame->set(Color);
 627              		.loc 1 103 9 view .LVU196
 103:GFX.cpp       ****             pFrame->set(Color);
 628              		.loc 1 103 23 view .LVU197
 629 00c0 F2D1     		bne	.L39
 630              	.LVL57:
 631              	.L26:
 103:GFX.cpp       ****             pFrame->set(Color);
 632              		.loc 1 103 23 is_stmt 0 view .LVU198
 633              	.LBE146:
 634              	.LBE145:
 106:GFX.cpp       ****         }
 107:GFX.cpp       **** 
 108:GFX.cpp       **** 
 109:GFX.cpp       ****     }else if (dx == 0){
 110:GFX.cpp       ****         uint16_t Temp;
 111:GFX.cpp       ****         if(y1 < y0) {Temp = y1; y1 = y0 ; y0= Temp;}
 112:GFX.cpp       ****         pFrame = getPtr(x0,y0);
 113:GFX.cpp       ****         pEndLigne = getPtr(x1,y1);
 114:GFX.cpp       ****         while (pFrame < pEndLigne){
 115:GFX.cpp       ****             pFrame->set(Color);
 116:GFX.cpp       ****             pFrame += getWidth();
 117:GFX.cpp       ****         }
 118:GFX.cpp       ****     
 119:GFX.cpp       ****     }else if (dx >= dy) {
 120:GFX.cpp       ****         // more horizontal than vertical
 121:GFX.cpp       ****         int slope = 2 * dy;
 122:GFX.cpp       ****         int error = -dx;
 123:GFX.cpp       ****         int errorInc = -2 * dx;
 124:GFX.cpp       ****         int y = y0;
 125:GFX.cpp       **** 
 126:GFX.cpp       ****         for (int x = x0; x != x1 + incX; x += incX)
 127:GFX.cpp       ****         {
 128:GFX.cpp       ****             setPixel(x,y, Color);
 129:GFX.cpp       ****             error += slope;
 130:GFX.cpp       **** 
 131:GFX.cpp       ****             if (error >= 0)
 132:GFX.cpp       ****             {
 133:GFX.cpp       ****                 y += incY;
 134:GFX.cpp       ****                 error += errorInc;
 135:GFX.cpp       ****             }
 136:GFX.cpp       ****         }
 137:GFX.cpp       ****     
 138:GFX.cpp       ****     }else{
 139:GFX.cpp       ****         // more vertical than horizontal
 140:GFX.cpp       ****         int slope = 2 * dx;
 141:GFX.cpp       ****         int error = -dy;
 142:GFX.cpp       ****         int errorInc = -2 * dy;
 143:GFX.cpp       ****         int x = x0;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 20


 144:GFX.cpp       **** 
 145:GFX.cpp       ****         for (int y = y0; y != y1 + incY; y += incY)
 146:GFX.cpp       ****         {
 147:GFX.cpp       ****             setPixel(x,y, Color);
 148:GFX.cpp       ****             error += slope;
 149:GFX.cpp       **** 
 150:GFX.cpp       ****             if (error >= 0)
 151:GFX.cpp       ****             {
 152:GFX.cpp       ****                 x += incX;
 153:GFX.cpp       ****                 error += errorInc;
 154:GFX.cpp       ****             }
 155:GFX.cpp       ****         }
 156:GFX.cpp       ****     }
 157:GFX.cpp       **** }
 635              		.loc 1 157 1 view .LVU199
 636 00c2 05B0     		add	sp, sp, #20
 637              		.cfi_remember_state
 638              		.cfi_def_cfa_offset 36
 639              		@ sp needed
 640 00c4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 641              	.LVL58:
 642              	.L30:
 643              		.cfi_restore_state
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 644              		.loc 1 91 5 is_stmt 1 view .LVU200
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 645              		.loc 1 91 16 view .LVU201
  92:GFX.cpp       **** 
 646              		.loc 1 92 5 view .LVU202
  89:GFX.cpp       ****     int incY = dy < 0 ? -1 : (dy > 0 ? 1 : 0);
 647              		.loc 1 89 23 is_stmt 0 view .LVU203
 648 00c8 4FF0FF37 		mov	r7, #-1
 649              	.LVL59:
 650              	.L29:
  92:GFX.cpp       **** 
 651              		.loc 1 92 16 is_stmt 1 discriminator 1 view .LVU204
  92:GFX.cpp       **** 
 652              		.loc 1 92 19 is_stmt 0 discriminator 1 view .LVU205
 653 00cc A2EB090C 		sub	ip, r2, r9
 654              	.LVL60:
  92:GFX.cpp       **** 
 655              		.loc 1 92 19 discriminator 1 view .LVU206
 656 00d0 4FF0FF38 		mov	r8, #-1
 657 00d4 0FFA8CFC 		sxth	ip, ip
 658              	.LVL61:
  94:GFX.cpp       ****     RGB *pEndLigne;
 659              		.loc 1 94 5 is_stmt 1 discriminator 1 view .LVU207
  95:GFX.cpp       ****  
 660              		.loc 1 95 5 discriminator 1 view .LVU208
  97:GFX.cpp       ****         // horizontal line
 661              		.loc 1 97 5 discriminator 1 view .LVU209
 662              	.LBB218:
 663 00d8 BCF1000F 		cmp	ip, #0
 664 00dc B5D0     		beq	.L58
 665              	.L32:
  97:GFX.cpp       ****         // horizontal line
 666              		.loc 1 97 5 is_stmt 0 discriminator 1 view .LVU210
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 21


 667              	.LBE218:
 109:GFX.cpp       ****         uint16_t Temp;
 668              		.loc 1 109 11 is_stmt 1 view .LVU211
 669              	.LBB219:
 670              	.LBB162:
 671 00de BEF1000F 		cmp	lr, #0
 672 00e2 3FD1     		bne	.L40
 673              	.LBB163:
 110:GFX.cpp       ****         if(y1 < y0) {Temp = y1; y1 = y0 ; y0= Temp;}
 674              		.loc 1 110 9 view .LVU212
 111:GFX.cpp       ****         pFrame = getPtr(x0,y0);
 675              		.loc 1 111 9 view .LVU213
 676 00e4 9145     		cmp	r9, r2
 677 00e6 02D2     		bcs	.L41
 678 00e8 1746     		mov	r7, r2
 679 00ea 4A46     		mov	r2, r9
 680              	.LVL62:
 111:GFX.cpp       ****         pFrame = getPtr(x0,y0);
 681              		.loc 1 111 9 is_stmt 0 view .LVU214
 682 00ec B946     		mov	r9, r7
 683              	.L41:
 684              	.LVL63:
 112:GFX.cpp       ****         pEndLigne = getPtr(x1,y1);
 685              		.loc 1 112 9 is_stmt 1 view .LVU215
 686 00ee B0F85C70 		ldrh	r7, [r0, #92]
 687 00f2 D0F854C0 		ldr	ip, [r0, #84]
 688              	.LVL64:
 689              	.LBB164:
 690              	.LBB165:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 691              		.loc 2 208 9 is_stmt 0 view .LVU216
 692 00f6 B942     		cmp	r1, r7
 693 00f8 B0F85E00 		ldrh	r0, [r0, #94]
 694              	.LVL65:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 695              		.loc 2 208 9 view .LVU217
 696              	.LBE165:
 697              	.LBI164:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 698              		.loc 2 207 17 is_stmt 1 view .LVU218
 699              	.LBB166:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 700              		.loc 2 208 9 view .LVU219
 701 00fc 01D3     		bcc	.L42
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 702              		.loc 2 208 24 view .LVU220
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 703              		.loc 2 208 26 is_stmt 0 view .LVU221
 704 00fe 791E     		subs	r1, r7, #1
 705              	.LVL66:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 706              		.loc 2 208 26 view .LVU222
 707 0100 89B2     		uxth	r1, r1
 708              	.LVL67:
 709              	.L42:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 710              		.loc 2 209 9 is_stmt 1 view .LVU223
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 22


 711 0102 8242     		cmp	r2, r0
 712 0104 01D3     		bcc	.L43
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 713              		.loc 2 209 25 view .LVU224
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 714              		.loc 2 209 27 is_stmt 0 view .LVU225
 715 0106 421E     		subs	r2, r0, #1
 716              	.LVL68:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 717              		.loc 2 209 27 view .LVU226
 718 0108 92B2     		uxth	r2, r2
 719              	.LVL69:
 720              	.L43:
 721              		.loc 2 210 9 is_stmt 1 view .LVU227
 722              		.loc 2 210 27 is_stmt 0 view .LVU228
 723 010a 07FB0212 		mla	r2, r7, r2, r1
 724              	.LBE166:
 725              	.LBE164:
 726              	.LBB168:
 727              	.LBB169:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 728              		.loc 2 208 9 view .LVU229
 729 010e BB42     		cmp	r3, r7
 730              	.LBE169:
 731              	.LBE168:
 732              	.LBB172:
 733              	.LBB167:
 734              		.loc 2 210 39 view .LVU230
 735 0110 0CEBC202 		add	r2, ip, r2, lsl #3
 736              	.LVL70:
 737              		.loc 2 210 39 view .LVU231
 738              	.LBE167:
 739              	.LBE172:
 113:GFX.cpp       ****         while (pFrame < pEndLigne){
 740              		.loc 1 113 9 is_stmt 1 view .LVU232
 741              	.LBB173:
 742              	.LBI168:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 743              		.loc 2 207 17 view .LVU233
 744              	.LBB170:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 745              		.loc 2 208 9 view .LVU234
 746 0114 01D3     		bcc	.L44
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 747              		.loc 2 208 24 view .LVU235
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 748              		.loc 2 208 26 is_stmt 0 view .LVU236
 749 0116 7B1E     		subs	r3, r7, #1
 750              	.LVL71:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 751              		.loc 2 208 26 view .LVU237
 752 0118 9BB2     		uxth	r3, r3
 753              	.LVL72:
 754              	.L44:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 755              		.loc 2 209 9 is_stmt 1 view .LVU238
 756 011a 8145     		cmp	r9, r0
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 23


 757 011c 80F09A80 		bcs	.L59
 758              	.LVL73:
 759              	.L45:
 760              		.loc 2 210 9 view .LVU239
 761              		.loc 2 210 27 is_stmt 0 view .LVU240
 762 0120 07FB0939 		mla	r9, r7, r9, r3
 763              	.LVL74:
 764              		.loc 2 210 39 view .LVU241
 765 0124 0CEBC909 		add	r9, ip, r9, lsl #3
 766              	.LVL75:
 767              		.loc 2 210 39 view .LVU242
 768              	.LBE170:
 769              	.LBE173:
 114:GFX.cpp       ****             pFrame->set(Color);
 770              		.loc 1 114 9 is_stmt 1 view .LVU243
 114:GFX.cpp       ****             pFrame->set(Color);
 771              		.loc 1 114 23 view .LVU244
 772 0128 9145     		cmp	r9, r2
 773 012a CAD9     		bls	.L26
 116:GFX.cpp       ****         }
 774              		.loc 1 116 20 is_stmt 0 view .LVU245
 775 012c F800     		lsls	r0, r7, #3
 776              	.L46:
 115:GFX.cpp       ****             pFrame += getWidth();
 777              		.loc 1 115 13 is_stmt 1 view .LVU246
 778              	.LVL76:
 779              	.LBB174:
 780              	.LBI174:
 130:Frame.h       ****         R = Color.m_R;
 781              		.loc 2 130 17 view .LVU247
 782              	.LBB175:
 131:Frame.h       ****         G = Color.m_G;
 783              		.loc 2 131 9 view .LVU248
 134:Frame.h       ****     }
 784              		.loc 2 134 20 is_stmt 0 view .LVU249
 785 012e 5368     		ldr	r3, [r2, #4]
 786 0130 0121     		movs	r1, #1
 131:Frame.h       ****         G = Color.m_G;
 787              		.loc 2 131 11 view .LVU250
 788 0132 1670     		strb	r6, [r2]
 132:Frame.h       ****         B = Color.m_B;
 789              		.loc 2 132 9 is_stmt 1 view .LVU251
 132:Frame.h       ****         B = Color.m_B;
 790              		.loc 2 132 11 is_stmt 0 view .LVU252
 791 0134 5570     		strb	r5, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 792              		.loc 2 133 9 is_stmt 1 view .LVU253
 133:Frame.h       ****         *m_pChange = true;
 793              		.loc 2 133 11 is_stmt 0 view .LVU254
 794 0136 9470     		strb	r4, [r2, #2]
 134:Frame.h       ****     }
 795              		.loc 2 134 9 is_stmt 1 view .LVU255
 796              	.LBE175:
 797              	.LBE174:
 116:GFX.cpp       ****         }
 798              		.loc 1 116 20 is_stmt 0 view .LVU256
 799 0138 0244     		add	r2, r2, r0
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 24


 800              	.LVL77:
 801              	.LBB177:
 802              	.LBB176:
 134:Frame.h       ****     }
 803              		.loc 2 134 20 view .LVU257
 804 013a 1970     		strb	r1, [r3]
 805              	.LVL78:
 134:Frame.h       ****     }
 806              		.loc 2 134 20 view .LVU258
 807              	.LBE176:
 808              	.LBE177:
 116:GFX.cpp       ****         }
 809              		.loc 1 116 13 is_stmt 1 view .LVU259
 116:GFX.cpp       ****         }
 810              		.loc 1 116 13 is_stmt 0 view .LVU260
 811              	.LBE163:
 812              	.LBE162:
 813              	.LBE219:
 814              		.file 3 "GFX.h"
   1:GFX.h         **** //------------------------------------------------------------------------
   2:GFX.h         **** // Copyright(c) 2024 Dad Design.
   3:GFX.h         **** //      Bibliothèque graphique
   4:GFX.h         **** //
   5:GFX.h         **** // Inspiré largement de :
   6:GFX.h         **** //    Adafruit-GFX-Library : https://github.com/adafruit/Adafruit-GFX-Library
   7:GFX.h         **** //    eSPI : https://github.com/Bodmer/TFT_eSPI
   8:GFX.h         **** //------------------------------------------------------------------------
   9:GFX.h         **** #pragma once
  10:GFX.h         **** #include "Frame.h"
  11:GFX.h         **** #define PROGMEM
  12:GFX.h         **** 
  13:GFX.h         **** constexpr float __PI = 3.14159265358979;
  14:GFX.h         **** 
  15:GFX.h         **** //***********************************************************************************
  16:GFX.h         **** // CFont
  17:GFX.h         **** // Gestion des polices de caratères
  18:GFX.h         **** // Utilisation de la structuration des fonts de Adafruit-GFX-Library
  19:GFX.h         **** // Ce qui permet de profiter des outils de conversion (ex: https://rop.nl/truetype2gfx/)
  20:GFX.h         **** 
  21:GFX.h         **** // Table ds descripteurs de caratères
  22:GFX.h         **** typedef struct
  23:GFX.h         **** {
  24:GFX.h         ****     uint16_t bitmapOffset; ///< Pointer into GFXfont->bitmap
  25:GFX.h         ****     uint8_t width;         ///< Bitmap dimensions in pixels
  26:GFX.h         ****     uint8_t height;        ///< Bitmap dimensions in pixels
  27:GFX.h         ****     uint8_t xAdvance;      ///< Distance to advance cursor (x axis)
  28:GFX.h         ****     int8_t xOffset;        ///< X dist from cursor pos to UL corner
  29:GFX.h         ****     int8_t yOffset;         ///< Y dist from cursor pos to UL corner
  30:GFX.h         **** } GFXglyph;
  31:GFX.h         **** 
  32:GFX.h         **** // Descripteur de la Font
  33:GFX.h         **** typedef struct
  34:GFX.h         **** {
  35:GFX.h         ****     uint8_t *bitmap;  ///< Glyph bitmaps, concatenated
  36:GFX.h         ****     GFXglyph *glyph;  ///< Glyph array
  37:GFX.h         ****     uint16_t first;   ///< ASCII extents (first char)
  38:GFX.h         ****     uint16_t last;    ///< ASCII extents (last char)
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 25


  39:GFX.h         ****     uint8_t yAdvance; ///< Newline distance (y axis)
  40:GFX.h         **** } GFXfont;
  41:GFX.h         **** 
  42:GFX.h         **** // cFont
  43:GFX.h         **** class cFont
  44:GFX.h         **** {
  45:GFX.h         **** public:
  46:GFX.h         ****     // --------------------------------------------------------------------------
  47:GFX.h         ****     // Constructeur
  48:GFX.h         ****     cFont(const GFXfont *pFont);
  49:GFX.h         **** 
  50:GFX.h         ****     // --------------------------------------------------------------------------
  51:GFX.h         ****     // Lecture le la largueur du caratère c
  52:GFX.h         ****     uint8_t getCharWidth(char c)
  53:GFX.h         ****     {
  54:GFX.h         ****         return ((m_pFont->glyph) + (c - m_pFont->first))->xAdvance;
  55:GFX.h         ****     }
  56:GFX.h         **** 
  57:GFX.h         ****     // --------------------------------------------------------------------------
  58:GFX.h         ****     // Lecture le la largueur de la chaine de caratère.
  59:GFX.h         ****     uint16_t getTextWidth(const char *Text)
  60:GFX.h         ****     {
  61:GFX.h         ****         const char *pText = Text;
  62:GFX.h         ****         uint16_t result = 0;
  63:GFX.h         ****         while (*pText != '\0')
  64:GFX.h         ****         {
  65:GFX.h         ****             result += getCharWidth(*pText++);
  66:GFX.h         ****         }
  67:GFX.h         ****         return result;
  68:GFX.h         ****     }
  69:GFX.h         **** 
  70:GFX.h         ****     // --------------------------------------------------------------------------
  71:GFX.h         ****     // Lecture de la hauteur max de la font
  72:GFX.h         ****     inline uint8_t getHeight()
  73:GFX.h         ****     {
  74:GFX.h         ****         return m_NegHeight - m_PosHeight;
  75:GFX.h         ****     }
  76:GFX.h         **** 
  77:GFX.h         ****     // --------------------------------------------------------------------------
  78:GFX.h         ****     // Lecture de la hauteur max de la font au dessus la ligne du curseur
  79:GFX.h         ****     inline uint8_t getPosHeight()
  80:GFX.h         ****     {
  81:GFX.h         ****         return -m_PosHeight;
  82:GFX.h         ****     }
  83:GFX.h         **** 
  84:GFX.h         ****     // --------------------------------------------------------------------------
  85:GFX.h         ****     // Lecture de la hauteur max de la font sous la ligne du curseur
  86:GFX.h         ****     inline uint8_t getNegHeight()
  87:GFX.h         ****     {
  88:GFX.h         ****         return m_NegHeight;
  89:GFX.h         ****     }
  90:GFX.h         **** 
  91:GFX.h         ****     // --------------------------------------------------------------------------
  92:GFX.h         ****     // Lecture de l'adresse du descripteur de font
  93:GFX.h         ****     inline const GFXfont *getGFXfont() { return m_pFont; }
  94:GFX.h         **** 
  95:GFX.h         ****     // --------------------------------------------------------------------------
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 26


  96:GFX.h         ****     // Lecture de l'adresse de la table des decripteurs de caratères
  97:GFX.h         ****     inline const GFXglyph *getGFXglyph() { return m_pTable; }
  98:GFX.h         **** 
  99:GFX.h         ****     // --------------------------------------------------------------------------
 100:GFX.h         ****     // Lecture de l'adresse du descripteur du caratère c
 101:GFX.h         ****     inline const GFXglyph *getGFXglyph(char c)
 102:GFX.h         ****     {
 103:GFX.h         ****         return m_pTable + (c - m_pFont->first);
 104:GFX.h         ****     }
 105:GFX.h         **** 
 106:GFX.h         ****     // --------------------------------------------------------------------------
 107:GFX.h         ****     // Lecteur de l'adresse du bitmap représentant c
 108:GFX.h         ****     inline const uint8_t *getBitmap(char c)
 109:GFX.h         ****     {
 110:GFX.h         ****         return &m_pFont->bitmap[m_pTable[c - m_pFont->first].bitmapOffset];
 111:GFX.h         ****     }
 112:GFX.h         **** 
 113:GFX.h         ****     // --------------------------------------------------------------------------
 114:GFX.h         ****     // Données de la classe
 115:GFX.h         **** protected:
 116:GFX.h         ****     const GFXfont *m_pFont; // Descripteur de la font
 117:GFX.h         ****     GFXglyph *m_pTable;     // Table des descripteurs de caratères
 118:GFX.h         **** 
 119:GFX.h         ****     int8_t m_PosHeight; // Hauteur au dessus de la ligne du curseur
 120:GFX.h         ****     int8_t m_NegHeight; // Hauteur sous la ligne du curseur
 121:GFX.h         **** };
 122:GFX.h         **** 
 123:GFX.h         **** //***********************************************************************************
 124:GFX.h         **** // cGFX
 125:GFX.h         **** //   Bibliothèque Graphique
 126:GFX.h         **** class cGFX : protected cRBG_Frame
 127:GFX.h         **** {
 128:GFX.h         **** public:
 129:GFX.h         ****     // --------------------------------------------------------------------------
 130:GFX.h         ****     // Constructeur
 131:GFX.h         ****     cGFX() {}
 132:GFX.h         **** 
 133:GFX.h         ****     // --------------------------------------------------------------------------
 134:GFX.h         ****     // Initialisation de la classe
 135:GFX.h         ****     // Doit être appelée avant toute utilisation (aucune vérification réalisée) 
 136:GFX.h         ****     //   pFrameBuff pointe sur la mémoire de frame à instancier de préférence dans la SDRAM  
 137:GFX.h         ****     //   pFIFO_Data pointe sur la mémoire du FIFO DMA utilisé pour les transfers SPI 
 138:GFX.h         ****     //              doit etre obligatoirement instancié dans la SDRAM D1 (DMA_BUFFER_MEM_SECTION)
 139:GFX.h         ****     //   Width, Height taille de l'écran
 140:GFX.h         ****     //
 141:GFX.h         ****     void Init(RGB *pFrameBuff, FIFO_Data *pFIFO_Data, uint16_t Width, uint16_t Height)
 142:GFX.h         ****     {
 143:GFX.h         ****         setFrame(pFrameBuff, pFIFO_Data, Width, Height);
 144:GFX.h         ****     }
 145:GFX.h         ****     
 146:GFX.h         ****     // --------------------------------------------------------------------------
 147:GFX.h         ****     // Changer l'orientation de l'écran
 148:GFX.h         ****     void setRotation(Rotation r)
 149:GFX.h         ****     {
 150:GFX.h         ****         setFrameRotation(r);
 151:GFX.h         ****     }
 152:GFX.h         ****     
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 27


 153:GFX.h         ****     // --------------------------------------------------------------------------
 154:GFX.h         ****     // Transmette les modifications de la frame à l'écran
 155:GFX.h         ****     inline void FlushFrame() { cRBG_Frame::FlushFrame();}
 156:GFX.h         **** 
 157:GFX.h         ****     // ==========================================================================
 158:GFX.h         ****     // Dessiner des formes
 159:GFX.h         ****     // ==========================================================================
 160:GFX.h         ****     // Tracer un rectange vide 
 161:GFX.h         ****     void drawRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color);
 162:GFX.h         ****     // Tracer un rectangle plein
 163:GFX.h         ****     void drawFillRect(uint16_t x, uint16_t y, int16_t dx, int16_t dy, cColor Color);
 164:GFX.h         ****     // Trace une ligne
 165:GFX.h         ****     void drawLine(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, cColor Color);
 166:GFX.h         ****     // Tracer un cercle vide
 167:GFX.h         ****     void drawCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color);
 168:GFX.h         ****     // Tracer un arc de cercle vide
 169:GFX.h         ****     void drawArc(uint16_t centerX, uint16_t centerY, uint16_t radius, uint16_t AlphaIn, uint16_t Al
 170:GFX.h         ****     // Tracer un cercle plein
 171:GFX.h         ****     void drawFillCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color);
 172:GFX.h         ****     // Tracer une image 8bits par couleurs
 173:GFX.h         ****     void drawR8G8B8Image(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, const uint8_t *pImg);
 174:GFX.h         ****     void drawGhost(uint16_t x, uint16_t y, uint16_t width, uint16_t height, cColor bodyColor, cColo
 175:GFX.h         ****     void drawExplosion(uint16_t x, uint16_t y, uint16_t size, cColor mainColor, cColor secondaryCol
 176:GFX.h         **** 
 177:GFX.h         ****     // ==========================================================================
 178:GFX.h         ****     // Dessiner du texte
 179:GFX.h         ****     // ==========================================================================
 180:GFX.h         ****     // Positionnement du cuseur
 181:GFX.h         ****     inline void setCursor(uint16_t x, uint16_t y){
 182:GFX.h         ****         m_xCursor = x;
 183:GFX.h         ****         m_yCursor = y;
 184:GFX.h         ****     };
 185:GFX.h         ****     
 186:GFX.h         ****     // Configuration de la fonte
 187:GFX.h         ****     inline void setFont(cFont *pFont){ m_pFont = pFont; };
 188:GFX.h         **** 
 189:GFX.h         ****     // Configuration de la couleur du texte
 190:GFX.h         ****     inline void setTextFrontColor(cColor Color) { m_TextFrontColor = Color;}
 191:GFX.h         ****     
 192:GFX.h         ****     // Configuration de la couleur de l'arrière plan du texte
 193:GFX.h         ****     inline void setTextBackColor(cColor Color) { m_TextBackColor = Color; }
 194:GFX.h         ****     
 195:GFX.h         ****     // Dessiner le caractère c
 196:GFX.h         ****     void drawChar(const char c, bool Erase = false);
 197:GFX.h         ****     
 198:GFX.h         ****     // Dessiner le texte sans couleur d'arriere plan
 199:GFX.h         ****     void drawTransText(const char *Text, bool Erase = false);
 200:GFX.h         ****     
 201:GFX.h         ****     // Dessiner le texte
 202:GFX.h         ****     void drawText(const char *Text, bool Erase = false);
 203:GFX.h         **** 
 204:GFX.h         ****     // Lire la position du curseur en X
 205:GFX.h         ****     inline uint8_t getXCursor() { return m_xCursor; }
 206:GFX.h         **** 
 207:GFX.h         ****     // Lire la position du curseur en Y
 208:GFX.h         ****     inline uint8_t getYCursor() { return m_xCursor; }
 209:GFX.h         **** 
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 28


 210:GFX.h         ****     // Lire la fonte courante
 211:GFX.h         ****     inline cFont *getFont() { return m_pFont; }
 212:GFX.h         ****     
 213:GFX.h         ****     // Lire la hauteur de la frame
 214:GFX.h         ****     inline uint16_t getWidth() { return cRBG_Frame::getWidth(); }
 815              		.loc 3 214 34 is_stmt 1 view .LVU261
 211:Frame.h       ****     } 
 212:Frame.h       **** 
 213:Frame.h       ****     // --------------------------------------------------------------------------
 214:Frame.h       ****     // Ecriture d'un pixel 
 215:Frame.h       ****     inline void setPixel(uint16_t x, uint16_t y, cColor Color){
 216:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 217:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 218:Frame.h       ****         }
 219:Frame.h       ****     }
 220:Frame.h       ****     
 221:Frame.h       ****     // ==========================================================================
 222:Frame.h       ****     // Hauteur / Largeur
 223:Frame.h       ****     // --------------------------------------------------------------------------
 224:Frame.h       ****     // Lecture de la largeur de la frame
 225:Frame.h       ****     inline uint16_t getWidth() {
 226:Frame.h       ****         return m_Width ;
 816              		.loc 2 226 9 view .LVU262
 817              	.LBB220:
 818              	.LBB214:
 819              	.LBB179:
 114:GFX.cpp       ****             pFrame->set(Color);
 820              		.loc 1 114 9 view .LVU263
 114:GFX.cpp       ****             pFrame->set(Color);
 821              		.loc 1 114 23 view .LVU264
 822 013c 4A45     		cmp	r2, r9
 823 013e F6D3     		bcc	.L46
 824              	.LBE179:
 825              	.LBE214:
 826              	.LBE220:
 827              		.loc 1 157 1 is_stmt 0 view .LVU265
 828 0140 05B0     		add	sp, sp, #20
 829              		.cfi_remember_state
 830              		.cfi_def_cfa_offset 36
 831              		@ sp needed
 832 0142 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 833              	.LVL79:
 834              	.L27:
 835              		.cfi_restore_state
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
 836              		.loc 1 90 5 is_stmt 1 discriminator 8 view .LVU266
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 837              		.loc 1 91 19 is_stmt 0 discriminator 8 view .LVU267
 838 0146 A1EB030E 		sub	lr, r1, r3
 839              	.LVL80:
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
 840              		.loc 1 90 23 discriminator 8 view .LVU268
 841 014a BCF1000F 		cmp	ip, #0
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 842              		.loc 1 91 19 discriminator 8 view .LVU269
 843 014e 0FFA8EFE 		sxth	lr, lr
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 29


 844              		.loc 1 90 23 discriminator 8 view .LVU270
 845 0152 B9DB     		blt	.L30
  90:GFX.cpp       ****     if(dx < 0) dx = -dx;
 846              		.loc 1 90 38 discriminator 1 view .LVU271
 847 0154 14BF     		ite	ne
 848 0156 4FF00108 		movne	r8, #1
 849 015a 4FF00008 		moveq	r8, #0
 850              	.LVL81:
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 851              		.loc 1 91 5 is_stmt 1 discriminator 1 view .LVU272
  91:GFX.cpp       ****     if(dy < 0) dy = -dy;
 852              		.loc 1 91 16 discriminator 1 view .LVU273
  92:GFX.cpp       **** 
 853              		.loc 1 92 5 discriminator 1 view .LVU274
  89:GFX.cpp       ****     int incY = dy < 0 ? -1 : (dy > 0 ? 1 : 0);
 854              		.loc 1 89 23 is_stmt 0 discriminator 1 view .LVU275
 855 015e 4FF0FF37 		mov	r7, #-1
 856 0162 6FE7     		b	.L31
 857              	.LVL82:
 858              	.L40:
 119:GFX.cpp       ****         // more horizontal than vertical
 859              		.loc 1 119 11 is_stmt 1 view .LVU276
 860              	.LBB221:
 861              	.LBB215:
 862              	.LBB180:
 863 0164 F445     		cmp	ip, lr
 864 0166 3CDC     		bgt	.L47
 865              	.LBB181:
 121:GFX.cpp       ****         int error = -dx;
 866              		.loc 1 121 9 view .LVU277
 123:GFX.cpp       ****         int y = y0;
 867              		.loc 1 123 13 is_stmt 0 view .LVU278
 868 0168 CEEBCE79 		rsb	r9, lr, lr, lsl #31
 124:GFX.cpp       **** 
 869              		.loc 1 124 13 view .LVU279
 870 016c 9246     		mov	r10, r2
 121:GFX.cpp       ****         int error = -dx;
 871              		.loc 1 121 13 view .LVU280
 872 016e 4FEA4C0C 		lsl	ip, ip, #1
 873              	.LVL83:
 122:GFX.cpp       ****         int errorInc = -2 * dx;
 874              		.loc 1 122 9 is_stmt 1 view .LVU281
 122:GFX.cpp       ****         int errorInc = -2 * dx;
 875              		.loc 1 122 13 is_stmt 0 view .LVU282
 876 0172 CEF1000E 		rsb	lr, lr, #0
 877              	.LVL84:
 123:GFX.cpp       ****         int y = y0;
 878              		.loc 1 123 9 is_stmt 1 view .LVU283
 124:GFX.cpp       **** 
 879              		.loc 1 124 9 view .LVU284
 126:GFX.cpp       ****         {
 880              		.loc 1 126 9 view .LVU285
 881              	.LBB182:
 126:GFX.cpp       ****         {
 882              		.loc 1 126 28 view .LVU286
 883              	.LBE182:
 123:GFX.cpp       ****         int y = y0;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 30


 884              		.loc 1 123 13 is_stmt 0 view .LVU287
 885 0176 4FEA4902 		lsl	r2, r9, #1
 886              	.LVL85:
 887              	.LBB195:
 126:GFX.cpp       ****         {
 888              		.loc 1 126 34 view .LVU288
 889 017a 07EB0309 		add	r9, r7, r3
 126:GFX.cpp       ****         {
 890              		.loc 1 126 28 view .LVU289
 891 017e 4945     		cmp	r1, r9
 892              	.LBE195:
 123:GFX.cpp       ****         int y = y0;
 893              		.loc 1 123 13 view .LVU290
 894 0180 0392     		str	r2, [sp, #12]
 895              	.LVL86:
 896              	.LBB196:
 126:GFX.cpp       ****         {
 897              		.loc 1 126 28 view .LVU291
 898 0182 9ED0     		beq	.L26
 899              	.LBB183:
 900              	.LBB184:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 901              		.loc 2 216 15 view .LVU292
 902 0184 5246     		mov	r2, r10
 903 0186 B0F85CB0 		ldrh	fp, [r0, #92]
 904 018a 9A46     		mov	r10, r3
 905              	.LVL87:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 906              		.loc 2 216 15 view .LVU293
 907 018c CDE90145 		strd	r4, r5, [sp, #4]
 908 0190 039C     		ldr	r4, [sp, #12]
 909              	.LVL88:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 910              		.loc 2 216 15 view .LVU294
 911 0192 00E0     		b	.L50
 912              	.LVL89:
 913              	.L60:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 914              		.loc 2 216 15 view .LVU295
 915              	.LBE184:
 916              	.LBE183:
 126:GFX.cpp       ****         {
 917              		.loc 1 126 44 view .LVU296
 918 0194 1946     		mov	r1, r3
 919              	.LVL90:
 920              	.L50:
 128:GFX.cpp       ****             error += slope;
 921              		.loc 1 128 13 is_stmt 1 view .LVU297
 922              	.LBB193:
 923              	.LBI183:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 924              		.loc 2 215 17 view .LVU298
 925              	.LBB191:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 926              		.loc 2 216 9 view .LVU299
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 927              		.loc 2 216 9 is_stmt 0 view .LVU300
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 31


 928              	.LBE191:
 929              	.LBE193:
 129:GFX.cpp       **** 
 930              		.loc 1 129 13 is_stmt 1 view .LVU301
 131:GFX.cpp       ****             {
 931              		.loc 1 131 13 view .LVU302
 133:GFX.cpp       ****                 error += errorInc;
 932              		.loc 1 133 17 view .LVU303
 933              	.LBB194:
 934              	.LBB192:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 935              		.loc 2 216 9 is_stmt 0 view .LVU304
 936 0196 8BB2     		uxth	r3, r1
 937 0198 5B45     		cmp	r3, fp
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 938              		.loc 2 216 24 view .LVU305
 939 019a 93B2     		uxth	r3, r2
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 940              		.loc 2 216 9 view .LVU306
 941 019c 15D2     		bcs	.L48
 217:Frame.h       ****         }
 942              		.loc 2 217 13 is_stmt 1 view .LVU307
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 943              		.loc 2 216 24 is_stmt 0 view .LVU308
 944 019e B0F85E90 		ldrh	r9, [r0, #94]
 945 01a2 9945     		cmp	r9, r3
 946 01a4 11D9     		bls	.L48
 217:Frame.h       ****         }
 947              		.loc 2 217 26 view .LVU309
 948 01a6 9946     		mov	r9, r3
 217:Frame.h       ****         }
 949              		.loc 2 217 23 view .LVU310
 950 01a8 8BB2     		uxth	r3, r1
 951              	.LBB185:
 952              	.LBB186:
 132:Frame.h       ****         B = Color.m_B;
 953              		.loc 2 132 11 view .LVU311
 954 01aa 029D     		ldr	r5, [sp, #8]
 955              	.LBE186:
 956              	.LBE185:
 217:Frame.h       ****         }
 957              		.loc 2 217 23 view .LVU312
 958 01ac 0BFB0939 		mla	r9, fp, r9, r3
 217:Frame.h       ****         }
 959              		.loc 2 217 40 view .LVU313
 960 01b0 436D     		ldr	r3, [r0, #84]
 961              	.LBB189:
 962              	.LBB187:
 131:Frame.h       ****         G = Color.m_G;
 963              		.loc 2 131 11 view .LVU314
 964 01b2 03F83960 		strb	r6, [r3, r9, lsl #3]
 965              	.LBE187:
 966              	.LBE189:
 217:Frame.h       ****         }
 967              		.loc 2 217 40 view .LVU315
 968 01b6 03EBC903 		add	r3, r3, r9, lsl #3
 969              	.LVL91:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 32


 970              	.LBB190:
 971              	.LBI185:
 130:Frame.h       ****         R = Color.m_R;
 972              		.loc 2 130 17 is_stmt 1 view .LVU316
 973              	.LBB188:
 131:Frame.h       ****         G = Color.m_G;
 974              		.loc 2 131 9 view .LVU317
 132:Frame.h       ****         B = Color.m_B;
 975              		.loc 2 132 9 view .LVU318
 134:Frame.h       ****     }
 976              		.loc 2 134 20 is_stmt 0 view .LVU319
 977 01ba 4FF00109 		mov	r9, #1
 132:Frame.h       ****         B = Color.m_B;
 978              		.loc 2 132 11 view .LVU320
 979 01be 5D70     		strb	r5, [r3, #1]
 133:Frame.h       ****         *m_pChange = true;
 980              		.loc 2 133 9 is_stmt 1 view .LVU321
 133:Frame.h       ****         *m_pChange = true;
 981              		.loc 2 133 11 is_stmt 0 view .LVU322
 982 01c0 019D     		ldr	r5, [sp, #4]
 983 01c2 9D70     		strb	r5, [r3, #2]
 134:Frame.h       ****     }
 984              		.loc 2 134 9 is_stmt 1 view .LVU323
 134:Frame.h       ****     }
 985              		.loc 2 134 20 is_stmt 0 view .LVU324
 986 01c4 5B68     		ldr	r3, [r3, #4]
 987              	.LVL92:
 134:Frame.h       ****     }
 988              		.loc 2 134 20 view .LVU325
 989 01c6 83F80090 		strb	r9, [r3]
 990              	.LVL93:
 991              	.L48:
 134:Frame.h       ****     }
 992              		.loc 2 134 20 view .LVU326
 993              	.LBE188:
 994              	.LBE190:
 995              	.LBE192:
 996              	.LBE194:
 131:GFX.cpp       ****             {
 997              		.loc 1 131 13 view .LVU327
 998 01ca 1EEB0C0E 		adds	lr, lr, ip
 999              	.LVL94:
 131:GFX.cpp       ****             {
 1000              		.loc 1 131 13 view .LVU328
 1001 01ce 01D4     		bmi	.L49
 133:GFX.cpp       ****                 error += errorInc;
 1002              		.loc 1 133 19 view .LVU329
 1003 01d0 4244     		add	r2, r2, r8
 1004              	.LVL95:
 134:GFX.cpp       ****             }
 1005              		.loc 1 134 17 is_stmt 1 view .LVU330
 134:GFX.cpp       ****             }
 1006              		.loc 1 134 23 is_stmt 0 view .LVU331
 1007 01d2 A644     		add	lr, lr, r4
 1008              	.LVL96:
 1009              	.L49:
 126:GFX.cpp       ****         {
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 33


 1010              		.loc 1 126 9 is_stmt 1 discriminator 2 view .LVU332
 126:GFX.cpp       ****         {
 1011              		.loc 1 126 28 is_stmt 0 discriminator 2 view .LVU333
 1012 01d4 8A45     		cmp	r10, r1
 126:GFX.cpp       ****         {
 1013              		.loc 1 126 44 discriminator 2 view .LVU334
 1014 01d6 07EB0103 		add	r3, r7, r1
 1015              	.LVL97:
 126:GFX.cpp       ****         {
 1016              		.loc 1 126 28 is_stmt 1 discriminator 2 view .LVU335
 1017 01da DBD1     		bne	.L60
 126:GFX.cpp       ****         {
 1018              		.loc 1 126 28 is_stmt 0 discriminator 2 view .LVU336
 1019              	.LBE196:
 1020              	.LBE181:
 1021              	.LBE180:
 1022              	.LBE215:
 1023              	.LBE221:
 1024              		.loc 1 157 1 view .LVU337
 1025 01dc 05B0     		add	sp, sp, #20
 1026              		.cfi_remember_state
 1027              		.cfi_def_cfa_offset 36
 1028              		@ sp needed
 1029 01de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1030              	.LVL98:
 1031              	.L47:
 1032              		.cfi_restore_state
 1033              	.LBB222:
 1034              	.LBB216:
 1035              	.LBB212:
 1036              	.LBB197:
 140:GFX.cpp       ****         int error = -dy;
 1037              		.loc 1 140 9 is_stmt 1 view .LVU338
 142:GFX.cpp       ****         int x = x0;
 1038              		.loc 1 142 13 is_stmt 0 view .LVU339
 1039 01e2 CCEBCC73 		rsb	r3, ip, ip, lsl #31
 1040              	.LVL99:
 141:GFX.cpp       ****         int errorInc = -2 * dy;
 1041              		.loc 1 141 13 view .LVU340
 1042 01e6 CCF1000C 		rsb	ip, ip, #0
 1043              	.LVL100:
 140:GFX.cpp       ****         int error = -dy;
 1044              		.loc 1 140 13 view .LVU341
 1045 01ea 4FEA4E0E 		lsl	lr, lr, #1
 1046              	.LVL101:
 141:GFX.cpp       ****         int errorInc = -2 * dy;
 1047              		.loc 1 141 9 is_stmt 1 view .LVU342
 142:GFX.cpp       ****         int x = x0;
 1048              		.loc 1 142 9 view .LVU343
 143:GFX.cpp       **** 
 1049              		.loc 1 143 9 view .LVU344
 145:GFX.cpp       ****         {
 1050              		.loc 1 145 9 view .LVU345
 1051              	.LBB198:
 145:GFX.cpp       ****         {
 1052              		.loc 1 145 28 view .LVU346
 1053              	.LBE198:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 34


 142:GFX.cpp       ****         int x = x0;
 1054              		.loc 1 142 13 is_stmt 0 view .LVU347
 1055 01ee 5B00     		lsls	r3, r3, #1
 1056 01f0 0393     		str	r3, [sp, #12]
 1057              	.LVL102:
 1058              	.LBB211:
 145:GFX.cpp       ****         {
 1059              		.loc 1 145 34 view .LVU348
 1060 01f2 09EB0803 		add	r3, r9, r8
 145:GFX.cpp       ****         {
 1061              		.loc 1 145 28 view .LVU349
 1062 01f6 9A42     		cmp	r2, r3
 1063 01f8 3FF463AF 		beq	.L26
 1064              	.LBB199:
 1065              	.LBB200:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1066              		.loc 2 216 15 view .LVU350
 1067 01fc B0F85CB0 		ldrh	fp, [r0, #92]
 1068 0200 CDE90145 		strd	r4, r5, [sp, #4]
 1069 0204 039C     		ldr	r4, [sp, #12]
 1070              	.LVL103:
 1071              	.L53:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1072              		.loc 2 216 15 view .LVU351
 1073              	.LBE200:
 1074              	.LBE199:
 147:GFX.cpp       ****             error += slope;
 1075              		.loc 1 147 13 is_stmt 1 view .LVU352
 1076              	.LBB209:
 1077              	.LBI199:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1078              		.loc 2 215 17 view .LVU353
 1079              	.LBB207:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1080              		.loc 2 216 9 view .LVU354
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1081              		.loc 2 216 9 is_stmt 0 view .LVU355
 1082              	.LBE207:
 1083              	.LBE209:
 148:GFX.cpp       **** 
 1084              		.loc 1 148 13 is_stmt 1 view .LVU356
 150:GFX.cpp       ****             {
 1085              		.loc 1 150 13 view .LVU357
 152:GFX.cpp       ****                 error += errorInc;
 1086              		.loc 1 152 17 view .LVU358
 1087              	.LBB210:
 1088              	.LBB208:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1089              		.loc 2 216 9 is_stmt 0 view .LVU359
 1090 0206 8BB2     		uxth	r3, r1
 1091 0208 5B45     		cmp	r3, fp
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1092              		.loc 2 216 24 view .LVU360
 1093 020a 93B2     		uxth	r3, r2
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1094              		.loc 2 216 9 view .LVU361
 1095 020c 15D2     		bcs	.L51
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 35


 217:Frame.h       ****         }
 1096              		.loc 2 217 13 is_stmt 1 view .LVU362
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1097              		.loc 2 216 24 is_stmt 0 view .LVU363
 1098 020e B0F85EA0 		ldrh	r10, [r0, #94]
 1099 0212 9A45     		cmp	r10, r3
 1100 0214 11D9     		bls	.L51
 217:Frame.h       ****         }
 1101              		.loc 2 217 26 view .LVU364
 1102 0216 9A46     		mov	r10, r3
 217:Frame.h       ****         }
 1103              		.loc 2 217 23 view .LVU365
 1104 0218 8BB2     		uxth	r3, r1
 1105              	.LBB201:
 1106              	.LBB202:
 132:Frame.h       ****         B = Color.m_B;
 1107              		.loc 2 132 11 view .LVU366
 1108 021a 029D     		ldr	r5, [sp, #8]
 1109              	.LBE202:
 1110              	.LBE201:
 217:Frame.h       ****         }
 1111              		.loc 2 217 23 view .LVU367
 1112 021c 0BFB0A3A 		mla	r10, fp, r10, r3
 217:Frame.h       ****         }
 1113              		.loc 2 217 40 view .LVU368
 1114 0220 436D     		ldr	r3, [r0, #84]
 1115              	.LBB205:
 1116              	.LBB203:
 131:Frame.h       ****         G = Color.m_G;
 1117              		.loc 2 131 11 view .LVU369
 1118 0222 03F83A60 		strb	r6, [r3, r10, lsl #3]
 1119              	.LBE203:
 1120              	.LBE205:
 217:Frame.h       ****         }
 1121              		.loc 2 217 40 view .LVU370
 1122 0226 03EBCA03 		add	r3, r3, r10, lsl #3
 1123              	.LVL104:
 1124              	.LBB206:
 1125              	.LBI201:
 130:Frame.h       ****         R = Color.m_R;
 1126              		.loc 2 130 17 is_stmt 1 view .LVU371
 1127              	.LBB204:
 131:Frame.h       ****         G = Color.m_G;
 1128              		.loc 2 131 9 view .LVU372
 132:Frame.h       ****         B = Color.m_B;
 1129              		.loc 2 132 9 view .LVU373
 134:Frame.h       ****     }
 1130              		.loc 2 134 20 is_stmt 0 view .LVU374
 1131 022a 4FF0010A 		mov	r10, #1
 132:Frame.h       ****         B = Color.m_B;
 1132              		.loc 2 132 11 view .LVU375
 1133 022e 5D70     		strb	r5, [r3, #1]
 133:Frame.h       ****         *m_pChange = true;
 1134              		.loc 2 133 9 is_stmt 1 view .LVU376
 133:Frame.h       ****         *m_pChange = true;
 1135              		.loc 2 133 11 is_stmt 0 view .LVU377
 1136 0230 019D     		ldr	r5, [sp, #4]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 36


 1137 0232 9D70     		strb	r5, [r3, #2]
 134:Frame.h       ****     }
 1138              		.loc 2 134 9 is_stmt 1 view .LVU378
 134:Frame.h       ****     }
 1139              		.loc 2 134 20 is_stmt 0 view .LVU379
 1140 0234 5B68     		ldr	r3, [r3, #4]
 1141              	.LVL105:
 134:Frame.h       ****     }
 1142              		.loc 2 134 20 view .LVU380
 1143 0236 83F800A0 		strb	r10, [r3]
 1144              	.LVL106:
 1145              	.L51:
 134:Frame.h       ****     }
 1146              		.loc 2 134 20 view .LVU381
 1147              	.LBE204:
 1148              	.LBE206:
 1149              	.LBE208:
 1150              	.LBE210:
 150:GFX.cpp       ****             {
 1151              		.loc 1 150 13 view .LVU382
 1152 023a 1CEB0E0C 		adds	ip, ip, lr
 1153              	.LVL107:
 150:GFX.cpp       ****             {
 1154              		.loc 1 150 13 view .LVU383
 1155 023e 01D4     		bmi	.L52
 152:GFX.cpp       ****                 error += errorInc;
 1156              		.loc 1 152 19 view .LVU384
 1157 0240 3944     		add	r1, r1, r7
 1158              	.LVL108:
 153:GFX.cpp       ****             }
 1159              		.loc 1 153 17 is_stmt 1 view .LVU385
 153:GFX.cpp       ****             }
 1160              		.loc 1 153 23 is_stmt 0 view .LVU386
 1161 0242 A444     		add	ip, ip, r4
 1162              	.LVL109:
 1163              	.L52:
 145:GFX.cpp       ****         {
 1164              		.loc 1 145 9 is_stmt 1 discriminator 2 view .LVU387
 145:GFX.cpp       ****         {
 1165              		.loc 1 145 44 is_stmt 0 discriminator 2 view .LVU388
 1166 0244 08EB0203 		add	r3, r8, r2
 1167              	.LVL110:
 145:GFX.cpp       ****         {
 1168              		.loc 1 145 28 is_stmt 1 discriminator 2 view .LVU389
 1169 0248 9145     		cmp	r9, r2
 145:GFX.cpp       ****         {
 1170              		.loc 1 145 44 is_stmt 0 discriminator 2 view .LVU390
 1171 024a 1A46     		mov	r2, r3
 145:GFX.cpp       ****         {
 1172              		.loc 1 145 28 discriminator 2 view .LVU391
 1173 024c DBD1     		bne	.L53
 145:GFX.cpp       ****         {
 1174              		.loc 1 145 28 discriminator 2 view .LVU392
 1175              	.LBE211:
 1176              	.LBE197:
 1177              	.LBE212:
 1178              	.LBE216:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 37


 1179              	.LBE222:
 1180              		.loc 1 157 1 view .LVU393
 1181 024e 05B0     		add	sp, sp, #20
 1182              		.cfi_remember_state
 1183              		.cfi_def_cfa_offset 36
 1184              		@ sp needed
 1185 0250 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1186              	.LVL111:
 1187              	.L59:
 1188              		.cfi_restore_state
 1189              	.LBB223:
 1190              	.LBB217:
 1191              	.LBB213:
 1192              	.LBB178:
 1193              	.LBB171:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 1194              		.loc 2 209 25 is_stmt 1 view .LVU394
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 1195              		.loc 2 209 27 is_stmt 0 view .LVU395
 1196 0254 0138     		subs	r0, r0, #1
 1197 0256 1FFA80F9 		uxth	r9, r0
 1198              	.LVL112:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 1199              		.loc 2 209 27 view .LVU396
 1200 025a 61E7     		b	.L45
 1201              	.LBE171:
 1202              	.LBE178:
 1203              	.LBE213:
 1204              	.LBE217:
 1205              	.LBE223:
 1206              		.cfi_endproc
 1207              	.LFE2635:
 1209              		.section	.text._ZN4cGFX8drawRectEttss6cColor,"ax",%progbits
 1210              		.align	1
 1211              		.p2align 2,,3
 1212              		.global	_ZN4cGFX8drawRectEttss6cColor
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1217              	_ZN4cGFX8drawRectEttss6cColor:
 1218              	.LVL113:
 1219              	.LFB2633:
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1220              		.loc 1 52 82 is_stmt 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 8, pretend = 0, frame = 8
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1224              		.loc 1 53 5 view .LVU398
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1225              		.loc 1 52 82 is_stmt 0 view .LVU399
 1226 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1227              		.cfi_def_cfa_offset 20
 1228              		.cfi_offset 4, -20
 1229              		.cfi_offset 5, -16
 1230              		.cfi_offset 6, -12
 1231              		.cfi_offset 7, -8
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 38


 1232              		.cfi_offset 14, -4
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1233              		.loc 1 53 5 view .LVU400
 1234 0002 002B     		cmp	r3, #0
 1235              	.LVL114:
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1236              		.loc 1 52 82 view .LVU401
 1237 0004 85B0     		sub	sp, sp, #20
 1238              		.cfi_def_cfa_offset 40
  52:GFX.cpp       ****     if(dx < 0){ x += dx; dx = -dx;}
 1239              		.loc 1 52 82 view .LVU402
 1240 0006 0D46     		mov	r5, r1
 1241 0008 1446     		mov	r4, r2
 1242 000a BDF92860 		ldrsh	r6, [sp, #40]
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1243              		.loc 1 53 5 view .LVU403
 1244 000e 2ADB     		blt	.L62
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1245              		.loc 1 56 13 view .LVU404
 1246 0010 0B44     		add	r3, r3, r1
  54:GFX.cpp       **** 
 1247              		.loc 1 54 5 view .LVU405
 1248 0012 002E     		cmp	r6, #0
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1249              		.loc 1 56 13 view .LVU406
 1250 0014 9FB2     		uxth	r7, r3
 1251              	.LVL115:
  54:GFX.cpp       **** 
 1252              		.loc 1 54 5 is_stmt 1 view .LVU407
 1253 0016 2BDB     		blt	.L64
 1254              	.L67:
  57:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
 1255              		.loc 1 57 13 is_stmt 0 view .LVU408
 1256 0018 2644     		add	r6, r6, r4
 1257 001a B6B2     		uxth	r6, r6
 1258              	.LVL116:
 1259              	.L65:
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1260              		.loc 1 56 5 is_stmt 1 view .LVU409
  56:GFX.cpp       ****     drawLine(x+dx, y, x+dx, y+dy, Color);
 1261              		.loc 1 56 13 is_stmt 0 view .LVU410
 1262 001c 0B9B     		ldr	r3, [sp, #44]
 1263 001e 2246     		mov	r2, r4
 1264 0020 2946     		mov	r1, r5
 1265 0022 0390     		str	r0, [sp, #12]
 1266 0024 0193     		str	r3, [sp, #4]
 1267 0026 3B46     		mov	r3, r7
 1268 0028 0094     		str	r4, [sp]
 1269 002a FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 1270              	.LVL117:
  57:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
 1271              		.loc 1 57 5 is_stmt 1 view .LVU411
  57:GFX.cpp       ****     drawLine(x+dx, y+dy, x, y+dy, Color);
 1272              		.loc 1 57 13 is_stmt 0 view .LVU412
 1273 002e 0B9B     		ldr	r3, [sp, #44]
 1274 0030 2246     		mov	r2, r4
 1275 0032 3946     		mov	r1, r7
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 39


 1276 0034 0398     		ldr	r0, [sp, #12]
 1277 0036 0193     		str	r3, [sp, #4]
 1278 0038 3B46     		mov	r3, r7
 1279 003a 0096     		str	r6, [sp]
 1280 003c FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 1281              	.LVL118:
  58:GFX.cpp       ****     drawLine(x, y+dy, x, y, Color);
 1282              		.loc 1 58 5 is_stmt 1 view .LVU413
  58:GFX.cpp       ****     drawLine(x, y+dy, x, y, Color);
 1283              		.loc 1 58 13 is_stmt 0 view .LVU414
 1284 0040 0B9B     		ldr	r3, [sp, #44]
 1285 0042 3946     		mov	r1, r7
 1286 0044 3246     		mov	r2, r6
 1287 0046 0398     		ldr	r0, [sp, #12]
 1288 0048 0193     		str	r3, [sp, #4]
 1289 004a 2B46     		mov	r3, r5
 1290 004c 0096     		str	r6, [sp]
 1291 004e FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 1292              	.LVL119:
  59:GFX.cpp       **** }
 1293              		.loc 1 59 5 is_stmt 1 view .LVU415
  59:GFX.cpp       **** }
 1294              		.loc 1 59 13 is_stmt 0 view .LVU416
 1295 0052 2B46     		mov	r3, r5
 1296 0054 3246     		mov	r2, r6
 1297 0056 2946     		mov	r1, r5
 1298 0058 0398     		ldr	r0, [sp, #12]
 1299 005a 0A94     		str	r4, [sp, #40]
  60:GFX.cpp       **** 
 1300              		.loc 1 60 1 view .LVU417
 1301 005c 05B0     		add	sp, sp, #20
 1302              		.cfi_remember_state
 1303              		.cfi_def_cfa_offset 20
 1304              		@ sp needed
 1305 005e BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1306              		.cfi_restore 14
 1307              		.cfi_restore 7
 1308              		.cfi_restore 6
 1309              		.cfi_restore 5
 1310              		.cfi_restore 4
 1311              		.cfi_def_cfa_offset 0
 1312              	.LVL120:
  59:GFX.cpp       **** }
 1313              		.loc 1 59 13 view .LVU418
 1314 0062 FFF7FEBF 		b	_ZN4cGFX8drawLineEtttt6cColor
 1315              	.LVL121:
 1316              	.L62:
 1317              		.cfi_restore_state
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1318              		.loc 1 53 17 is_stmt 1 discriminator 1 view .LVU419
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1319              		.loc 1 53 19 is_stmt 0 discriminator 1 view .LVU420
 1320 0066 1944     		add	r1, r1, r3
 1321              	.LVL122:
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1322              		.loc 1 53 26 is_stmt 1 discriminator 1 view .LVU421
  54:GFX.cpp       **** 
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 40


 1323              		.loc 1 54 5 is_stmt 0 discriminator 1 view .LVU422
 1324 0068 002E     		cmp	r6, #0
 1325 006a 2F46     		mov	r7, r5
  53:GFX.cpp       ****     if(dy < 0){ y += dy; dy = -dy;}
 1326              		.loc 1 53 19 discriminator 1 view .LVU423
 1327 006c 8DB2     		uxth	r5, r1
 1328              	.LVL123:
  54:GFX.cpp       **** 
 1329              		.loc 1 54 5 is_stmt 1 discriminator 1 view .LVU424
 1330 006e D3DA     		bge	.L67
 1331              	.L64:
  54:GFX.cpp       **** 
 1332              		.loc 1 54 17 discriminator 1 view .LVU425
  54:GFX.cpp       **** 
 1333              		.loc 1 54 19 is_stmt 0 discriminator 1 view .LVU426
 1334 0070 A319     		adds	r3, r4, r6
 1335              	.LVL124:
  54:GFX.cpp       **** 
 1336              		.loc 1 54 26 is_stmt 1 discriminator 1 view .LVU427
  54:GFX.cpp       **** 
 1337              		.loc 1 54 26 is_stmt 0 discriminator 1 view .LVU428
 1338 0072 2646     		mov	r6, r4
 1339              	.LVL125:
  54:GFX.cpp       **** 
 1340              		.loc 1 54 19 discriminator 1 view .LVU429
 1341 0074 9CB2     		uxth	r4, r3
 1342 0076 D1E7     		b	.L65
 1343              		.cfi_endproc
 1344              	.LFE2633:
 1346              		.section	.text._ZN4cGFX10drawCircleEttt6cColor,"ax",%progbits
 1347              		.align	1
 1348              		.p2align 2,,3
 1349              		.global	_ZN4cGFX10drawCircleEttt6cColor
 1350              		.syntax unified
 1351              		.thumb
 1352              		.thumb_func
 1354              	_ZN4cGFX10drawCircleEttt6cColor:
 1355              	.LVL126:
 1356              	.LFB2636:
 158:GFX.cpp       **** 
 159:GFX.cpp       **** //-----------------------------------------------------------------------------------
 160:GFX.cpp       **** // Dessin d'un cercle
 161:GFX.cpp       **** // Merci a Frédéric Goset http://fredericgoset.ovh/
 162:GFX.cpp       **** // L'algorithme de cercle de Bresenham 
 163:GFX.cpp       **** void cGFX::drawCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color)
 164:GFX.cpp       **** {
 1357              		.loc 1 164 1 is_stmt 1 view -0
 1358              		.cfi_startproc
 1359              		@ args = 4, pretend = 0, frame = 24
 1360              		@ frame_needed = 0, uses_anonymous_args = 0
 165:GFX.cpp       ****     int16_t x = 0;
 1361              		.loc 1 165 5 view .LVU431
 166:GFX.cpp       ****     int16_t y = radius;
 1362              		.loc 1 166 5 view .LVU432
 164:GFX.cpp       ****     int16_t x = 0;
 1363              		.loc 1 164 1 is_stmt 0 view .LVU433
 1364 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 41


 1365              		.cfi_def_cfa_offset 36
 1366              		.cfi_offset 4, -36
 1367              		.cfi_offset 5, -32
 1368              		.cfi_offset 6, -28
 1369              		.cfi_offset 7, -24
 1370              		.cfi_offset 8, -20
 1371              		.cfi_offset 9, -16
 1372              		.cfi_offset 10, -12
 1373              		.cfi_offset 11, -8
 1374              		.cfi_offset 14, -4
 1375              		.loc 1 166 13 view .LVU434
 1376 0004 1CB2     		sxth	r4, r3
 164:GFX.cpp       ****     int16_t x = 0;
 1377              		.loc 1 164 1 view .LVU435
 1378 0006 87B0     		sub	sp, sp, #28
 1379              		.cfi_def_cfa_offset 64
 167:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 168:GFX.cpp       **** 
 169:GFX.cpp       ****     while (x <= y)
 1380              		.loc 1 169 14 view .LVU436
 1381 0008 002C     		cmp	r4, #0
 166:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 1382              		.loc 1 166 13 view .LVU437
 1383 000a 0194     		str	r4, [sp, #4]
 1384              	.LVL127:
 167:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 1385              		.loc 1 167 5 is_stmt 1 view .LVU438
 1386              		.loc 1 169 5 view .LVU439
 1387              		.loc 1 169 14 view .LVU440
 1388 000c C0F2F680 		blt	.L68
 1389 0010 9DF84040 		ldrb	r4, [sp, #64]	@ zero_extendqisi2
 1390              	.LVL128:
 1391              		.loc 1 169 14 is_stmt 0 view .LVU441
 1392 0014 9B00     		lsls	r3, r3, #2
 1393              	.LVL129:
 1394              	.LBB256:
 1395              	.LBB257:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1396              		.loc 2 216 15 view .LVU442
 1397 0016 B0F85CE0 		ldrh	lr, [r0, #92]
 217:Frame.h       ****         }
 1398              		.loc 2 217 27 view .LVU443
 1399 001a 4FF00008 		mov	r8, #0
 1400 001e C3F10503 		rsb	r3, r3, #5
 1401              	.LVL130:
 217:Frame.h       ****         }
 1402              		.loc 2 217 27 view .LVU444
 1403 0022 0394     		str	r4, [sp, #12]
 1404 0024 9DF84140 		ldrb	r4, [sp, #65]	@ zero_extendqisi2
 1405 0028 1BB2     		sxth	r3, r3
 1406 002a 0494     		str	r4, [sp, #16]
 1407 002c 9DF84240 		ldrb	r4, [sp, #66]	@ zero_extendqisi2
 1408 0030 0293     		str	r3, [sp, #8]
 1409 0032 0594     		str	r4, [sp, #20]
 1410 0034 1446     		mov	r4, r2
 1411 0036 D0E0     		b	.L83
 1412              	.LVL131:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 42


 1413              	.L93:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1414              		.loc 2 216 30 view .LVU445
 1415 0038 B0F85EA0 		ldrh	r10, [r0, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1416              		.loc 2 216 24 view .LVU446
 1417 003c 5645     		cmp	r6, r10
 1418 003e 14D2     		bcs	.L71
 217:Frame.h       ****         }
 1419              		.loc 2 217 13 is_stmt 1 view .LVU447
 217:Frame.h       ****         }
 1420              		.loc 2 217 40 is_stmt 0 view .LVU448
 1421 0040 D0F85490 		ldr	r9, [r0, #84]
 217:Frame.h       ****         }
 1422              		.loc 2 217 23 view .LVU449
 1423 0044 0EFB067B 		mla	fp, lr, r6, r7
 1424              	.LBB258:
 1425              	.LBB259:
 131:Frame.h       ****         G = Color.m_G;
 1426              		.loc 2 131 11 view .LVU450
 1427 0048 039B     		ldr	r3, [sp, #12]
 1428 004a 09F83B30 		strb	r3, [r9, fp, lsl #3]
 1429              	.LBE259:
 1430              	.LBE258:
 217:Frame.h       ****         }
 1431              		.loc 2 217 40 view .LVU451
 1432 004e 09EBCB09 		add	r9, r9, fp, lsl #3
 1433              	.LVL132:
 1434              	.LBB261:
 1435              	.LBI258:
 130:Frame.h       ****         R = Color.m_R;
 1436              		.loc 2 130 17 is_stmt 1 view .LVU452
 1437              	.LBB260:
 131:Frame.h       ****         G = Color.m_G;
 1438              		.loc 2 131 9 view .LVU453
 132:Frame.h       ****         B = Color.m_B;
 1439              		.loc 2 132 9 view .LVU454
 132:Frame.h       ****         B = Color.m_B;
 1440              		.loc 2 132 11 is_stmt 0 view .LVU455
 1441 0052 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1442              		.loc 2 134 20 view .LVU456
 1443 0054 4FF0010B 		mov	fp, #1
 132:Frame.h       ****         B = Color.m_B;
 1444              		.loc 2 132 11 view .LVU457
 1445 0058 89F80130 		strb	r3, [r9, #1]
 133:Frame.h       ****         *m_pChange = true;
 1446              		.loc 2 133 9 is_stmt 1 view .LVU458
 133:Frame.h       ****         *m_pChange = true;
 1447              		.loc 2 133 11 is_stmt 0 view .LVU459
 1448 005c 059B     		ldr	r3, [sp, #20]
 1449 005e 89F80230 		strb	r3, [r9, #2]
 134:Frame.h       ****     }
 1450              		.loc 2 134 9 is_stmt 1 view .LVU460
 134:Frame.h       ****     }
 1451              		.loc 2 134 20 is_stmt 0 view .LVU461
 1452 0062 D9F80490 		ldr	r9, [r9, #4]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 43


 1453              	.LVL133:
 134:Frame.h       ****     }
 1454              		.loc 2 134 20 view .LVU462
 1455 0066 89F800B0 		strb	fp, [r9]
 1456              	.LVL134:
 1457              	.L71:
 134:Frame.h       ****     }
 1458              		.loc 2 134 20 view .LVU463
 1459              	.LBE260:
 1460              	.LBE261:
 1461              	.LBE257:
 1462              	.LBE256:
 170:GFX.cpp       ****     {
 171:GFX.cpp       ****         setPixel(centerX + x, centerY + y, Color);
 172:GFX.cpp       ****         setPixel(centerX + x, centerY - y, Color);
 1463              		.loc 1 172 9 is_stmt 1 view .LVU464
 1464              		.loc 1 172 17 is_stmt 0 view .LVU465
 1465 006a A2EB0509 		sub	r9, r2, r5
 1466 006e 1FFA89F9 		uxth	r9, r9
 1467              	.LVL135:
 1468              	.LBB263:
 1469              	.LBI263:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1470              		.loc 2 215 17 is_stmt 1 view .LVU466
 1471              	.LBB264:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1472              		.loc 2 216 9 view .LVU467
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1473              		.loc 2 216 24 is_stmt 0 view .LVU468
 1474 0072 CA45     		cmp	r10, r9
 1475 0074 10D9     		bls	.L90
 217:Frame.h       ****         }
 1476              		.loc 2 217 13 is_stmt 1 view .LVU469
 217:Frame.h       ****         }
 1477              		.loc 2 217 23 is_stmt 0 view .LVU470
 1478 0076 0EFB097A 		mla	r10, lr, r9, r7
 1479              	.LBB265:
 1480              	.LBB266:
 131:Frame.h       ****         G = Color.m_G;
 1481              		.loc 2 131 11 view .LVU471
 1482 007a 039B     		ldr	r3, [sp, #12]
 1483              	.LBE266:
 1484              	.LBE265:
 217:Frame.h       ****         }
 1485              		.loc 2 217 40 view .LVU472
 1486 007c 476D     		ldr	r7, [r0, #84]
 1487              	.LVL136:
 1488              	.LBB269:
 1489              	.LBB267:
 131:Frame.h       ****         G = Color.m_G;
 1490              		.loc 2 131 11 view .LVU473
 1491 007e 07F83A30 		strb	r3, [r7, r10, lsl #3]
 1492              	.LBE267:
 1493              	.LBE269:
 217:Frame.h       ****         }
 1494              		.loc 2 217 40 view .LVU474
 1495 0082 07EBCA07 		add	r7, r7, r10, lsl #3
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 44


 1496              	.LVL137:
 1497              	.LBB270:
 1498              	.LBI265:
 130:Frame.h       ****         R = Color.m_R;
 1499              		.loc 2 130 17 is_stmt 1 view .LVU475
 1500              	.LBB268:
 131:Frame.h       ****         G = Color.m_G;
 1501              		.loc 2 131 9 view .LVU476
 132:Frame.h       ****         B = Color.m_B;
 1502              		.loc 2 132 9 view .LVU477
 132:Frame.h       ****         B = Color.m_B;
 1503              		.loc 2 132 11 is_stmt 0 view .LVU478
 1504 0086 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1505              		.loc 2 134 20 view .LVU479
 1506 0088 4FF0010A 		mov	r10, #1
 132:Frame.h       ****         B = Color.m_B;
 1507              		.loc 2 132 11 view .LVU480
 1508 008c 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
 1509              		.loc 2 133 9 is_stmt 1 view .LVU481
 133:Frame.h       ****         *m_pChange = true;
 1510              		.loc 2 133 11 is_stmt 0 view .LVU482
 1511 008e 059B     		ldr	r3, [sp, #20]
 1512 0090 BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1513              		.loc 2 134 9 is_stmt 1 view .LVU483
 134:Frame.h       ****     }
 1514              		.loc 2 134 20 is_stmt 0 view .LVU484
 1515 0092 7F68     		ldr	r7, [r7, #4]
 1516              	.LVL138:
 134:Frame.h       ****     }
 1517              		.loc 2 134 20 view .LVU485
 1518 0094 87F800A0 		strb	r10, [r7]
 1519              	.LVL139:
 1520              	.L90:
 134:Frame.h       ****     }
 1521              		.loc 2 134 20 view .LVU486
 1522              	.LBE268:
 1523              	.LBE270:
 1524              	.LBE264:
 1525              	.LBE263:
 173:GFX.cpp       ****         setPixel(centerX - x, centerY + y, Color);
 1526              		.loc 1 173 9 is_stmt 1 view .LVU487
 1527 0098 A1EB0C07 		sub	r7, r1, ip
 1528 009c BFB2     		uxth	r7, r7
 1529              	.LVL140:
 1530              	.LBB272:
 1531              	.LBI272:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1532              		.loc 2 215 17 view .LVU488
 1533              	.LBB273:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1534              		.loc 2 216 9 view .LVU489
 1535 009e 7745     		cmp	r7, lr
 1536 00a0 25D2     		bcs	.L73
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 45


 1537              		.loc 2 216 30 is_stmt 0 view .LVU490
 1538 00a2 B0F85EA0 		ldrh	r10, [r0, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1539              		.loc 2 216 24 view .LVU491
 1540 00a6 5645     		cmp	r6, r10
 1541 00a8 10D2     		bcs	.L74
 217:Frame.h       ****         }
 1542              		.loc 2 217 13 is_stmt 1 view .LVU492
 217:Frame.h       ****         }
 1543              		.loc 2 217 23 is_stmt 0 view .LVU493
 1544 00aa 0EFB067B 		mla	fp, lr, r6, r7
 1545              	.LBB274:
 1546              	.LBB275:
 131:Frame.h       ****         G = Color.m_G;
 1547              		.loc 2 131 11 view .LVU494
 1548 00ae 039B     		ldr	r3, [sp, #12]
 1549              	.LBE275:
 1550              	.LBE274:
 217:Frame.h       ****         }
 1551              		.loc 2 217 40 view .LVU495
 1552 00b0 466D     		ldr	r6, [r0, #84]
 1553              	.LVL141:
 1554              	.LBB278:
 1555              	.LBB276:
 131:Frame.h       ****         G = Color.m_G;
 1556              		.loc 2 131 11 view .LVU496
 1557 00b2 06F83B30 		strb	r3, [r6, fp, lsl #3]
 1558              	.LBE276:
 1559              	.LBE278:
 217:Frame.h       ****         }
 1560              		.loc 2 217 40 view .LVU497
 1561 00b6 06EBCB06 		add	r6, r6, fp, lsl #3
 1562              	.LVL142:
 1563              	.LBB279:
 1564              	.LBI274:
 130:Frame.h       ****         R = Color.m_R;
 1565              		.loc 2 130 17 is_stmt 1 view .LVU498
 1566              	.LBB277:
 131:Frame.h       ****         G = Color.m_G;
 1567              		.loc 2 131 9 view .LVU499
 132:Frame.h       ****         B = Color.m_B;
 1568              		.loc 2 132 9 view .LVU500
 132:Frame.h       ****         B = Color.m_B;
 1569              		.loc 2 132 11 is_stmt 0 view .LVU501
 1570 00ba 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1571              		.loc 2 134 20 view .LVU502
 1572 00bc 4FF0010B 		mov	fp, #1
 132:Frame.h       ****         B = Color.m_B;
 1573              		.loc 2 132 11 view .LVU503
 1574 00c0 7370     		strb	r3, [r6, #1]
 133:Frame.h       ****         *m_pChange = true;
 1575              		.loc 2 133 9 is_stmt 1 view .LVU504
 133:Frame.h       ****         *m_pChange = true;
 1576              		.loc 2 133 11 is_stmt 0 view .LVU505
 1577 00c2 059B     		ldr	r3, [sp, #20]
 1578 00c4 B370     		strb	r3, [r6, #2]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 46


 134:Frame.h       ****     }
 1579              		.loc 2 134 9 is_stmt 1 view .LVU506
 134:Frame.h       ****     }
 1580              		.loc 2 134 20 is_stmt 0 view .LVU507
 1581 00c6 7668     		ldr	r6, [r6, #4]
 1582              	.LVL143:
 134:Frame.h       ****     }
 1583              		.loc 2 134 20 view .LVU508
 1584 00c8 86F800B0 		strb	fp, [r6]
 1585              	.LVL144:
 1586              	.L74:
 134:Frame.h       ****     }
 1587              		.loc 2 134 20 view .LVU509
 1588              	.LBE277:
 1589              	.LBE279:
 1590              	.LBE273:
 1591              	.LBE272:
 174:GFX.cpp       ****         setPixel(centerX - x, centerY - y, Color);
 1592              		.loc 1 174 9 is_stmt 1 view .LVU510
 1593              	.LBB280:
 1594              	.LBI280:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1595              		.loc 2 215 17 view .LVU511
 1596              	.LBB281:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1597              		.loc 2 216 9 view .LVU512
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1598              		.loc 2 216 24 is_stmt 0 view .LVU513
 1599 00cc CA45     		cmp	r10, r9
 1600 00ce 0ED9     		bls	.L73
 217:Frame.h       ****         }
 1601              		.loc 2 217 13 is_stmt 1 view .LVU514
 217:Frame.h       ****         }
 1602              		.loc 2 217 40 is_stmt 0 view .LVU515
 1603 00d0 466D     		ldr	r6, [r0, #84]
 217:Frame.h       ****         }
 1604              		.loc 2 217 23 view .LVU516
 1605 00d2 0EFB0977 		mla	r7, lr, r9, r7
 1606              	.LVL145:
 1607              	.LBB282:
 1608              	.LBB283:
 131:Frame.h       ****         G = Color.m_G;
 1609              		.loc 2 131 11 view .LVU517
 1610 00d6 039B     		ldr	r3, [sp, #12]
 1611 00d8 06F83730 		strb	r3, [r6, r7, lsl #3]
 1612              	.LBE283:
 1613              	.LBE282:
 217:Frame.h       ****         }
 1614              		.loc 2 217 40 view .LVU518
 1615 00dc 06EBC707 		add	r7, r6, r7, lsl #3
 1616              	.LVL146:
 1617              	.LBB285:
 1618              	.LBI282:
 130:Frame.h       ****         R = Color.m_R;
 1619              		.loc 2 130 17 is_stmt 1 view .LVU519
 1620              	.LBB284:
 131:Frame.h       ****         G = Color.m_G;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 47


 1621              		.loc 2 131 9 view .LVU520
 132:Frame.h       ****         B = Color.m_B;
 1622              		.loc 2 132 9 view .LVU521
 132:Frame.h       ****         B = Color.m_B;
 1623              		.loc 2 132 11 is_stmt 0 view .LVU522
 1624 00e0 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1625              		.loc 2 134 20 view .LVU523
 1626 00e2 7E68     		ldr	r6, [r7, #4]
 132:Frame.h       ****         B = Color.m_B;
 1627              		.loc 2 132 11 view .LVU524
 1628 00e4 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
 1629              		.loc 2 133 9 is_stmt 1 view .LVU525
 133:Frame.h       ****         *m_pChange = true;
 1630              		.loc 2 133 11 is_stmt 0 view .LVU526
 1631 00e6 059B     		ldr	r3, [sp, #20]
 1632 00e8 BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1633              		.loc 2 134 9 is_stmt 1 view .LVU527
 134:Frame.h       ****     }
 1634              		.loc 2 134 20 is_stmt 0 view .LVU528
 1635 00ea 0127     		movs	r7, #1
 1636              	.LVL147:
 134:Frame.h       ****     }
 1637              		.loc 2 134 20 view .LVU529
 1638 00ec 3770     		strb	r7, [r6]
 1639              	.LVL148:
 1640              	.L73:
 134:Frame.h       ****     }
 1641              		.loc 2 134 20 view .LVU530
 1642              	.LBE284:
 1643              	.LBE285:
 1644              	.LBE281:
 1645              	.LBE280:
 175:GFX.cpp       ****         setPixel(centerX + y, centerY + x, Color);
 1646              		.loc 1 175 9 is_stmt 1 view .LVU531
 1647              		.loc 1 175 17 is_stmt 0 view .LVU532
 1648 00ee 6F18     		adds	r7, r5, r1
 1649 00f0 0CEB0206 		add	r6, ip, r2
 1650 00f4 BFB2     		uxth	r7, r7
 1651 00f6 B6B2     		uxth	r6, r6
 1652              	.LVL149:
 1653              	.LBB286:
 1654              	.LBI286:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1655              		.loc 2 215 17 is_stmt 1 view .LVU533
 1656              	.LBB287:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1657              		.loc 2 216 9 view .LVU534
 1658 00f8 7745     		cmp	r7, lr
 1659 00fa 2BD2     		bcs	.L75
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1660              		.loc 2 216 30 is_stmt 0 view .LVU535
 1661 00fc B0F85EA0 		ldrh	r10, [r0, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1662              		.loc 2 216 24 view .LVU536
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 48


 1663 0100 5645     		cmp	r6, r10
 1664 0102 14D2     		bcs	.L76
 217:Frame.h       ****         }
 1665              		.loc 2 217 13 is_stmt 1 view .LVU537
 217:Frame.h       ****         }
 1666              		.loc 2 217 40 is_stmt 0 view .LVU538
 1667 0104 D0F85490 		ldr	r9, [r0, #84]
 217:Frame.h       ****         }
 1668              		.loc 2 217 23 view .LVU539
 1669 0108 0EFB067B 		mla	fp, lr, r6, r7
 1670              	.LBB288:
 1671              	.LBB289:
 131:Frame.h       ****         G = Color.m_G;
 1672              		.loc 2 131 11 view .LVU540
 1673 010c 039B     		ldr	r3, [sp, #12]
 1674 010e 09F83B30 		strb	r3, [r9, fp, lsl #3]
 1675              	.LBE289:
 1676              	.LBE288:
 217:Frame.h       ****         }
 1677              		.loc 2 217 40 view .LVU541
 1678 0112 09EBCB09 		add	r9, r9, fp, lsl #3
 1679              	.LVL150:
 1680              	.LBB291:
 1681              	.LBI288:
 130:Frame.h       ****         R = Color.m_R;
 1682              		.loc 2 130 17 is_stmt 1 view .LVU542
 1683              	.LBB290:
 131:Frame.h       ****         G = Color.m_G;
 1684              		.loc 2 131 9 view .LVU543
 132:Frame.h       ****         B = Color.m_B;
 1685              		.loc 2 132 9 view .LVU544
 132:Frame.h       ****         B = Color.m_B;
 1686              		.loc 2 132 11 is_stmt 0 view .LVU545
 1687 0116 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1688              		.loc 2 134 20 view .LVU546
 1689 0118 4FF0010B 		mov	fp, #1
 132:Frame.h       ****         B = Color.m_B;
 1690              		.loc 2 132 11 view .LVU547
 1691 011c 89F80130 		strb	r3, [r9, #1]
 133:Frame.h       ****         *m_pChange = true;
 1692              		.loc 2 133 9 is_stmt 1 view .LVU548
 133:Frame.h       ****         *m_pChange = true;
 1693              		.loc 2 133 11 is_stmt 0 view .LVU549
 1694 0120 059B     		ldr	r3, [sp, #20]
 1695 0122 89F80230 		strb	r3, [r9, #2]
 134:Frame.h       ****     }
 1696              		.loc 2 134 9 is_stmt 1 view .LVU550
 134:Frame.h       ****     }
 1697              		.loc 2 134 20 is_stmt 0 view .LVU551
 1698 0126 D9F80490 		ldr	r9, [r9, #4]
 1699              	.LVL151:
 134:Frame.h       ****     }
 1700              		.loc 2 134 20 view .LVU552
 1701 012a 89F800B0 		strb	fp, [r9]
 1702              	.LVL152:
 1703              	.L76:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 49


 134:Frame.h       ****     }
 1704              		.loc 2 134 20 view .LVU553
 1705              	.LBE290:
 1706              	.LBE291:
 1707              	.LBE287:
 1708              	.LBE286:
 176:GFX.cpp       ****         setPixel(centerX + y, centerY - x, Color);
 1709              		.loc 1 176 9 is_stmt 1 view .LVU554
 1710              	.LBB292:
 1711              	.LBI292:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1712              		.loc 2 215 17 view .LVU555
 1713              	.LBB293:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1714              		.loc 2 216 9 view .LVU556
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1715              		.loc 2 216 24 is_stmt 0 view .LVU557
 1716 012e 5445     		cmp	r4, r10
 1717 0130 10D2     		bcs	.L75
 217:Frame.h       ****         }
 1718              		.loc 2 217 13 is_stmt 1 view .LVU558
 217:Frame.h       ****         }
 1719              		.loc 2 217 23 is_stmt 0 view .LVU559
 1720 0132 0EFB0479 		mla	r9, lr, r4, r7
 1721              	.LBB294:
 1722              	.LBB295:
 131:Frame.h       ****         G = Color.m_G;
 1723              		.loc 2 131 11 view .LVU560
 1724 0136 039B     		ldr	r3, [sp, #12]
 1725              	.LBE295:
 1726              	.LBE294:
 217:Frame.h       ****         }
 1727              		.loc 2 217 40 view .LVU561
 1728 0138 476D     		ldr	r7, [r0, #84]
 1729              	.LVL153:
 1730              	.LBB298:
 1731              	.LBB296:
 131:Frame.h       ****         G = Color.m_G;
 1732              		.loc 2 131 11 view .LVU562
 1733 013a 07F83930 		strb	r3, [r7, r9, lsl #3]
 1734              	.LBE296:
 1735              	.LBE298:
 217:Frame.h       ****         }
 1736              		.loc 2 217 40 view .LVU563
 1737 013e 07EBC907 		add	r7, r7, r9, lsl #3
 1738              	.LVL154:
 1739              	.LBB299:
 1740              	.LBI294:
 130:Frame.h       ****         R = Color.m_R;
 1741              		.loc 2 130 17 is_stmt 1 view .LVU564
 1742              	.LBB297:
 131:Frame.h       ****         G = Color.m_G;
 1743              		.loc 2 131 9 view .LVU565
 132:Frame.h       ****         B = Color.m_B;
 1744              		.loc 2 132 9 view .LVU566
 132:Frame.h       ****         B = Color.m_B;
 1745              		.loc 2 132 11 is_stmt 0 view .LVU567
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 50


 1746 0142 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1747              		.loc 2 134 20 view .LVU568
 1748 0144 4FF00109 		mov	r9, #1
 132:Frame.h       ****         B = Color.m_B;
 1749              		.loc 2 132 11 view .LVU569
 1750 0148 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
 1751              		.loc 2 133 9 is_stmt 1 view .LVU570
 133:Frame.h       ****         *m_pChange = true;
 1752              		.loc 2 133 11 is_stmt 0 view .LVU571
 1753 014a 059B     		ldr	r3, [sp, #20]
 1754 014c BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1755              		.loc 2 134 9 is_stmt 1 view .LVU572
 134:Frame.h       ****     }
 1756              		.loc 2 134 20 is_stmt 0 view .LVU573
 1757 014e 7F68     		ldr	r7, [r7, #4]
 1758              	.LVL155:
 134:Frame.h       ****     }
 1759              		.loc 2 134 20 view .LVU574
 1760 0150 87F80090 		strb	r9, [r7]
 1761              	.LVL156:
 1762              	.L75:
 134:Frame.h       ****     }
 1763              		.loc 2 134 20 view .LVU575
 1764              	.LBE297:
 1765              	.LBE299:
 1766              	.LBE293:
 1767              	.LBE292:
 177:GFX.cpp       ****         setPixel(centerX - y, centerY + x, Color);
 1768              		.loc 1 177 9 is_stmt 1 view .LVU576
 1769              		.loc 1 177 17 is_stmt 0 view .LVU577
 1770 0154 4F1B     		subs	r7, r1, r5
 1771 0156 BFB2     		uxth	r7, r7
 1772              	.LVL157:
 1773              	.LBB300:
 1774              	.LBI300:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1775              		.loc 2 215 17 is_stmt 1 view .LVU578
 1776              	.LBB301:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1777              		.loc 2 216 9 view .LVU579
 1778 0158 7745     		cmp	r7, lr
 1779 015a 25D2     		bcs	.L78
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1780              		.loc 2 216 30 is_stmt 0 view .LVU580
 1781 015c B0F85E90 		ldrh	r9, [r0, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1782              		.loc 2 216 24 view .LVU581
 1783 0160 4E45     		cmp	r6, r9
 1784 0162 10D2     		bcs	.L79
 217:Frame.h       ****         }
 1785              		.loc 2 217 13 is_stmt 1 view .LVU582
 217:Frame.h       ****         }
 1786              		.loc 2 217 23 is_stmt 0 view .LVU583
 1787 0164 0EFB067A 		mla	r10, lr, r6, r7
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 51


 1788              	.LBB302:
 1789              	.LBB303:
 131:Frame.h       ****         G = Color.m_G;
 1790              		.loc 2 131 11 view .LVU584
 1791 0168 039B     		ldr	r3, [sp, #12]
 1792              	.LBE303:
 1793              	.LBE302:
 217:Frame.h       ****         }
 1794              		.loc 2 217 40 view .LVU585
 1795 016a 466D     		ldr	r6, [r0, #84]
 1796              	.LVL158:
 1797              	.LBB306:
 1798              	.LBB304:
 131:Frame.h       ****         G = Color.m_G;
 1799              		.loc 2 131 11 view .LVU586
 1800 016c 06F83A30 		strb	r3, [r6, r10, lsl #3]
 1801              	.LBE304:
 1802              	.LBE306:
 217:Frame.h       ****         }
 1803              		.loc 2 217 40 view .LVU587
 1804 0170 06EBCA06 		add	r6, r6, r10, lsl #3
 1805              	.LVL159:
 1806              	.LBB307:
 1807              	.LBI302:
 130:Frame.h       ****         R = Color.m_R;
 1808              		.loc 2 130 17 is_stmt 1 view .LVU588
 1809              	.LBB305:
 131:Frame.h       ****         G = Color.m_G;
 1810              		.loc 2 131 9 view .LVU589
 132:Frame.h       ****         B = Color.m_B;
 1811              		.loc 2 132 9 view .LVU590
 132:Frame.h       ****         B = Color.m_B;
 1812              		.loc 2 132 11 is_stmt 0 view .LVU591
 1813 0174 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1814              		.loc 2 134 20 view .LVU592
 1815 0176 4FF0010A 		mov	r10, #1
 132:Frame.h       ****         B = Color.m_B;
 1816              		.loc 2 132 11 view .LVU593
 1817 017a 7370     		strb	r3, [r6, #1]
 133:Frame.h       ****         *m_pChange = true;
 1818              		.loc 2 133 9 is_stmt 1 view .LVU594
 133:Frame.h       ****         *m_pChange = true;
 1819              		.loc 2 133 11 is_stmt 0 view .LVU595
 1820 017c 059B     		ldr	r3, [sp, #20]
 1821 017e B370     		strb	r3, [r6, #2]
 134:Frame.h       ****     }
 1822              		.loc 2 134 9 is_stmt 1 view .LVU596
 134:Frame.h       ****     }
 1823              		.loc 2 134 20 is_stmt 0 view .LVU597
 1824 0180 7668     		ldr	r6, [r6, #4]
 1825              	.LVL160:
 134:Frame.h       ****     }
 1826              		.loc 2 134 20 view .LVU598
 1827 0182 86F800A0 		strb	r10, [r6]
 1828              	.LVL161:
 1829              	.L79:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 52


 134:Frame.h       ****     }
 1830              		.loc 2 134 20 view .LVU599
 1831              	.LBE305:
 1832              	.LBE307:
 1833              	.LBE301:
 1834              	.LBE300:
 178:GFX.cpp       ****         setPixel(centerX - y, centerY - x, Color);
 1835              		.loc 1 178 9 is_stmt 1 view .LVU600
 1836              	.LBB308:
 1837              	.LBI308:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1838              		.loc 2 215 17 view .LVU601
 1839              	.LBB309:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1840              		.loc 2 216 9 view .LVU602
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1841              		.loc 2 216 24 is_stmt 0 view .LVU603
 1842 0186 4C45     		cmp	r4, r9
 1843 0188 0ED2     		bcs	.L78
 217:Frame.h       ****         }
 1844              		.loc 2 217 13 is_stmt 1 view .LVU604
 217:Frame.h       ****         }
 1845              		.loc 2 217 40 is_stmt 0 view .LVU605
 1846 018a 466D     		ldr	r6, [r0, #84]
 217:Frame.h       ****         }
 1847              		.loc 2 217 23 view .LVU606
 1848 018c 0EFB0477 		mla	r7, lr, r4, r7
 1849              	.LVL162:
 1850              	.LBB310:
 1851              	.LBB311:
 131:Frame.h       ****         G = Color.m_G;
 1852              		.loc 2 131 11 view .LVU607
 1853 0190 039B     		ldr	r3, [sp, #12]
 1854 0192 06F83730 		strb	r3, [r6, r7, lsl #3]
 1855              	.LBE311:
 1856              	.LBE310:
 217:Frame.h       ****         }
 1857              		.loc 2 217 40 view .LVU608
 1858 0196 06EBC707 		add	r7, r6, r7, lsl #3
 1859              	.LVL163:
 1860              	.LBB313:
 1861              	.LBI310:
 130:Frame.h       ****         R = Color.m_R;
 1862              		.loc 2 130 17 is_stmt 1 view .LVU609
 1863              	.LBB312:
 131:Frame.h       ****         G = Color.m_G;
 1864              		.loc 2 131 9 view .LVU610
 132:Frame.h       ****         B = Color.m_B;
 1865              		.loc 2 132 9 view .LVU611
 132:Frame.h       ****         B = Color.m_B;
 1866              		.loc 2 132 11 is_stmt 0 view .LVU612
 1867 019a 049B     		ldr	r3, [sp, #16]
 134:Frame.h       ****     }
 1868              		.loc 2 134 20 view .LVU613
 1869 019c 7E68     		ldr	r6, [r7, #4]
 132:Frame.h       ****         B = Color.m_B;
 1870              		.loc 2 132 11 view .LVU614
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 53


 1871 019e 7B70     		strb	r3, [r7, #1]
 133:Frame.h       ****         *m_pChange = true;
 1872              		.loc 2 133 9 is_stmt 1 view .LVU615
 133:Frame.h       ****         *m_pChange = true;
 1873              		.loc 2 133 11 is_stmt 0 view .LVU616
 1874 01a0 059B     		ldr	r3, [sp, #20]
 1875 01a2 BB70     		strb	r3, [r7, #2]
 134:Frame.h       ****     }
 1876              		.loc 2 134 9 is_stmt 1 view .LVU617
 134:Frame.h       ****     }
 1877              		.loc 2 134 20 is_stmt 0 view .LVU618
 1878 01a4 0127     		movs	r7, #1
 1879              	.LVL164:
 134:Frame.h       ****     }
 1880              		.loc 2 134 20 view .LVU619
 1881 01a6 3770     		strb	r7, [r6]
 1882              	.LVL165:
 1883              	.L78:
 134:Frame.h       ****     }
 1884              		.loc 2 134 20 view .LVU620
 1885              	.LBE312:
 1886              	.LBE313:
 1887              	.LBE309:
 1888              	.LBE308:
 179:GFX.cpp       **** 
 180:GFX.cpp       ****         if (m > 0)
 1889              		.loc 1 180 9 is_stmt 1 view .LVU621
 1890 01a8 029B     		ldr	r3, [sp, #8]
 1891 01aa 002B     		cmp	r3, #0
 1892 01ac 06DD     		ble	.L92
 181:GFX.cpp       ****         {
 182:GFX.cpp       ****             y--;
 1893              		.loc 1 182 13 view .LVU622
 1894              		.loc 1 182 14 is_stmt 0 view .LVU623
 1895 01ae 013D     		subs	r5, r5, #1
 183:GFX.cpp       ****             m -= 8 * y;
 1896              		.loc 1 183 15 view .LVU624
 1897 01b0 029B     		ldr	r3, [sp, #8]
 182:GFX.cpp       ****             m -= 8 * y;
 1898              		.loc 1 182 14 view .LVU625
 1899 01b2 AEB2     		uxth	r6, r5
 1900 01b4 2DB2     		sxth	r5, r5
 1901              		.loc 1 183 15 view .LVU626
 1902 01b6 A3EBC603 		sub	r3, r3, r6, lsl #3
 182:GFX.cpp       ****             m -= 8 * y;
 1903              		.loc 1 182 14 view .LVU627
 1904 01ba 0195     		str	r5, [sp, #4]
 1905              	.LVL166:
 1906              	.L92:
 1907              		.loc 1 183 13 is_stmt 1 view .LVU628
 1908              		.loc 1 183 15 is_stmt 0 view .LVU629
 1909 01bc 9BB2     		uxth	r3, r3
 1910              	.LVL167:
 184:GFX.cpp       ****         }
 185:GFX.cpp       ****         x++;
 1911              		.loc 1 185 9 is_stmt 1 view .LVU630
 186:GFX.cpp       ****         m += 8 * x + 4;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 54


 1912              		.loc 1 186 9 view .LVU631
 169:GFX.cpp       ****     {
 1913              		.loc 1 169 14 is_stmt 0 view .LVU632
 1914 01be 08F10108 		add	r8, r8, #1
 1915              	.LVL168:
 169:GFX.cpp       ****     {
 1916              		.loc 1 169 14 view .LVU633
 1917 01c2 019E     		ldr	r6, [sp, #4]
 1918 01c4 013C     		subs	r4, r4, #1
 1919              		.loc 1 186 11 view .LVU634
 1920 01c6 03EBCC03 		add	r3, r3, ip, lsl #3
 169:GFX.cpp       ****     {
 1921              		.loc 1 169 14 view .LVU635
 1922 01ca 0FFA88F5 		sxth	r5, r8
 1923              		.loc 1 186 11 view .LVU636
 1924 01ce 0C33     		adds	r3, r3, #12
 169:GFX.cpp       ****     {
 1925              		.loc 1 169 14 view .LVU637
 1926 01d0 A4B2     		uxth	r4, r4
 1927 01d2 B542     		cmp	r5, r6
 1928              		.loc 1 186 11 view .LVU638
 1929 01d4 1BB2     		sxth	r3, r3
 1930 01d6 0293     		str	r3, [sp, #8]
 1931              	.LVL169:
 169:GFX.cpp       ****     {
 1932              		.loc 1 169 5 is_stmt 1 view .LVU639
 169:GFX.cpp       ****     {
 1933              		.loc 1 169 14 view .LVU640
 1934 01d8 10DC     		bgt	.L68
 1935              	.LVL170:
 1936              	.L83:
 171:GFX.cpp       ****         setPixel(centerX + x, centerY - y, Color);
 1937              		.loc 1 171 9 view .LVU641
 1938 01da 1FFA88FC 		uxth	ip, r8
 171:GFX.cpp       ****         setPixel(centerX + x, centerY - y, Color);
 1939              		.loc 1 171 17 is_stmt 0 view .LVU642
 1940 01de BDF80450 		ldrh	r5, [sp, #4]
 1941 01e2 0CEB0107 		add	r7, ip, r1
 1942 01e6 AE18     		adds	r6, r5, r2
 1943 01e8 BFB2     		uxth	r7, r7
 1944 01ea B6B2     		uxth	r6, r6
 1945              	.LVL171:
 1946              	.LBB314:
 1947              	.LBI256:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1948              		.loc 2 215 17 is_stmt 1 view .LVU643
 1949              	.LBB262:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1950              		.loc 2 216 9 view .LVU644
 1951 01ec 7745     		cmp	r7, lr
 1952 01ee FFF423AF 		bcc	.L93
 1953              	.LVL172:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1954              		.loc 2 216 9 is_stmt 0 view .LVU645
 1955              	.LBE262:
 1956              	.LBE314:
 172:GFX.cpp       ****         setPixel(centerX - x, centerY + y, Color);
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 55


 1957              		.loc 1 172 9 is_stmt 1 view .LVU646
 172:GFX.cpp       ****         setPixel(centerX - x, centerY + y, Color);
 1958              		.loc 1 172 17 is_stmt 0 view .LVU647
 1959 01f2 A2EB0509 		sub	r9, r2, r5
 1960 01f6 1FFA89F9 		uxth	r9, r9
 1961              	.LVL173:
 1962              	.LBB315:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 1963              		.loc 2 215 17 is_stmt 1 view .LVU648
 1964              	.LBB271:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1965              		.loc 2 216 9 view .LVU649
 1966 01fa 4DE7     		b	.L90
 1967              	.LVL174:
 1968              	.L68:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 1969              		.loc 2 216 9 is_stmt 0 view .LVU650
 1970              	.LBE271:
 1971              	.LBE315:
 187:GFX.cpp       ****     }
 188:GFX.cpp       **** }
 1972              		.loc 1 188 1 view .LVU651
 1973 01fc 07B0     		add	sp, sp, #28
 1974              		.cfi_def_cfa_offset 36
 1975              		@ sp needed
 1976 01fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1977              		.cfi_endproc
 1978              	.LFE2636:
 1980 0202 00BF     		.section	.text._ZN4cGFX7drawArcEttttt6cColor,"ax",%progbits
 1981              		.align	1
 1982              		.p2align 2,,3
 1983              		.global	_ZN4cGFX7drawArcEttttt6cColor
 1984              		.syntax unified
 1985              		.thumb
 1986              		.thumb_func
 1988              	_ZN4cGFX7drawArcEttttt6cColor:
 1989              	.LVL175:
 1990              	.LFB2637:
 189:GFX.cpp       **** 
 190:GFX.cpp       **** //-----------------------------------------------------------------------------------
 191:GFX.cpp       **** // Dessin d'un arc de cercle
 192:GFX.cpp       **** // L'algorithme de cercle de Bresenham 
 193:GFX.cpp       **** void cGFX::drawArc(uint16_t centerX, uint16_t centerY, uint16_t radius, uint16_t AlphaIn, uint16_t 
 194:GFX.cpp       **** {
 1991              		.loc 1 194 1 is_stmt 1 view -0
 1992              		.cfi_startproc
 1993              		@ args = 12, pretend = 0, frame = 48
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 1995              		.loc 1 194 1 is_stmt 0 view .LVU653
 1996 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1997              		.cfi_def_cfa_offset 36
 1998              		.cfi_offset 4, -36
 1999              		.cfi_offset 5, -32
 2000              		.cfi_offset 6, -28
 2001              		.cfi_offset 7, -24
 2002              		.cfi_offset 8, -20
 2003              		.cfi_offset 9, -16
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 56


 2004              		.cfi_offset 10, -12
 2005              		.cfi_offset 11, -8
 2006              		.cfi_offset 14, -4
 2007 0004 8DB0     		sub	sp, sp, #52
 2008              		.cfi_def_cfa_offset 88
 2009              		.loc 1 194 1 view .LVU654
 2010 0006 8146     		mov	r9, r0
 2011 0008 0692     		str	r2, [sp, #24]
 2012 000a 9DF86020 		ldrb	r2, [sp, #96]	@ zero_extendqisi2
 2013              	.LVL176:
 2014              		.loc 1 194 1 view .LVU655
 2015 000e BDF85850 		ldrh	r5, [sp, #88]
 2016 0012 BDF85C70 		ldrh	r7, [sp, #92]
 2017 0016 0992     		str	r2, [sp, #36]
 2018              	.LVL177:
 2019              		.loc 1 194 1 view .LVU656
 2020 0018 9DF86120 		ldrb	r2, [sp, #97]	@ zero_extendqisi2
 2021              	.LBB388:
 195:GFX.cpp       ****     bool Inv = false;
 196:GFX.cpp       ****     if(AlphaIn > AlphaOut){
 2022              		.loc 1 196 5 view .LVU657
 2023 001c BD42     		cmp	r5, r7
 2024              	.LBE388:
 194:GFX.cpp       ****     bool Inv = false;
 2025              		.loc 1 194 1 view .LVU658
 2026 001e 0491     		str	r1, [sp, #16]
 2027 0020 0892     		str	r2, [sp, #32]
 2028              	.LVL178:
 194:GFX.cpp       ****     bool Inv = false;
 2029              		.loc 1 194 1 view .LVU659
 2030 0022 9DF86220 		ldrb	r2, [sp, #98]	@ zero_extendqisi2
 2031 0026 0792     		str	r2, [sp, #28]
 2032              	.LVL179:
 195:GFX.cpp       ****     bool Inv = false;
 2033              		.loc 1 195 5 is_stmt 1 view .LVU660
 2034              		.loc 1 196 5 view .LVU661
 2035              	.LBB390:
 2036 0028 40F2A382 		bls	.L142
 2037 002c 2A46     		mov	r2, r5
 2038 002e 3D46     		mov	r5, r7
 2039 0030 1746     		mov	r7, r2
 2040              	.LBB389:
 197:GFX.cpp       ****         uint16_t Temp = AlphaIn;
 198:GFX.cpp       ****         AlphaIn = AlphaOut;
 199:GFX.cpp       ****         AlphaOut = Temp;
 200:GFX.cpp       ****         Inv = true;
 2041              		.loc 1 200 13 is_stmt 0 view .LVU662
 2042 0032 0122     		movs	r2, #1
 2043 0034 0592     		str	r2, [sp, #20]
 2044              	.L95:
 2045              	.LVL180:
 2046              		.loc 1 200 13 view .LVU663
 2047              	.LBE389:
 2048              	.LBE390:
 201:GFX.cpp       ****     }
 202:GFX.cpp       ****     int16_t x = 0;
 2049              		.loc 1 202 5 is_stmt 1 view .LVU664
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 57


 203:GFX.cpp       ****     int16_t y = radius;
 2050              		.loc 1 203 5 view .LVU665
 204:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 2051              		.loc 1 204 19 is_stmt 0 view .LVU666
 2052 0036 9C00     		lsls	r4, r3, #2
 203:GFX.cpp       ****     int16_t y = radius;
 2053              		.loc 1 203 13 view .LVU667
 2054 0038 1EB2     		sxth	r6, r3
 2055              	.LVL181:
 2056              		.loc 1 204 5 is_stmt 1 view .LVU668
 2057              		.loc 1 204 19 is_stmt 0 view .LVU669
 2058 003a C4F10504 		rsb	r4, r4, #5
 205:GFX.cpp       **** 
 206:GFX.cpp       ****     while (x <= y) {
 2059              		.loc 1 206 14 view .LVU670
 2060 003e 002E     		cmp	r6, #0
 204:GFX.cpp       ****     int16_t m = 5 - 4 * radius;
 2061              		.loc 1 204 13 view .LVU671
 2062 0040 24B2     		sxth	r4, r4
 2063              	.LVL182:
 2064              		.loc 1 206 5 is_stmt 1 view .LVU672
 2065              		.loc 1 206 14 view .LVU673
 2066 0042 C0F27182 		blt	.L94
 2067 0046 069B     		ldr	r3, [sp, #24]
 2068              	.LVL183:
 2069              		.loc 1 206 14 is_stmt 0 view .LVU674
 2070 0048 4FF0000A 		mov	r10, #0
 2071 004c DDF810B0 		ldr	fp, [sp, #16]
 2072 0050 0194     		str	r4, [sp, #4]
 2073 0052 D846     		mov	r8, fp
 2074 0054 CDE90233 		strd	r3, r3, [sp, #8]
 2075 0058 5346     		mov	r3, r10
 2076 005a 6BE0     		b	.L96
 2077              	.LVL184:
 2078              	.L217:
 2079              	.LBB391:
 2080              	.LBB392:
 2081              	.LBB393:
 207:GFX.cpp       ****         
 208:GFX.cpp       ****         uint16_t angle = atan2((float) y, (float) x) * 180 / __PI; // Conversion de radians en degr
 209:GFX.cpp       ****         if(Inv){
 210:GFX.cpp       ****             uint16_t angle1 = 90 - angle;        
 2082              		.loc 1 210 13 is_stmt 1 view .LVU675
 2083              		.loc 1 210 22 is_stmt 0 view .LVU676
 2084 005c C3F15A02 		rsb	r2, r3, #90
 2085 0060 92B2     		uxth	r2, r2
 2086              	.LVL185:
 211:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + x, centerY - y, 
 2087              		.loc 1 211 13 is_stmt 1 view .LVU677
 2088 0062 9542     		cmp	r5, r2
 2089 0064 00F24282 		bhi	.L144
 2090              		.loc 1 211 13 is_stmt 0 view .LVU678
 2091 0068 9742     		cmp	r7, r2
 2092 006a C0F03F82 		bcc	.L144
 2093              	.LVL186:
 2094              	.L98:
 212:GFX.cpp       ****             uint16_t angle2 = angle;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 58


 2095              		.loc 1 212 13 is_stmt 1 view .LVU679
 213:GFX.cpp       ****             if(!((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX + y, centerY - x, 
 2096              		.loc 1 213 13 view .LVU680
 2097 006e 9D42     		cmp	r5, r3
 2098 0070 00F20E82 		bhi	.L145
 2099 0074 9F42     		cmp	r7, r3
 2100 0076 C0F00B82 		bcc	.L145
 214:GFX.cpp       ****             angle1 += 90;       
 2101              		.loc 1 214 13 view .LVU681
 2102              		.loc 1 214 20 is_stmt 0 view .LVU682
 2103 007a C3F1B402 		rsb	r2, r3, #180
 2104 007e 92B2     		uxth	r2, r2
 2105              	.LVL187:
 215:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, 
 2106              		.loc 1 215 13 is_stmt 1 view .LVU683
 2107 0080 9542     		cmp	r5, r2
 2108 0082 00F26582 		bhi	.L104
 2109 0086 9742     		cmp	r7, r2
 2110 0088 C0F06282 		bcc	.L104
 2111              	.LVL188:
 2112              	.L102:
 216:GFX.cpp       ****             angle2 += 90;
 2113              		.loc 1 216 13 view .LVU684
 2114              		.loc 1 216 20 is_stmt 0 view .LVU685
 2115 008c 03F15A02 		add	r2, r3, #90
 2116 0090 92B2     		uxth	r2, r2
 2117              	.LVL189:
 217:GFX.cpp       ****             if(!((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX + x, centerY + y, 
 2118              		.loc 1 217 13 is_stmt 1 view .LVU686
 2119 0092 9542     		cmp	r5, r2
 2120 0094 00F2DE81 		bhi	.L146
 2121 0098 9742     		cmp	r7, r2
 2122 009a C0F0DB81 		bcc	.L146
 2123              	.LVL190:
 2124              	.L106:
 218:GFX.cpp       ****             angle1 += 90;
 2125              		.loc 1 218 13 view .LVU687
 2126              		.loc 1 218 20 is_stmt 0 view .LVU688
 2127 009e C3F58772 		rsb	r2, r3, #270
 2128 00a2 92B2     		uxth	r2, r2
 2129              	.LVL191:
 219:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - x, centerY + y, 
 2130              		.loc 1 219 13 is_stmt 1 view .LVU689
 2131 00a4 9542     		cmp	r5, r2
 2132 00a6 00F2B781 		bhi	.L147
 2133 00aa 9742     		cmp	r7, r2
 2134 00ac C0F0B481 		bcc	.L147
 2135              	.LVL192:
 2136              	.L108:
 220:GFX.cpp       ****             angle2 += 90;
 2137              		.loc 1 220 13 view .LVU690
 2138              		.loc 1 220 20 is_stmt 0 view .LVU691
 2139 00b0 03F1B402 		add	r2, r3, #180
 2140 00b4 92B2     		uxth	r2, r2
 2141              	.LVL193:
 221:GFX.cpp       ****             if(!((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - y, centerY + x, 
 2142              		.loc 1 221 13 is_stmt 1 view .LVU692
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 59


 2143 00b6 9542     		cmp	r5, r2
 2144 00b8 00F27A81 		bhi	.L148
 2145 00bc 9742     		cmp	r7, r2
 2146 00be C0F07781 		bcc	.L148
 222:GFX.cpp       ****             angle1 += 90;
 2147              		.loc 1 222 13 view .LVU693
 2148              		.loc 1 222 20 is_stmt 0 view .LVU694
 2149 00c2 C3F5B472 		rsb	r2, r3, #360
 2150              	.LVL194:
 2151              		.loc 1 222 20 view .LVU695
 2152 00c6 92B2     		uxth	r2, r2
 2153              	.LVL195:
 223:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, 
 2154              		.loc 1 223 13 is_stmt 1 view .LVU696
 2155 00c8 9542     		cmp	r5, r2
 2156 00ca 00F23082 		bhi	.L114
 2157 00ce 9742     		cmp	r7, r2
 2158 00d0 C0F02D82 		bcc	.L114
 2159              	.LVL196:
 2160              	.L112:
 224:GFX.cpp       ****             angle2 += 90;
 2161              		.loc 1 224 13 view .LVU697
 2162              		.loc 1 224 20 is_stmt 0 view .LVU698
 2163 00d4 03F58773 		add	r3, r3, #270
 2164              	.LVL197:
 2165              		.loc 1 224 20 view .LVU699
 2166 00d8 9BB2     		uxth	r3, r3
 2167              	.LVL198:
 225:GFX.cpp       ****             if(!((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - x, centerY - y, 
 2168              		.loc 1 225 13 is_stmt 1 view .LVU700
 2169 00da 9D42     		cmp	r5, r3
 2170 00dc 00F2F580 		bhi	.L215
 2171 00e0 9F42     		cmp	r7, r3
 2172 00e2 C0F0F280 		bcc	.L215
 2173              	.LVL199:
 2174              	.L116:
 2175              		.loc 1 225 13 is_stmt 0 view .LVU701
 2176              	.LBE393:
 2177              	.LBE392:
 226:GFX.cpp       ****         }else{
 227:GFX.cpp       ****             uint16_t angle1 = 90 - angle;        
 228:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + x, centerY - y, C
 229:GFX.cpp       ****             uint16_t angle2 = angle;
 230:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX + y, centerY - x, C
 231:GFX.cpp       ****             angle1 += 90;       
 232:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, C
 233:GFX.cpp       ****             angle2 += 90;
 234:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX + x, centerY + y, C
 235:GFX.cpp       ****             angle1 += 90;
 236:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - x, centerY + y, C
 237:GFX.cpp       ****             angle2 += 90;
 238:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - y, centerY + x, C
 239:GFX.cpp       ****             angle1 += 90;
 240:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, C
 241:GFX.cpp       ****             angle2 += 90;
 242:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - x, centerY - y, C
 243:GFX.cpp       ****         }
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 60


 244:GFX.cpp       **** 
 245:GFX.cpp       ****         if (m > 0)
 2178              		.loc 1 245 9 is_stmt 1 view .LVU702
 2179 00e6 019B     		ldr	r3, [sp, #4]
 2180 00e8 002B     		cmp	r3, #0
 2181 00ea 40F30F81 		ble	.L216
 2182              	.LVL200:
 2183              	.L133:
 246:GFX.cpp       ****         {
 247:GFX.cpp       ****             y--;
 2184              		.loc 1 247 13 view .LVU703
 2185              		.loc 1 247 14 is_stmt 0 view .LVU704
 2186 00ee 013E     		subs	r6, r6, #1
 2187              	.LVL201:
 248:GFX.cpp       ****             m -= 8 * y;
 2188              		.loc 1 248 15 view .LVU705
 2189 00f0 019A     		ldr	r2, [sp, #4]
 247:GFX.cpp       ****             m -= 8 * y;
 2190              		.loc 1 247 14 view .LVU706
 2191 00f2 B3B2     		uxth	r3, r6
 2192 00f4 36B2     		sxth	r6, r6
 2193              	.LVL202:
 2194              		.loc 1 248 13 is_stmt 1 view .LVU707
 2195              		.loc 1 248 15 is_stmt 0 view .LVU708
 2196 00f6 A2EBC304 		sub	r4, r2, r3, lsl #3
 2197 00fa A4B2     		uxth	r4, r4
 2198              	.LVL203:
 2199              	.L134:
 249:GFX.cpp       ****         }
 250:GFX.cpp       ****         x++;
 2200              		.loc 1 250 9 is_stmt 1 view .LVU709
 251:GFX.cpp       ****         m += 8 * x + 4;
 2201              		.loc 1 251 9 view .LVU710
 2202              	.LBE391:
 206:GFX.cpp       ****         
 2203              		.loc 1 206 14 is_stmt 0 view .LVU711
 2204 00fc 039B     		ldr	r3, [sp, #12]
 2205              	.LBB599:
 2206              		.loc 1 251 11 view .LVU712
 2207 00fe 04EBCE04 		add	r4, r4, lr, lsl #3
 2208              	.LBE599:
 206:GFX.cpp       ****         
 2209              		.loc 1 206 14 view .LVU713
 2210 0102 029A     		ldr	r2, [sp, #8]
 2211 0104 0AF1010A 		add	r10, r10, #1
 2212 0108 013B     		subs	r3, r3, #1
 2213              	.LBB600:
 2214              		.loc 1 251 11 view .LVU714
 2215 010a 0C34     		adds	r4, r4, #12
 2216              	.LBE600:
 206:GFX.cpp       ****         
 2217              		.loc 1 206 14 view .LVU715
 2218 010c 0132     		adds	r2, r2, #1
 2219 010e 0BF1FF3B 		add	fp, fp, #-1
 2220 0112 9BB2     		uxth	r3, r3
 2221 0114 08F10108 		add	r8, r8, #1
 2222              	.LBB601:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 61


 2223              		.loc 1 251 11 view .LVU716
 2224 0118 21B2     		sxth	r1, r4
 2225              	.LBE601:
 206:GFX.cpp       ****         
 2226              		.loc 1 206 14 view .LVU717
 2227 011a 0393     		str	r3, [sp, #12]
 2228 011c 0FFA8AF3 		sxth	r3, r10
 2229 0120 92B2     		uxth	r2, r2
 2230              	.LBB602:
 2231              		.loc 1 251 11 view .LVU718
 2232 0122 0191     		str	r1, [sp, #4]
 2233              	.LVL204:
 2234              		.loc 1 251 11 view .LVU719
 2235              	.LBE602:
 206:GFX.cpp       ****         
 2236              		.loc 1 206 5 is_stmt 1 view .LVU720
 206:GFX.cpp       ****         
 2237              		.loc 1 206 14 view .LVU721
 2238 0124 9E42     		cmp	r6, r3
 2239 0126 1FFA8BFB 		uxth	fp, fp
 2240 012a 1FFA88F8 		uxth	r8, r8
 2241 012e 0292     		str	r2, [sp, #8]
 2242 0130 C0F2FA81 		blt	.L94
 2243              	.LVL205:
 2244              	.L96:
 2245              	.LBB603:
 2246              	.LBB590:
 2247              	.LBB591:
 2248              		.file 4 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** /** @file include/cmath
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 62


  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  as macros in C).
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  */
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include_next <math.h>
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef div
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef acos
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef asin
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan2
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ceil
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cos
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cosh
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef exp
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fabs
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef floor
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fmod
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef frexp
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ldexp
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log10
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef modf
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef pow
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sin
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sinh
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sqrt
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tan
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tanh
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** extern "C++"
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::acos;
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 63


  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(float __x)
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(long double __x)
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::asin;
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(float __x)
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(long double __x)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     asin(_Tp __x)
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(float __x)
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(long double __x)
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan2;
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 64


 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 2249              		.loc 4 145 28 is_stmt 0 view .LVU722
 2250 0134 07EE903A 		vmov	s15, r3	@ int
 2251 0138 F8EEE70A 		vcvt.f32.s32	s1, s15
 2252 013c 07EE906A 		vmov	s15, r6	@ int
 2253 0140 B8EEE70A 		vcvt.f32.s32	s0, s15
 2254 0144 FFF7FEFF 		bl	atan2f
 2255              	.LVL206:
 2256              	.LBE591:
 2257              	.LBE590:
 208:GFX.cpp       ****         if(Inv){
 2258              		.loc 1 208 54 view .LVU723
 2259 0148 DFEDB17A 		vldr.32	s15, .L225
 208:GFX.cpp       ****         if(Inv){
 2260              		.loc 1 208 60 view .LVU724
 2261 014c 9FEDB17A 		vldr.32	s14, .L225+4
 2262 0150 1FFA8AFE 		uxth	lr, r10
 2263              	.LVL207:
 208:GFX.cpp       ****         if(Inv){
 2264              		.loc 1 208 9 is_stmt 1 view .LVU725
 2265              	.LBB593:
 2266              	.LBI590:
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 2267              		.loc 4 144 3 view .LVU726
 2268              	.LBB592:
 2269              		.loc 4 145 5 view .LVU727
 2270              		.loc 4 145 5 is_stmt 0 view .LVU728
 2271              	.LBE592:
 2272              	.LBE593:
 208:GFX.cpp       ****         if(Inv){
 2273              		.loc 1 208 54 view .LVU729
 2274 0154 20EE270A 		vmul.f32	s0, s0, s15
 2275              	.LBB594:
 209:GFX.cpp       ****             uint16_t angle1 = 90 - angle;        
 2276              		.loc 1 209 9 view .LVU730
 2277 0158 059A     		ldr	r2, [sp, #20]
 2278              	.LBE594:
 208:GFX.cpp       ****         if(Inv){
 2279              		.loc 1 208 60 view .LVU731
 2280 015a C0EE077A 		vdiv.f32	s15, s0, s14
 208:GFX.cpp       ****         if(Inv){
 2281              		.loc 1 208 62 view .LVU732
 2282 015e FCEEE77A 		vcvt.u32.f32	s15, s15
 2283 0162 17EE903A 		vmov	r3, s15	@ int
 2284 0166 9BB2     		uxth	r3, r3
 2285              	.LVL208:
 209:GFX.cpp       ****             uint16_t angle1 = 90 - angle;        
 2286              		.loc 1 209 9 is_stmt 1 view .LVU733
 2287              	.LBB595:
 2288 0168 002A     		cmp	r2, #0
 2289 016a 7FF477AF 		bne	.L217
 2290              	.LBB490:
 227:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + x, centerY - y, C
 2291              		.loc 1 227 13 view .LVU734
 227:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + x, centerY - y, C
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 65


 2292              		.loc 1 227 22 is_stmt 0 view .LVU735
 2293 016e C3F15A02 		rsb	r2, r3, #90
 2294 0172 92B2     		uxth	r2, r2
 2295              	.LVL209:
 228:GFX.cpp       ****             uint16_t angle2 = angle;
 2296              		.loc 1 228 13 is_stmt 1 view .LVU736
 2297 0174 9542     		cmp	r5, r2
 2298 0176 0DD8     		bhi	.L118
 2299 0178 9742     		cmp	r7, r2
 2300 017a 0BD3     		bcc	.L118
 228:GFX.cpp       ****             uint16_t angle2 = angle;
 2301              		.loc 1 228 64 discriminator 1 view .LVU737
 2302              	.LVL210:
 2303              	.LBB491:
 2304              	.LBI491:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2305              		.loc 2 215 17 discriminator 1 view .LVU738
 2306              	.LBB492:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2307              		.loc 2 216 9 discriminator 1 view .LVU739
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2308              		.loc 2 216 15 is_stmt 0 discriminator 1 view .LVU740
 2309 017c B9F85C10 		ldrh	r1, [r9, #92]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2310              		.loc 2 216 9 discriminator 1 view .LVU741
 2311 0180 8845     		cmp	r8, r1
 2312 0182 07D2     		bcs	.L118
 2313              	.LBE492:
 2314              	.LBE491:
 228:GFX.cpp       ****             uint16_t angle2 = angle;
 2315              		.loc 1 228 72 view .LVU742
 2316 0184 069A     		ldr	r2, [sp, #24]
 2317              	.LVL211:
 2318              	.LBB502:
 2319              	.LBB499:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2320              		.loc 2 216 24 view .LVU743
 2321 0186 B9F85E00 		ldrh	r0, [r9, #94]
 2322              	.LBE499:
 2323              	.LBE502:
 228:GFX.cpp       ****             uint16_t angle2 = angle;
 2324              		.loc 1 228 72 view .LVU744
 2325 018a 921B     		subs	r2, r2, r6
 2326 018c 92B2     		uxth	r2, r2
 2327              	.LBB503:
 2328              	.LBB500:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2329              		.loc 2 216 24 view .LVU745
 2330 018e 9042     		cmp	r0, r2
 2331 0190 00F23582 		bhi	.L218
 2332              	.LVL212:
 2333              	.L118:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2334              		.loc 2 216 24 view .LVU746
 2335              	.LBE500:
 2336              	.LBE503:
 229:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX + y, centerY - x, C
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 66


 2337              		.loc 1 229 13 is_stmt 1 view .LVU747
 230:GFX.cpp       ****             angle1 += 90;       
 2338              		.loc 1 230 13 view .LVU748
 2339 0194 9D42     		cmp	r5, r3
 2340 0196 00F2BB80 		bhi	.L119
 2341 019a 9F42     		cmp	r7, r3
 2342 019c C0F0B880 		bcc	.L119
 230:GFX.cpp       ****             angle1 += 90;       
 2343              		.loc 1 230 64 discriminator 1 view .LVU749
 230:GFX.cpp       ****             angle1 += 90;       
 2344              		.loc 1 230 72 is_stmt 0 discriminator 1 view .LVU750
 2345 01a0 049A     		ldr	r2, [sp, #16]
 2346              	.LBB504:
 2347              	.LBB505:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2348              		.loc 2 216 15 discriminator 1 view .LVU751
 2349 01a2 B9F85C10 		ldrh	r1, [r9, #92]
 2350              	.LBE505:
 2351              	.LBE504:
 230:GFX.cpp       ****             angle1 += 90;       
 2352              		.loc 1 230 72 discriminator 1 view .LVU752
 2353 01a6 3244     		add	r2, r2, r6
 2354 01a8 92B2     		uxth	r2, r2
 2355              	.LVL213:
 2356              	.LBB511:
 2357              	.LBI504:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2358              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU753
 2359              	.LBB510:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2360              		.loc 2 216 9 discriminator 1 view .LVU754
 2361 01aa 8A42     		cmp	r2, r1
 2362 01ac 27D2     		bcs	.L120
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2363              		.loc 2 216 30 is_stmt 0 view .LVU755
 2364 01ae B9F85E00 		ldrh	r0, [r9, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2365              		.loc 2 216 24 view .LVU756
 2366 01b2 039C     		ldr	r4, [sp, #12]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2367              		.loc 2 216 30 view .LVU757
 2368 01b4 0A90     		str	r0, [sp, #40]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2369              		.loc 2 216 24 view .LVU758
 2370 01b6 8442     		cmp	r4, r0
 2371 01b8 0B94     		str	r4, [sp, #44]
 2372 01ba 17D2     		bcs	.L121
 217:Frame.h       ****         }
 2373              		.loc 2 217 13 is_stmt 1 view .LVU759
 217:Frame.h       ****         }
 2374              		.loc 2 217 40 is_stmt 0 view .LVU760
 2375 01bc D9F85440 		ldr	r4, [r9, #84]
 2376 01c0 2046     		mov	r0, r4
 217:Frame.h       ****         }
 2377              		.loc 2 217 23 view .LVU761
 2378 01c2 0B9C     		ldr	r4, [sp, #44]
 2379 01c4 01FB042C 		mla	ip, r1, r4, r2
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 67


 2380              	.LBB506:
 2381              	.LBB507:
 131:Frame.h       ****         G = Color.m_G;
 2382              		.loc 2 131 11 view .LVU762
 2383 01c8 0446     		mov	r4, r0
 2384 01ca 0998     		ldr	r0, [sp, #36]
 2385 01cc 04F83C00 		strb	r0, [r4, ip, lsl #3]
 2386              	.LBE507:
 2387              	.LBE506:
 217:Frame.h       ****         }
 2388              		.loc 2 217 40 view .LVU763
 2389 01d0 04EBCC0C 		add	ip, r4, ip, lsl #3
 2390              	.LVL214:
 2391              	.LBB509:
 2392              	.LBI506:
 130:Frame.h       ****         R = Color.m_R;
 2393              		.loc 2 130 17 is_stmt 1 view .LVU764
 2394              	.LBB508:
 131:Frame.h       ****         G = Color.m_G;
 2395              		.loc 2 131 9 view .LVU765
 132:Frame.h       ****         B = Color.m_B;
 2396              		.loc 2 132 9 view .LVU766
 132:Frame.h       ****         B = Color.m_B;
 2397              		.loc 2 132 11 is_stmt 0 view .LVU767
 2398 01d4 0898     		ldr	r0, [sp, #32]
 2399 01d6 8CF80100 		strb	r0, [ip, #1]
 133:Frame.h       ****         *m_pChange = true;
 2400              		.loc 2 133 9 is_stmt 1 view .LVU768
 133:Frame.h       ****         *m_pChange = true;
 2401              		.loc 2 133 11 is_stmt 0 view .LVU769
 2402 01da 0798     		ldr	r0, [sp, #28]
 2403 01dc 8CF80200 		strb	r0, [ip, #2]
 134:Frame.h       ****     }
 2404              		.loc 2 134 9 is_stmt 1 view .LVU770
 134:Frame.h       ****     }
 2405              		.loc 2 134 20 is_stmt 0 view .LVU771
 2406 01e0 DCF80400 		ldr	r0, [ip, #4]
 2407 01e4 4FF0010C 		mov	ip, #1
 2408              	.LVL215:
 134:Frame.h       ****     }
 2409              		.loc 2 134 20 view .LVU772
 2410 01e8 80F800C0 		strb	ip, [r0]
 2411              	.LVL216:
 2412              	.L121:
 134:Frame.h       ****     }
 2413              		.loc 2 134 20 view .LVU773
 2414              	.LBE508:
 2415              	.LBE509:
 2416              	.LBE510:
 2417              	.LBE511:
 231:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, C
 2418              		.loc 1 231 13 is_stmt 1 view .LVU774
 231:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, C
 2419              		.loc 1 231 20 is_stmt 0 view .LVU775
 2420 01ec C3F1B40C 		rsb	ip, r3, #180
 2421 01f0 1FFA8CFC 		uxth	ip, ip
 2422              	.LVL217:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 68


 232:GFX.cpp       ****             angle2 += 90;
 2423              		.loc 1 232 13 is_stmt 1 view .LVU776
 2424 01f4 6745     		cmp	r7, ip
 2425 01f6 02D3     		bcc	.L120
 2426 01f8 6545     		cmp	r5, ip
 2427 01fa 40F29D80 		bls	.L140
 2428              	.LVL218:
 2429              	.L120:
 233:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX + x, centerY + y, C
 2430              		.loc 1 233 13 view .LVU777
 233:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX + x, centerY + y, C
 2431              		.loc 1 233 20 is_stmt 0 view .LVU778
 2432 01fe 03F15A02 		add	r2, r3, #90
 2433 0202 92B2     		uxth	r2, r2
 2434              	.LVL219:
 234:GFX.cpp       ****             angle1 += 90;
 2435              		.loc 1 234 13 is_stmt 1 view .LVU779
 2436 0204 9542     		cmp	r5, r2
 2437 0206 0DD8     		bhi	.L125
 2438 0208 9742     		cmp	r7, r2
 2439 020a 0BD3     		bcc	.L125
 234:GFX.cpp       ****             angle1 += 90;
 2440              		.loc 1 234 64 discriminator 1 view .LVU780
 2441              	.LVL220:
 2442              	.LBB512:
 2443              	.LBI512:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2444              		.loc 2 215 17 discriminator 1 view .LVU781
 2445              	.LBB513:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2446              		.loc 2 216 9 discriminator 1 view .LVU782
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2447              		.loc 2 216 15 is_stmt 0 discriminator 1 view .LVU783
 2448 020c B9F85C10 		ldrh	r1, [r9, #92]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2449              		.loc 2 216 9 discriminator 1 view .LVU784
 2450 0210 8845     		cmp	r8, r1
 2451 0212 07D2     		bcs	.L125
 2452              	.LBE513:
 2453              	.LBE512:
 234:GFX.cpp       ****             angle1 += 90;
 2454              		.loc 1 234 72 view .LVU785
 2455 0214 069A     		ldr	r2, [sp, #24]
 2456              	.LVL221:
 2457              	.LBB523:
 2458              	.LBB520:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2459              		.loc 2 216 24 view .LVU786
 2460 0216 B9F85E00 		ldrh	r0, [r9, #94]
 2461              	.LBE520:
 2462              	.LBE523:
 234:GFX.cpp       ****             angle1 += 90;
 2463              		.loc 1 234 72 view .LVU787
 2464 021a 3244     		add	r2, r2, r6
 2465 021c 92B2     		uxth	r2, r2
 2466              	.LBB524:
 2467              	.LBB521:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 69


 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2468              		.loc 2 216 24 view .LVU788
 2469 021e 9042     		cmp	r0, r2
 2470 0220 00F2DC81 		bhi	.L219
 2471              	.LVL222:
 2472              	.L125:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2473              		.loc 2 216 24 view .LVU789
 2474              	.LBE521:
 2475              	.LBE524:
 235:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - x, centerY + y, C
 2476              		.loc 1 235 13 is_stmt 1 view .LVU790
 235:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - x, centerY + y, C
 2477              		.loc 1 235 20 is_stmt 0 view .LVU791
 2478 0224 C3F58772 		rsb	r2, r3, #270
 2479 0228 92B2     		uxth	r2, r2
 2480              	.LVL223:
 236:GFX.cpp       ****             angle2 += 90;
 2481              		.loc 1 236 13 is_stmt 1 view .LVU792
 2482 022a 9542     		cmp	r5, r2
 2483 022c 0DD8     		bhi	.L126
 2484 022e 9742     		cmp	r7, r2
 2485 0230 0BD3     		bcc	.L126
 236:GFX.cpp       ****             angle2 += 90;
 2486              		.loc 1 236 64 discriminator 1 view .LVU793
 2487              	.LVL224:
 2488              	.LBB525:
 2489              	.LBI525:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2490              		.loc 2 215 17 discriminator 1 view .LVU794
 2491              	.LBB526:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2492              		.loc 2 216 9 discriminator 1 view .LVU795
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2493              		.loc 2 216 15 is_stmt 0 discriminator 1 view .LVU796
 2494 0232 B9F85C10 		ldrh	r1, [r9, #92]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2495              		.loc 2 216 9 discriminator 1 view .LVU797
 2496 0236 8B45     		cmp	fp, r1
 2497 0238 07D2     		bcs	.L126
 2498              	.LBE526:
 2499              	.LBE525:
 236:GFX.cpp       ****             angle2 += 90;
 2500              		.loc 1 236 72 view .LVU798
 2501 023a 069A     		ldr	r2, [sp, #24]
 2502              	.LVL225:
 2503              	.LBB536:
 2504              	.LBB533:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2505              		.loc 2 216 24 view .LVU799
 2506 023c B9F85E00 		ldrh	r0, [r9, #94]
 2507              	.LBE533:
 2508              	.LBE536:
 236:GFX.cpp       ****             angle2 += 90;
 2509              		.loc 1 236 72 view .LVU800
 2510 0240 3244     		add	r2, r2, r6
 2511 0242 92B2     		uxth	r2, r2
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 70


 2512              	.LBB537:
 2513              	.LBB534:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2514              		.loc 2 216 24 view .LVU801
 2515 0244 9042     		cmp	r0, r2
 2516 0246 00F2EB81 		bhi	.L220
 2517              	.LVL226:
 2518              	.L126:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2519              		.loc 2 216 24 view .LVU802
 2520              	.LBE534:
 2521              	.LBE537:
 237:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - y, centerY + x, C
 2522              		.loc 1 237 13 is_stmt 1 view .LVU803
 237:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - y, centerY + x, C
 2523              		.loc 1 237 20 is_stmt 0 view .LVU804
 2524 024a 03F1B402 		add	r2, r3, #180
 2525 024e 92B2     		uxth	r2, r2
 2526              	.LVL227:
 238:GFX.cpp       ****             angle1 += 90;
 2527              		.loc 1 238 13 is_stmt 1 view .LVU805
 2528 0250 9542     		cmp	r5, r2
 2529 0252 00F28780 		bhi	.L127
 2530 0256 9742     		cmp	r7, r2
 2531 0258 C0F08480 		bcc	.L127
 238:GFX.cpp       ****             angle1 += 90;
 2532              		.loc 1 238 64 discriminator 1 view .LVU806
 238:GFX.cpp       ****             angle1 += 90;
 2533              		.loc 1 238 72 is_stmt 0 discriminator 1 view .LVU807
 2534 025c 049A     		ldr	r2, [sp, #16]
 2535              	.LVL228:
 2536              	.LBB538:
 2537              	.LBB539:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2538              		.loc 2 216 15 discriminator 1 view .LVU808
 2539 025e B9F85C10 		ldrh	r1, [r9, #92]
 2540              	.LBE539:
 2541              	.LBE538:
 238:GFX.cpp       ****             angle1 += 90;
 2542              		.loc 1 238 72 discriminator 1 view .LVU809
 2543 0262 921B     		subs	r2, r2, r6
 2544 0264 92B2     		uxth	r2, r2
 2545              	.LVL229:
 2546              	.LBB545:
 2547              	.LBI538:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2548              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU810
 2549              	.LBB544:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2550              		.loc 2 216 9 discriminator 1 view .LVU811
 2551 0266 8A42     		cmp	r2, r1
 2552 0268 26D2     		bcs	.L128
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2553              		.loc 2 216 30 is_stmt 0 view .LVU812
 2554 026a B9F85E00 		ldrh	r0, [r9, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2555              		.loc 2 216 24 view .LVU813
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 71


 2556 026e 029C     		ldr	r4, [sp, #8]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2557              		.loc 2 216 30 view .LVU814
 2558 0270 0A90     		str	r0, [sp, #40]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2559              		.loc 2 216 24 view .LVU815
 2560 0272 8442     		cmp	r4, r0
 2561 0274 0B94     		str	r4, [sp, #44]
 2562 0276 17D2     		bcs	.L129
 217:Frame.h       ****         }
 2563              		.loc 2 217 13 is_stmt 1 view .LVU816
 217:Frame.h       ****         }
 2564              		.loc 2 217 40 is_stmt 0 view .LVU817
 2565 0278 D9F85440 		ldr	r4, [r9, #84]
 2566 027c 2046     		mov	r0, r4
 217:Frame.h       ****         }
 2567              		.loc 2 217 23 view .LVU818
 2568 027e 0B9C     		ldr	r4, [sp, #44]
 2569 0280 01FB042C 		mla	ip, r1, r4, r2
 2570              	.LBB540:
 2571              	.LBB541:
 131:Frame.h       ****         G = Color.m_G;
 2572              		.loc 2 131 11 view .LVU819
 2573 0284 0446     		mov	r4, r0
 2574 0286 0998     		ldr	r0, [sp, #36]
 2575 0288 04F83C00 		strb	r0, [r4, ip, lsl #3]
 2576              	.LBE541:
 2577              	.LBE540:
 217:Frame.h       ****         }
 2578              		.loc 2 217 40 view .LVU820
 2579 028c 04EBCC0C 		add	ip, r4, ip, lsl #3
 2580              	.LVL230:
 2581              	.LBB543:
 2582              	.LBI540:
 130:Frame.h       ****         R = Color.m_R;
 2583              		.loc 2 130 17 is_stmt 1 view .LVU821
 2584              	.LBB542:
 131:Frame.h       ****         G = Color.m_G;
 2585              		.loc 2 131 9 view .LVU822
 132:Frame.h       ****         B = Color.m_B;
 2586              		.loc 2 132 9 view .LVU823
 132:Frame.h       ****         B = Color.m_B;
 2587              		.loc 2 132 11 is_stmt 0 view .LVU824
 2588 0290 0898     		ldr	r0, [sp, #32]
 2589 0292 8CF80100 		strb	r0, [ip, #1]
 133:Frame.h       ****         *m_pChange = true;
 2590              		.loc 2 133 9 is_stmt 1 view .LVU825
 133:Frame.h       ****         *m_pChange = true;
 2591              		.loc 2 133 11 is_stmt 0 view .LVU826
 2592 0296 0798     		ldr	r0, [sp, #28]
 2593 0298 8CF80200 		strb	r0, [ip, #2]
 134:Frame.h       ****     }
 2594              		.loc 2 134 9 is_stmt 1 view .LVU827
 134:Frame.h       ****     }
 2595              		.loc 2 134 20 is_stmt 0 view .LVU828
 2596 029c DCF80400 		ldr	r0, [ip, #4]
 2597 02a0 4FF0010C 		mov	ip, #1
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 72


 2598              	.LVL231:
 134:Frame.h       ****     }
 2599              		.loc 2 134 20 view .LVU829
 2600 02a4 80F800C0 		strb	ip, [r0]
 2601              	.LVL232:
 2602              	.L129:
 134:Frame.h       ****     }
 2603              		.loc 2 134 20 view .LVU830
 2604              	.LBE542:
 2605              	.LBE543:
 2606              	.LBE544:
 2607              	.LBE545:
 239:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, C
 2608              		.loc 1 239 13 is_stmt 1 view .LVU831
 239:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, C
 2609              		.loc 1 239 20 is_stmt 0 view .LVU832
 2610 02a8 C3F5B47C 		rsb	ip, r3, #360
 2611 02ac 1FFA8CFC 		uxth	ip, ip
 2612              	.LVL233:
 240:GFX.cpp       ****             angle2 += 90;
 2613              		.loc 1 240 13 is_stmt 1 view .LVU833
 2614 02b0 6745     		cmp	r7, ip
 2615 02b2 01D3     		bcc	.L128
 2616 02b4 6545     		cmp	r5, ip
 2617 02b6 66D9     		bls	.L138
 2618              	.LVL234:
 2619              	.L128:
 241:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - x, centerY - y, C
 2620              		.loc 1 241 13 view .LVU834
 241:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - x, centerY - y, C
 2621              		.loc 1 241 20 is_stmt 0 view .LVU835
 2622 02b8 03F58773 		add	r3, r3, #270
 2623              	.LVL235:
 241:GFX.cpp       ****             if(((angle2 >= AlphaIn) && (angle2 <= AlphaOut)))  setPixel(centerX - x, centerY - y, C
 2624              		.loc 1 241 20 view .LVU836
 2625 02bc 9BB2     		uxth	r3, r3
 2626              	.LVL236:
 242:GFX.cpp       ****         }
 2627              		.loc 1 242 13 is_stmt 1 view .LVU837
 2628 02be 9D42     		cmp	r5, r3
 2629 02c0 3FF611AF 		bhi	.L116
 2630 02c4 9F42     		cmp	r7, r3
 2631 02c6 FFF40EAF 		bcc	.L116
 2632              	.LVL237:
 2633              	.L215:
 242:GFX.cpp       ****         }
 2634              		.loc 1 242 64 discriminator 1 view .LVU838
 2635              	.LBB546:
 2636              	.LBI546:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2637              		.loc 2 215 17 discriminator 1 view .LVU839
 2638              	.LBB547:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2639              		.loc 2 216 9 discriminator 1 view .LVU840
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2640              		.loc 2 216 15 is_stmt 0 discriminator 1 view .LVU841
 2641 02ca B9F85C20 		ldrh	r2, [r9, #92]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 73


 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2642              		.loc 2 216 9 discriminator 1 view .LVU842
 2643 02ce 9345     		cmp	fp, r2
 2644 02d0 BFF409AF 		bcs	.L116
 2645              	.LBE547:
 2646              	.LBE546:
 242:GFX.cpp       ****         }
 2647              		.loc 1 242 72 view .LVU843
 2648 02d4 069B     		ldr	r3, [sp, #24]
 2649              	.LBB556:
 2650              	.LBB554:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2651              		.loc 2 216 24 view .LVU844
 2652 02d6 B9F85E10 		ldrh	r1, [r9, #94]
 2653              	.LBE554:
 2654              	.LBE556:
 242:GFX.cpp       ****         }
 2655              		.loc 1 242 72 view .LVU845
 2656 02da 9B1B     		subs	r3, r3, r6
 2657 02dc 9BB2     		uxth	r3, r3
 2658              	.LBB557:
 2659              	.LBB555:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2660              		.loc 2 216 24 view .LVU846
 2661 02de 9942     		cmp	r1, r3
 2662 02e0 7FF601AF 		bls	.L116
 217:Frame.h       ****         }
 2663              		.loc 2 217 13 is_stmt 1 view .LVU847
 2664              	.LBB548:
 2665              	.LBB549:
 131:Frame.h       ****         G = Color.m_G;
 2666              		.loc 2 131 11 is_stmt 0 view .LVU848
 2667 02e4 0999     		ldr	r1, [sp, #36]
 2668              	.LBE549:
 2669              	.LBE548:
 217:Frame.h       ****         }
 2670              		.loc 2 217 23 view .LVU849
 2671 02e6 02FB03B3 		mla	r3, r2, r3, fp
 217:Frame.h       ****         }
 2672              		.loc 2 217 40 view .LVU850
 2673 02ea D9F85420 		ldr	r2, [r9, #84]
 2674              	.LBB552:
 2675              	.LBB550:
 131:Frame.h       ****         G = Color.m_G;
 2676              		.loc 2 131 11 view .LVU851
 2677 02ee 02F83310 		strb	r1, [r2, r3, lsl #3]
 2678              	.LVL238:
 131:Frame.h       ****         G = Color.m_G;
 2679              		.loc 2 131 11 view .LVU852
 2680              	.LBE550:
 2681              	.LBE552:
 217:Frame.h       ****         }
 2682              		.loc 2 217 40 view .LVU853
 2683 02f2 02EBC303 		add	r3, r2, r3, lsl #3
 2684              	.LVL239:
 2685              	.LBB553:
 2686              	.LBI548:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 74


 130:Frame.h       ****         R = Color.m_R;
 2687              		.loc 2 130 17 is_stmt 1 view .LVU854
 2688              	.LBB551:
 131:Frame.h       ****         G = Color.m_G;
 2689              		.loc 2 131 9 view .LVU855
 132:Frame.h       ****         B = Color.m_B;
 2690              		.loc 2 132 9 view .LVU856
 132:Frame.h       ****         B = Color.m_B;
 2691              		.loc 2 132 11 is_stmt 0 view .LVU857
 2692 02f6 089A     		ldr	r2, [sp, #32]
 2693 02f8 5A70     		strb	r2, [r3, #1]
 2694              	.LVL240:
 133:Frame.h       ****         *m_pChange = true;
 2695              		.loc 2 133 9 is_stmt 1 view .LVU858
 133:Frame.h       ****         *m_pChange = true;
 2696              		.loc 2 133 11 is_stmt 0 view .LVU859
 2697 02fa 079A     		ldr	r2, [sp, #28]
 2698 02fc 9A70     		strb	r2, [r3, #2]
 134:Frame.h       ****     }
 2699              		.loc 2 134 9 is_stmt 1 view .LVU860
 134:Frame.h       ****     }
 2700              		.loc 2 134 20 is_stmt 0 view .LVU861
 2701 02fe 0122     		movs	r2, #1
 2702 0300 5B68     		ldr	r3, [r3, #4]
 2703              	.LVL241:
 134:Frame.h       ****     }
 2704              		.loc 2 134 20 view .LVU862
 2705 0302 1A70     		strb	r2, [r3]
 2706              	.LVL242:
 134:Frame.h       ****     }
 2707              		.loc 2 134 20 view .LVU863
 2708              	.LBE551:
 2709              	.LBE553:
 2710              	.LBE555:
 2711              	.LBE557:
 2712              	.LBE490:
 2713              	.LBE595:
 245:GFX.cpp       ****         {
 2714              		.loc 1 245 9 is_stmt 1 view .LVU864
 2715 0304 019B     		ldr	r3, [sp, #4]
 2716 0306 002B     		cmp	r3, #0
 2717 0308 3FF7F1AE 		bgt	.L133
 2718              	.L216:
 2719              		.loc 1 251 11 is_stmt 0 view .LVU865
 2720 030c 9CB2     		uxth	r4, r3
 2721 030e F5E6     		b	.L134
 2722              	.LVL243:
 2723              	.L119:
 2724              	.LBB596:
 2725              	.LBB581:
 231:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, C
 2726              		.loc 1 231 13 is_stmt 1 view .LVU866
 231:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, C
 2727              		.loc 1 231 20 is_stmt 0 view .LVU867
 2728 0310 C3F1B402 		rsb	r2, r3, #180
 2729 0314 92B2     		uxth	r2, r2
 2730              	.LVL244:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 75


 232:GFX.cpp       ****             angle2 += 90;
 2731              		.loc 1 232 13 is_stmt 1 view .LVU868
 2732 0316 9542     		cmp	r5, r2
 2733 0318 3FF671AF 		bhi	.L120
 2734 031c 9742     		cmp	r7, r2
 2735 031e FFF46EAF 		bcc	.L120
 232:GFX.cpp       ****             angle2 += 90;
 2736              		.loc 1 232 64 discriminator 1 view .LVU869
 232:GFX.cpp       ****             angle2 += 90;
 2737              		.loc 1 232 72 is_stmt 0 discriminator 1 view .LVU870
 2738 0322 049A     		ldr	r2, [sp, #16]
 2739              	.LVL245:
 2740              	.LBB558:
 2741              	.LBB559:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2742              		.loc 2 216 15 discriminator 1 view .LVU871
 2743 0324 B9F85C10 		ldrh	r1, [r9, #92]
 2744              	.LBE559:
 2745              	.LBE558:
 232:GFX.cpp       ****             angle2 += 90;
 2746              		.loc 1 232 72 discriminator 1 view .LVU872
 2747 0328 3244     		add	r2, r2, r6
 2748 032a 92B2     		uxth	r2, r2
 2749              	.LVL246:
 2750              	.LBB566:
 2751              	.LBI558:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2752              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU873
 2753              	.LBB564:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2754              		.loc 2 216 9 discriminator 1 view .LVU874
 2755 032c 8A42     		cmp	r2, r1
 2756 032e BFF466AF 		bcs	.L120
 2757              	.LBE564:
 2758              	.LBE566:
 2759              	.LBE581:
 2760              	.LBB582:
 2761              	.LBB394:
 2762              	.LBB395:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2763              		.loc 2 216 30 is_stmt 0 view .LVU875
 2764 0332 B9F85E00 		ldrh	r0, [r9, #94]
 2765 0336 0A90     		str	r0, [sp, #40]
 2766              	.LVL247:
 2767              	.L140:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2768              		.loc 2 216 30 view .LVU876
 2769              	.LBE395:
 2770              	.LBE394:
 2771              	.LBE582:
 2772              	.LBB583:
 2773              	.LBB567:
 2774              	.LBB565:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2775              		.loc 2 216 24 view .LVU877
 2776 0338 029C     		ldr	r4, [sp, #8]
 2777 033a 0A98     		ldr	r0, [sp, #40]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 76


 2778 033c 8442     		cmp	r4, r0
 2779 033e BFF45EAF 		bcs	.L120
 217:Frame.h       ****         }
 2780              		.loc 2 217 13 is_stmt 1 view .LVU878
 217:Frame.h       ****         }
 2781              		.loc 2 217 40 is_stmt 0 view .LVU879
 2782 0342 D9F85400 		ldr	r0, [r9, #84]
 217:Frame.h       ****         }
 2783              		.loc 2 217 23 view .LVU880
 2784 0346 01FB0422 		mla	r2, r1, r4, r2
 2785              	.LVL248:
 2786              	.LBB560:
 2787              	.LBB561:
 131:Frame.h       ****         G = Color.m_G;
 2788              		.loc 2 131 11 view .LVU881
 2789 034a 0999     		ldr	r1, [sp, #36]
 2790 034c 00F83210 		strb	r1, [r0, r2, lsl #3]
 2791              	.LBE561:
 2792              	.LBE560:
 217:Frame.h       ****         }
 2793              		.loc 2 217 40 view .LVU882
 2794 0350 00EBC202 		add	r2, r0, r2, lsl #3
 2795              	.LVL249:
 2796              	.LBB563:
 2797              	.LBI560:
 130:Frame.h       ****         R = Color.m_R;
 2798              		.loc 2 130 17 is_stmt 1 view .LVU883
 2799              	.LBB562:
 131:Frame.h       ****         G = Color.m_G;
 2800              		.loc 2 131 9 view .LVU884
 132:Frame.h       ****         B = Color.m_B;
 2801              		.loc 2 132 9 view .LVU885
 132:Frame.h       ****         B = Color.m_B;
 2802              		.loc 2 132 11 is_stmt 0 view .LVU886
 2803 0354 0899     		ldr	r1, [sp, #32]
 2804 0356 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 2805              		.loc 2 133 9 is_stmt 1 view .LVU887
 133:Frame.h       ****         *m_pChange = true;
 2806              		.loc 2 133 11 is_stmt 0 view .LVU888
 2807 0358 0799     		ldr	r1, [sp, #28]
 2808 035a 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 2809              		.loc 2 134 9 is_stmt 1 view .LVU889
 134:Frame.h       ****     }
 2810              		.loc 2 134 20 is_stmt 0 view .LVU890
 2811 035c 0121     		movs	r1, #1
 2812 035e 5268     		ldr	r2, [r2, #4]
 2813              	.LVL250:
 134:Frame.h       ****     }
 2814              		.loc 2 134 20 view .LVU891
 2815 0360 1170     		strb	r1, [r2]
 2816              	.LVL251:
 134:Frame.h       ****     }
 2817              		.loc 2 134 20 view .LVU892
 2818              	.LBE562:
 2819              	.LBE563:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 77


 2820 0362 4CE7     		b	.L120
 2821              	.LVL252:
 2822              	.L127:
 134:Frame.h       ****     }
 2823              		.loc 2 134 20 view .LVU893
 2824              	.LBE565:
 2825              	.LBE567:
 239:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, C
 2826              		.loc 1 239 13 is_stmt 1 view .LVU894
 239:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, C
 2827              		.loc 1 239 20 is_stmt 0 view .LVU895
 2828 0364 C3F5B472 		rsb	r2, r3, #360
 2829              	.LVL253:
 239:GFX.cpp       ****             if(((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, C
 2830              		.loc 1 239 20 view .LVU896
 2831 0368 92B2     		uxth	r2, r2
 2832              	.LVL254:
 240:GFX.cpp       ****             angle2 += 90;
 2833              		.loc 1 240 13 is_stmt 1 view .LVU897
 2834 036a 9542     		cmp	r5, r2
 2835 036c A4D8     		bhi	.L128
 2836 036e 9742     		cmp	r7, r2
 2837 0370 A2D3     		bcc	.L128
 240:GFX.cpp       ****             angle2 += 90;
 2838              		.loc 1 240 64 discriminator 1 view .LVU898
 240:GFX.cpp       ****             angle2 += 90;
 2839              		.loc 1 240 72 is_stmt 0 discriminator 1 view .LVU899
 2840 0372 049A     		ldr	r2, [sp, #16]
 2841              	.LVL255:
 2842              	.LBB568:
 2843              	.LBB569:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2844              		.loc 2 216 15 discriminator 1 view .LVU900
 2845 0374 B9F85C10 		ldrh	r1, [r9, #92]
 2846              	.LBE569:
 2847              	.LBE568:
 240:GFX.cpp       ****             angle2 += 90;
 2848              		.loc 1 240 72 discriminator 1 view .LVU901
 2849 0378 921B     		subs	r2, r2, r6
 2850 037a 92B2     		uxth	r2, r2
 2851              	.LVL256:
 2852              	.LBB576:
 2853              	.LBI568:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2854              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU902
 2855              	.LBB574:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2856              		.loc 2 216 9 discriminator 1 view .LVU903
 2857 037c 8A42     		cmp	r2, r1
 2858 037e 9BD2     		bcs	.L128
 2859              	.LBE574:
 2860              	.LBE576:
 2861              	.LBE583:
 2862              	.LBB584:
 2863              	.LBB410:
 2864              	.LBB402:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 78


 2865              		.loc 2 216 30 is_stmt 0 view .LVU904
 2866 0380 B9F85E00 		ldrh	r0, [r9, #94]
 2867 0384 0A90     		str	r0, [sp, #40]
 2868              	.LVL257:
 2869              	.L138:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2870              		.loc 2 216 30 view .LVU905
 2871              	.LBE402:
 2872              	.LBE410:
 2873              	.LBE584:
 2874              	.LBB585:
 2875              	.LBB577:
 2876              	.LBB575:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2877              		.loc 2 216 24 view .LVU906
 2878 0386 039C     		ldr	r4, [sp, #12]
 2879 0388 0A98     		ldr	r0, [sp, #40]
 2880 038a 8442     		cmp	r4, r0
 2881 038c 94D2     		bcs	.L128
 217:Frame.h       ****         }
 2882              		.loc 2 217 13 is_stmt 1 view .LVU907
 217:Frame.h       ****         }
 2883              		.loc 2 217 40 is_stmt 0 view .LVU908
 2884 038e D9F85400 		ldr	r0, [r9, #84]
 217:Frame.h       ****         }
 2885              		.loc 2 217 23 view .LVU909
 2886 0392 01FB0422 		mla	r2, r1, r4, r2
 2887              	.LVL258:
 2888              	.LBB570:
 2889              	.LBB571:
 131:Frame.h       ****         G = Color.m_G;
 2890              		.loc 2 131 11 view .LVU910
 2891 0396 0999     		ldr	r1, [sp, #36]
 2892 0398 00F83210 		strb	r1, [r0, r2, lsl #3]
 2893              	.LBE571:
 2894              	.LBE570:
 217:Frame.h       ****         }
 2895              		.loc 2 217 40 view .LVU911
 2896 039c 00EBC202 		add	r2, r0, r2, lsl #3
 2897              	.LVL259:
 2898              	.LBB573:
 2899              	.LBI570:
 130:Frame.h       ****         R = Color.m_R;
 2900              		.loc 2 130 17 is_stmt 1 view .LVU912
 2901              	.LBB572:
 131:Frame.h       ****         G = Color.m_G;
 2902              		.loc 2 131 9 view .LVU913
 132:Frame.h       ****         B = Color.m_B;
 2903              		.loc 2 132 9 view .LVU914
 132:Frame.h       ****         B = Color.m_B;
 2904              		.loc 2 132 11 is_stmt 0 view .LVU915
 2905 03a0 0899     		ldr	r1, [sp, #32]
 2906 03a2 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 2907              		.loc 2 133 9 is_stmt 1 view .LVU916
 133:Frame.h       ****         *m_pChange = true;
 2908              		.loc 2 133 11 is_stmt 0 view .LVU917
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 79


 2909 03a4 0799     		ldr	r1, [sp, #28]
 2910 03a6 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 2911              		.loc 2 134 9 is_stmt 1 view .LVU918
 134:Frame.h       ****     }
 2912              		.loc 2 134 20 is_stmt 0 view .LVU919
 2913 03a8 0121     		movs	r1, #1
 2914 03aa 5268     		ldr	r2, [r2, #4]
 2915              	.LVL260:
 134:Frame.h       ****     }
 2916              		.loc 2 134 20 view .LVU920
 2917 03ac 1170     		strb	r1, [r2]
 2918              	.LVL261:
 134:Frame.h       ****     }
 2919              		.loc 2 134 20 view .LVU921
 2920              	.LBE572:
 2921              	.LBE573:
 2922 03ae 83E7     		b	.L128
 2923              	.LVL262:
 2924              	.L148:
 134:Frame.h       ****     }
 2925              		.loc 2 134 20 view .LVU922
 2926              	.LBE575:
 2927              	.LBE577:
 2928              	.LBE585:
 2929              	.LBB586:
 221:GFX.cpp       ****             angle1 += 90;
 2930              		.loc 1 221 65 is_stmt 1 discriminator 1 view .LVU923
 221:GFX.cpp       ****             angle1 += 90;
 2931              		.loc 1 221 73 is_stmt 0 discriminator 1 view .LVU924
 2932 03b0 049A     		ldr	r2, [sp, #16]
 2933              	.LVL263:
 2934              	.LBB411:
 2935              	.LBB412:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2936              		.loc 2 216 15 discriminator 1 view .LVU925
 2937 03b2 B9F85C10 		ldrh	r1, [r9, #92]
 2938              	.LBE412:
 2939              	.LBE411:
 221:GFX.cpp       ****             angle1 += 90;
 2940              		.loc 1 221 73 discriminator 1 view .LVU926
 2941 03b6 921B     		subs	r2, r2, r6
 2942 03b8 92B2     		uxth	r2, r2
 2943              	.LVL264:
 2944              	.LBB419:
 2945              	.LBI411:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 2946              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU927
 2947              	.LBB417:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2948              		.loc 2 216 9 discriminator 1 view .LVU928
 2949 03ba 8A42     		cmp	r2, r1
 2950 03bc BFF48AAE 		bcs	.L112
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2951              		.loc 2 216 30 is_stmt 0 view .LVU929
 2952 03c0 B9F85E00 		ldrh	r0, [r9, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 80


 2953              		.loc 2 216 24 view .LVU930
 2954 03c4 029C     		ldr	r4, [sp, #8]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2955              		.loc 2 216 30 view .LVU931
 2956 03c6 0A90     		str	r0, [sp, #40]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2957              		.loc 2 216 24 view .LVU932
 2958 03c8 8442     		cmp	r4, r0
 2959 03ca 0B94     		str	r4, [sp, #44]
 2960 03cc C0F0ED80 		bcc	.L221
 2961              	.L113:
 2962              	.LVL265:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2963              		.loc 2 216 24 view .LVU933
 2964              	.LBE417:
 2965              	.LBE419:
 222:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, 
 2966              		.loc 1 222 13 is_stmt 1 view .LVU934
 222:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX - y, centerY - x, 
 2967              		.loc 1 222 20 is_stmt 0 view .LVU935
 2968 03d0 C3F5B47C 		rsb	ip, r3, #360
 2969 03d4 1FFA8CFC 		uxth	ip, ip
 2970              	.LVL266:
 223:GFX.cpp       ****             angle2 += 90;
 2971              		.loc 1 223 13 is_stmt 1 view .LVU936
 2972 03d8 6745     		cmp	r7, ip
 2973 03da 02D3     		bcc	.L136
 2974 03dc 6545     		cmp	r5, ip
 2975 03de 7FF679AE 		bls	.L112
 2976              	.L136:
 2977              	.LVL267:
 2978              	.LBB420:
 2979              	.LBB421:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 2980              		.loc 2 216 24 is_stmt 0 view .LVU937
 2981 03e2 039C     		ldr	r4, [sp, #12]
 2982 03e4 0A98     		ldr	r0, [sp, #40]
 2983 03e6 8442     		cmp	r4, r0
 2984 03e8 BFF474AE 		bcs	.L112
 2985              	.LVL268:
 2986              	.L223:
 217:Frame.h       ****         }
 2987              		.loc 2 217 13 is_stmt 1 view .LVU938
 217:Frame.h       ****         }
 2988              		.loc 2 217 40 is_stmt 0 view .LVU939
 2989 03ec D9F85400 		ldr	r0, [r9, #84]
 217:Frame.h       ****         }
 2990              		.loc 2 217 23 view .LVU940
 2991 03f0 01FB0422 		mla	r2, r1, r4, r2
 2992              	.LVL269:
 2993              	.LBB422:
 2994              	.LBB423:
 131:Frame.h       ****         G = Color.m_G;
 2995              		.loc 2 131 11 view .LVU941
 2996 03f4 0999     		ldr	r1, [sp, #36]
 2997 03f6 00F83210 		strb	r1, [r0, r2, lsl #3]
 2998              	.LBE423:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 81


 2999              	.LBE422:
 217:Frame.h       ****         }
 3000              		.loc 2 217 40 view .LVU942
 3001 03fa 00EBC202 		add	r2, r0, r2, lsl #3
 3002              	.LVL270:
 3003              	.LBB425:
 3004              	.LBI422:
 130:Frame.h       ****         R = Color.m_R;
 3005              		.loc 2 130 17 is_stmt 1 view .LVU943
 3006              	.LBB424:
 131:Frame.h       ****         G = Color.m_G;
 3007              		.loc 2 131 9 view .LVU944
 132:Frame.h       ****         B = Color.m_B;
 3008              		.loc 2 132 9 view .LVU945
 132:Frame.h       ****         B = Color.m_B;
 3009              		.loc 2 132 11 is_stmt 0 view .LVU946
 3010 03fe 0899     		ldr	r1, [sp, #32]
 3011 0400 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3012              		.loc 2 133 9 is_stmt 1 view .LVU947
 133:Frame.h       ****         *m_pChange = true;
 3013              		.loc 2 133 11 is_stmt 0 view .LVU948
 3014 0402 0799     		ldr	r1, [sp, #28]
 3015 0404 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3016              		.loc 2 134 9 is_stmt 1 view .LVU949
 134:Frame.h       ****     }
 3017              		.loc 2 134 20 is_stmt 0 view .LVU950
 3018 0406 0121     		movs	r1, #1
 3019 0408 5268     		ldr	r2, [r2, #4]
 3020              	.LVL271:
 134:Frame.h       ****     }
 3021              		.loc 2 134 20 view .LVU951
 3022 040a 1170     		strb	r1, [r2]
 3023              	.LVL272:
 134:Frame.h       ****     }
 3024              		.loc 2 134 20 view .LVU952
 3025              	.LBE424:
 3026              	.LBE425:
 3027 040c 62E6     		b	.L112
 3028              	.L226:
 3029 040e 00BF     		.align	2
 3030              	.L225:
 3031 0410 00003443 		.word	1127481344
 3032 0414 DB0F4940 		.word	1078530011
 3033              	.LVL273:
 3034              	.L147:
 134:Frame.h       ****     }
 3035              		.loc 2 134 20 view .LVU953
 3036              	.LBE421:
 3037              	.LBE420:
 219:GFX.cpp       ****             angle2 += 90;
 3038              		.loc 1 219 65 is_stmt 1 discriminator 1 view .LVU954
 3039              	.LBB430:
 3040              	.LBI430:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 3041              		.loc 2 215 17 discriminator 1 view .LVU955
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 82


 3042              	.LBB431:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3043              		.loc 2 216 9 discriminator 1 view .LVU956
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3044              		.loc 2 216 15 is_stmt 0 discriminator 1 view .LVU957
 3045 0418 B9F85C10 		ldrh	r1, [r9, #92]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3046              		.loc 2 216 9 discriminator 1 view .LVU958
 3047 041c 8B45     		cmp	fp, r1
 3048 041e BFF447AE 		bcs	.L108
 3049              	.LBE431:
 3050              	.LBE430:
 219:GFX.cpp       ****             angle2 += 90;
 3051              		.loc 1 219 73 view .LVU959
 3052 0422 069A     		ldr	r2, [sp, #24]
 3053              	.LVL274:
 3054              	.LBB440:
 3055              	.LBB438:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3056              		.loc 2 216 24 view .LVU960
 3057 0424 B9F85E00 		ldrh	r0, [r9, #94]
 3058              	.LBE438:
 3059              	.LBE440:
 219:GFX.cpp       ****             angle2 += 90;
 3060              		.loc 1 219 73 view .LVU961
 3061 0428 3244     		add	r2, r2, r6
 3062 042a 92B2     		uxth	r2, r2
 3063              	.LBB441:
 3064              	.LBB439:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3065              		.loc 2 216 24 view .LVU962
 3066 042c 9042     		cmp	r0, r2
 3067 042e 7FF63FAE 		bls	.L108
 217:Frame.h       ****         }
 3068              		.loc 2 217 13 is_stmt 1 view .LVU963
 217:Frame.h       ****         }
 3069              		.loc 2 217 23 is_stmt 0 view .LVU964
 3070 0432 01FB02B2 		mla	r2, r1, r2, fp
 3071              	.LBB432:
 3072              	.LBB433:
 131:Frame.h       ****         G = Color.m_G;
 3073              		.loc 2 131 11 view .LVU965
 3074 0436 0998     		ldr	r0, [sp, #36]
 3075              	.LBE433:
 3076              	.LBE432:
 217:Frame.h       ****         }
 3077              		.loc 2 217 40 view .LVU966
 3078 0438 D9F85410 		ldr	r1, [r9, #84]
 3079              	.LBB436:
 3080              	.LBB434:
 131:Frame.h       ****         G = Color.m_G;
 3081              		.loc 2 131 11 view .LVU967
 3082 043c 01F83200 		strb	r0, [r1, r2, lsl #3]
 3083              	.LBE434:
 3084              	.LBE436:
 217:Frame.h       ****         }
 3085              		.loc 2 217 40 view .LVU968
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 83


 3086 0440 01EBC202 		add	r2, r1, r2, lsl #3
 3087              	.LVL275:
 3088              	.LBB437:
 3089              	.LBI432:
 130:Frame.h       ****         R = Color.m_R;
 3090              		.loc 2 130 17 is_stmt 1 view .LVU969
 3091              	.LBB435:
 131:Frame.h       ****         G = Color.m_G;
 3092              		.loc 2 131 9 view .LVU970
 132:Frame.h       ****         B = Color.m_B;
 3093              		.loc 2 132 9 view .LVU971
 132:Frame.h       ****         B = Color.m_B;
 3094              		.loc 2 132 11 is_stmt 0 view .LVU972
 3095 0444 0899     		ldr	r1, [sp, #32]
 3096 0446 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3097              		.loc 2 133 9 is_stmt 1 view .LVU973
 133:Frame.h       ****         *m_pChange = true;
 3098              		.loc 2 133 11 is_stmt 0 view .LVU974
 3099 0448 0799     		ldr	r1, [sp, #28]
 3100 044a 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3101              		.loc 2 134 9 is_stmt 1 view .LVU975
 134:Frame.h       ****     }
 3102              		.loc 2 134 20 is_stmt 0 view .LVU976
 3103 044c 0121     		movs	r1, #1
 3104 044e 5268     		ldr	r2, [r2, #4]
 3105              	.LVL276:
 134:Frame.h       ****     }
 3106              		.loc 2 134 20 view .LVU977
 3107 0450 1170     		strb	r1, [r2]
 3108              	.LVL277:
 134:Frame.h       ****     }
 3109              		.loc 2 134 20 view .LVU978
 3110              	.LBE435:
 3111              	.LBE437:
 3112 0452 2DE6     		b	.L108
 3113              	.LVL278:
 3114              	.L146:
 134:Frame.h       ****     }
 3115              		.loc 2 134 20 view .LVU979
 3116              	.LBE439:
 3117              	.LBE441:
 217:GFX.cpp       ****             angle1 += 90;
 3118              		.loc 1 217 65 is_stmt 1 discriminator 1 view .LVU980
 3119              	.LBB442:
 3120              	.LBI442:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 3121              		.loc 2 215 17 discriminator 1 view .LVU981
 3122              	.LBB443:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3123              		.loc 2 216 9 discriminator 1 view .LVU982
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3124              		.loc 2 216 15 is_stmt 0 discriminator 1 view .LVU983
 3125 0454 B9F85C10 		ldrh	r1, [r9, #92]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3126              		.loc 2 216 9 discriminator 1 view .LVU984
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 84


 3127 0458 8845     		cmp	r8, r1
 3128 045a BFF420AE 		bcs	.L106
 3129              	.LBE443:
 3130              	.LBE442:
 217:GFX.cpp       ****             angle1 += 90;
 3131              		.loc 1 217 73 view .LVU985
 3132 045e 069A     		ldr	r2, [sp, #24]
 3133              	.LVL279:
 3134              	.LBB452:
 3135              	.LBB450:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3136              		.loc 2 216 24 view .LVU986
 3137 0460 B9F85E00 		ldrh	r0, [r9, #94]
 3138              	.LBE450:
 3139              	.LBE452:
 217:GFX.cpp       ****             angle1 += 90;
 3140              		.loc 1 217 73 view .LVU987
 3141 0464 3244     		add	r2, r2, r6
 3142 0466 92B2     		uxth	r2, r2
 3143              	.LBB453:
 3144              	.LBB451:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3145              		.loc 2 216 24 view .LVU988
 3146 0468 9042     		cmp	r0, r2
 3147 046a 7FF618AE 		bls	.L106
 217:Frame.h       ****         }
 3148              		.loc 2 217 13 is_stmt 1 view .LVU989
 217:Frame.h       ****         }
 3149              		.loc 2 217 23 is_stmt 0 view .LVU990
 3150 046e 01FB0282 		mla	r2, r1, r2, r8
 3151              	.LBB444:
 3152              	.LBB445:
 131:Frame.h       ****         G = Color.m_G;
 3153              		.loc 2 131 11 view .LVU991
 3154 0472 0998     		ldr	r0, [sp, #36]
 3155              	.LBE445:
 3156              	.LBE444:
 217:Frame.h       ****         }
 3157              		.loc 2 217 40 view .LVU992
 3158 0474 D9F85410 		ldr	r1, [r9, #84]
 3159              	.LBB448:
 3160              	.LBB446:
 131:Frame.h       ****         G = Color.m_G;
 3161              		.loc 2 131 11 view .LVU993
 3162 0478 01F83200 		strb	r0, [r1, r2, lsl #3]
 3163              	.LBE446:
 3164              	.LBE448:
 217:Frame.h       ****         }
 3165              		.loc 2 217 40 view .LVU994
 3166 047c 01EBC202 		add	r2, r1, r2, lsl #3
 3167              	.LVL280:
 3168              	.LBB449:
 3169              	.LBI444:
 130:Frame.h       ****         R = Color.m_R;
 3170              		.loc 2 130 17 is_stmt 1 view .LVU995
 3171              	.LBB447:
 131:Frame.h       ****         G = Color.m_G;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 85


 3172              		.loc 2 131 9 view .LVU996
 132:Frame.h       ****         B = Color.m_B;
 3173              		.loc 2 132 9 view .LVU997
 132:Frame.h       ****         B = Color.m_B;
 3174              		.loc 2 132 11 is_stmt 0 view .LVU998
 3175 0480 0899     		ldr	r1, [sp, #32]
 3176 0482 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3177              		.loc 2 133 9 is_stmt 1 view .LVU999
 133:Frame.h       ****         *m_pChange = true;
 3178              		.loc 2 133 11 is_stmt 0 view .LVU1000
 3179 0484 0799     		ldr	r1, [sp, #28]
 3180 0486 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3181              		.loc 2 134 9 is_stmt 1 view .LVU1001
 134:Frame.h       ****     }
 3182              		.loc 2 134 20 is_stmt 0 view .LVU1002
 3183 0488 0121     		movs	r1, #1
 3184 048a 5268     		ldr	r2, [r2, #4]
 3185              	.LVL281:
 134:Frame.h       ****     }
 3186              		.loc 2 134 20 view .LVU1003
 3187 048c 1170     		strb	r1, [r2]
 3188              	.LVL282:
 134:Frame.h       ****     }
 3189              		.loc 2 134 20 view .LVU1004
 3190              	.LBE447:
 3191              	.LBE449:
 3192 048e 06E6     		b	.L106
 3193              	.LVL283:
 3194              	.L145:
 134:Frame.h       ****     }
 3195              		.loc 2 134 20 view .LVU1005
 3196              	.LBE451:
 3197              	.LBE453:
 213:GFX.cpp       ****             angle1 += 90;       
 3198              		.loc 1 213 65 is_stmt 1 discriminator 1 view .LVU1006
 213:GFX.cpp       ****             angle1 += 90;       
 3199              		.loc 1 213 73 is_stmt 0 discriminator 1 view .LVU1007
 3200 0490 049A     		ldr	r2, [sp, #16]
 3201              	.LBB454:
 3202              	.LBB455:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3203              		.loc 2 216 15 discriminator 1 view .LVU1008
 3204 0492 B9F85C10 		ldrh	r1, [r9, #92]
 3205              	.LBE455:
 3206              	.LBE454:
 213:GFX.cpp       ****             angle1 += 90;       
 3207              		.loc 1 213 73 discriminator 1 view .LVU1009
 3208 0496 3244     		add	r2, r2, r6
 3209 0498 92B2     		uxth	r2, r2
 3210              	.LVL284:
 3211              	.LBB462:
 3212              	.LBI454:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 3213              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU1010
 3214              	.LBB460:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 86


 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3215              		.loc 2 216 9 discriminator 1 view .LVU1011
 3216 049a 8A42     		cmp	r2, r1
 3217 049c BFF4F6AD 		bcs	.L102
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3218              		.loc 2 216 30 is_stmt 0 view .LVU1012
 3219 04a0 B9F85E00 		ldrh	r0, [r9, #94]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3220              		.loc 2 216 24 view .LVU1013
 3221 04a4 039C     		ldr	r4, [sp, #12]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3222              		.loc 2 216 30 view .LVU1014
 3223 04a6 0A90     		str	r0, [sp, #40]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3224              		.loc 2 216 24 view .LVU1015
 3225 04a8 8442     		cmp	r4, r0
 3226 04aa 0B94     		str	r4, [sp, #44]
 3227 04ac 64D3     		bcc	.L222
 3228              	.L103:
 3229              	.LVL285:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3230              		.loc 2 216 24 view .LVU1016
 3231              	.LBE460:
 3232              	.LBE462:
 214:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, 
 3233              		.loc 1 214 13 is_stmt 1 view .LVU1017
 214:GFX.cpp       ****             if(!((angle1 >= AlphaIn) && (angle1 <= AlphaOut)))  setPixel(centerX + y, centerY + x, 
 3234              		.loc 1 214 20 is_stmt 0 view .LVU1018
 3235 04ae C3F1B40C 		rsb	ip, r3, #180
 3236 04b2 1FFA8CFC 		uxth	ip, ip
 3237              	.LVL286:
 215:GFX.cpp       ****             angle2 += 90;
 3238              		.loc 1 215 13 is_stmt 1 view .LVU1019
 3239 04b6 6745     		cmp	r7, ip
 3240 04b8 02D3     		bcc	.L137
 3241 04ba 6545     		cmp	r5, ip
 3242 04bc 7FF6E6AD 		bls	.L102
 3243              	.L137:
 3244              	.LVL287:
 3245              	.LBB463:
 3246              	.LBB464:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3247              		.loc 2 216 24 is_stmt 0 view .LVU1020
 3248 04c0 029C     		ldr	r4, [sp, #8]
 3249 04c2 0A98     		ldr	r0, [sp, #40]
 3250 04c4 8442     		cmp	r4, r0
 3251 04c6 BFF4E1AD 		bcs	.L102
 3252              	.LVL288:
 3253              	.L224:
 217:Frame.h       ****         }
 3254              		.loc 2 217 13 is_stmt 1 view .LVU1021
 217:Frame.h       ****         }
 3255              		.loc 2 217 40 is_stmt 0 view .LVU1022
 3256 04ca D9F85400 		ldr	r0, [r9, #84]
 217:Frame.h       ****         }
 3257              		.loc 2 217 23 view .LVU1023
 3258 04ce 01FB0422 		mla	r2, r1, r4, r2
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 87


 3259              	.LVL289:
 3260              	.LBB465:
 3261              	.LBB466:
 131:Frame.h       ****         G = Color.m_G;
 3262              		.loc 2 131 11 view .LVU1024
 3263 04d2 0999     		ldr	r1, [sp, #36]
 3264 04d4 00F83210 		strb	r1, [r0, r2, lsl #3]
 3265              	.LBE466:
 3266              	.LBE465:
 217:Frame.h       ****         }
 3267              		.loc 2 217 40 view .LVU1025
 3268 04d8 00EBC202 		add	r2, r0, r2, lsl #3
 3269              	.LVL290:
 3270              	.LBB468:
 3271              	.LBI465:
 130:Frame.h       ****         R = Color.m_R;
 3272              		.loc 2 130 17 is_stmt 1 view .LVU1026
 3273              	.LBB467:
 131:Frame.h       ****         G = Color.m_G;
 3274              		.loc 2 131 9 view .LVU1027
 132:Frame.h       ****         B = Color.m_B;
 3275              		.loc 2 132 9 view .LVU1028
 132:Frame.h       ****         B = Color.m_B;
 3276              		.loc 2 132 11 is_stmt 0 view .LVU1029
 3277 04dc 0899     		ldr	r1, [sp, #32]
 3278 04de 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3279              		.loc 2 133 9 is_stmt 1 view .LVU1030
 133:Frame.h       ****         *m_pChange = true;
 3280              		.loc 2 133 11 is_stmt 0 view .LVU1031
 3281 04e0 0799     		ldr	r1, [sp, #28]
 3282 04e2 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3283              		.loc 2 134 9 is_stmt 1 view .LVU1032
 134:Frame.h       ****     }
 3284              		.loc 2 134 20 is_stmt 0 view .LVU1033
 3285 04e4 0121     		movs	r1, #1
 3286 04e6 5268     		ldr	r2, [r2, #4]
 3287              	.LVL291:
 134:Frame.h       ****     }
 3288              		.loc 2 134 20 view .LVU1034
 3289 04e8 1170     		strb	r1, [r2]
 3290              	.LVL292:
 134:Frame.h       ****     }
 3291              		.loc 2 134 20 view .LVU1035
 3292              	.LBE467:
 3293              	.LBE468:
 3294 04ea CFE5     		b	.L102
 3295              	.LVL293:
 3296              	.L144:
 134:Frame.h       ****     }
 3297              		.loc 2 134 20 view .LVU1036
 3298              	.LBE464:
 3299              	.LBE463:
 211:GFX.cpp       ****             uint16_t angle2 = angle;
 3300              		.loc 1 211 65 is_stmt 1 discriminator 1 view .LVU1037
 3301              	.LBB473:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 88


 3302              	.LBI394:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 3303              		.loc 2 215 17 discriminator 1 view .LVU1038
 3304              	.LBB403:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3305              		.loc 2 216 9 discriminator 1 view .LVU1039
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3306              		.loc 2 216 15 is_stmt 0 discriminator 1 view .LVU1040
 3307 04ec B9F85C10 		ldrh	r1, [r9, #92]
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3308              		.loc 2 216 9 discriminator 1 view .LVU1041
 3309 04f0 8845     		cmp	r8, r1
 3310 04f2 BFF4BCAD 		bcs	.L98
 3311              	.LBE403:
 3312              	.LBE473:
 211:GFX.cpp       ****             uint16_t angle2 = angle;
 3313              		.loc 1 211 73 view .LVU1042
 3314 04f6 069A     		ldr	r2, [sp, #24]
 3315              	.LVL294:
 3316              	.LBB474:
 3317              	.LBB404:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3318              		.loc 2 216 24 view .LVU1043
 3319 04f8 B9F85E00 		ldrh	r0, [r9, #94]
 3320              	.LBE404:
 3321              	.LBE474:
 211:GFX.cpp       ****             uint16_t angle2 = angle;
 3322              		.loc 1 211 73 view .LVU1044
 3323 04fc 921B     		subs	r2, r2, r6
 3324 04fe 92B2     		uxth	r2, r2
 3325              	.LBB475:
 3326              	.LBB405:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3327              		.loc 2 216 24 view .LVU1045
 3328 0500 9042     		cmp	r0, r2
 3329 0502 7FF6B4AD 		bls	.L98
 217:Frame.h       ****         }
 3330              		.loc 2 217 13 is_stmt 1 view .LVU1046
 217:Frame.h       ****         }
 3331              		.loc 2 217 23 is_stmt 0 view .LVU1047
 3332 0506 01FB0282 		mla	r2, r1, r2, r8
 3333              	.LBB396:
 3334              	.LBB397:
 131:Frame.h       ****         G = Color.m_G;
 3335              		.loc 2 131 11 view .LVU1048
 3336 050a 0998     		ldr	r0, [sp, #36]
 3337              	.LBE397:
 3338              	.LBE396:
 217:Frame.h       ****         }
 3339              		.loc 2 217 40 view .LVU1049
 3340 050c D9F85410 		ldr	r1, [r9, #84]
 3341              	.LBB400:
 3342              	.LBB398:
 131:Frame.h       ****         G = Color.m_G;
 3343              		.loc 2 131 11 view .LVU1050
 3344 0510 01F83200 		strb	r0, [r1, r2, lsl #3]
 3345              	.LBE398:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 89


 3346              	.LBE400:
 217:Frame.h       ****         }
 3347              		.loc 2 217 40 view .LVU1051
 3348 0514 01EBC202 		add	r2, r1, r2, lsl #3
 3349              	.LVL295:
 3350              	.LBB401:
 3351              	.LBI396:
 130:Frame.h       ****         R = Color.m_R;
 3352              		.loc 2 130 17 is_stmt 1 view .LVU1052
 3353              	.LBB399:
 131:Frame.h       ****         G = Color.m_G;
 3354              		.loc 2 131 9 view .LVU1053
 132:Frame.h       ****         B = Color.m_B;
 3355              		.loc 2 132 9 view .LVU1054
 132:Frame.h       ****         B = Color.m_B;
 3356              		.loc 2 132 11 is_stmt 0 view .LVU1055
 3357 0518 0899     		ldr	r1, [sp, #32]
 3358 051a 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3359              		.loc 2 133 9 is_stmt 1 view .LVU1056
 133:Frame.h       ****         *m_pChange = true;
 3360              		.loc 2 133 11 is_stmt 0 view .LVU1057
 3361 051c 0799     		ldr	r1, [sp, #28]
 3362 051e 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3363              		.loc 2 134 9 is_stmt 1 view .LVU1058
 134:Frame.h       ****     }
 3364              		.loc 2 134 20 is_stmt 0 view .LVU1059
 3365 0520 0121     		movs	r1, #1
 3366 0522 5268     		ldr	r2, [r2, #4]
 3367              	.LVL296:
 134:Frame.h       ****     }
 3368              		.loc 2 134 20 view .LVU1060
 3369 0524 1170     		strb	r1, [r2]
 3370              	.LVL297:
 134:Frame.h       ****     }
 3371              		.loc 2 134 20 view .LVU1061
 3372              	.LBE399:
 3373              	.LBE401:
 3374 0526 A2E5     		b	.L98
 3375              	.LVL298:
 3376              	.L94:
 134:Frame.h       ****     }
 3377              		.loc 2 134 20 view .LVU1062
 3378              	.LBE405:
 3379              	.LBE475:
 3380              	.LBE586:
 3381              	.LBE596:
 3382              	.LBE603:
 252:GFX.cpp       ****     }
 253:GFX.cpp       **** }
 3383              		.loc 1 253 1 view .LVU1063
 3384 0528 0DB0     		add	sp, sp, #52
 3385              		.cfi_remember_state
 3386              		.cfi_def_cfa_offset 36
 3387              		@ sp needed
 3388 052a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 90


 3389              	.LVL299:
 3390              	.L114:
 3391              		.cfi_restore_state
 3392              	.LBB604:
 3393              	.LBB597:
 3394              	.LBB587:
 223:GFX.cpp       ****             angle2 += 90;
 3395              		.loc 1 223 65 is_stmt 1 discriminator 1 view .LVU1064
 223:GFX.cpp       ****             angle2 += 90;
 3396              		.loc 1 223 73 is_stmt 0 discriminator 1 view .LVU1065
 3397 052e 049A     		ldr	r2, [sp, #16]
 3398              	.LVL300:
 3399              	.LBB476:
 3400              	.LBB426:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3401              		.loc 2 216 15 discriminator 1 view .LVU1066
 3402 0530 B9F85C10 		ldrh	r1, [r9, #92]
 3403              	.LBE426:
 3404              	.LBE476:
 223:GFX.cpp       ****             angle2 += 90;
 3405              		.loc 1 223 73 discriminator 1 view .LVU1067
 3406 0534 921B     		subs	r2, r2, r6
 3407 0536 92B2     		uxth	r2, r2
 3408              	.LVL301:
 3409              	.LBB477:
 3410              	.LBI420:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 3411              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU1068
 3412              	.LBB427:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3413              		.loc 2 216 9 discriminator 1 view .LVU1069
 3414 0538 8A42     		cmp	r2, r1
 3415 053a BFF4CBAD 		bcs	.L112
 3416              	.LBE427:
 3417              	.LBE477:
 3418              	.LBB478:
 3419              	.LBB406:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3420              		.loc 2 216 30 is_stmt 0 view .LVU1070
 3421 053e B9F85E00 		ldrh	r0, [r9, #94]
 3422              	.LBE406:
 3423              	.LBE478:
 3424              	.LBB479:
 3425              	.LBB428:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3426              		.loc 2 216 24 view .LVU1071
 3427 0542 039C     		ldr	r4, [sp, #12]
 3428              	.LBE428:
 3429              	.LBE479:
 3430              	.LBB480:
 3431              	.LBB407:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3432              		.loc 2 216 30 view .LVU1072
 3433 0544 0A90     		str	r0, [sp, #40]
 3434              	.LVL302:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3435              		.loc 2 216 30 view .LVU1073
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 91


 3436              	.LBE407:
 3437              	.LBE480:
 3438              	.LBB481:
 3439              	.LBB429:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3440              		.loc 2 216 24 view .LVU1074
 3441 0546 0A98     		ldr	r0, [sp, #40]
 3442 0548 8442     		cmp	r4, r0
 3443 054a BFF4C3AD 		bcs	.L112
 3444 054e 4DE7     		b	.L223
 3445              	.LVL303:
 3446              	.L104:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3447              		.loc 2 216 24 view .LVU1075
 3448              	.LBE429:
 3449              	.LBE481:
 215:GFX.cpp       ****             angle2 += 90;
 3450              		.loc 1 215 65 is_stmt 1 discriminator 1 view .LVU1076
 215:GFX.cpp       ****             angle2 += 90;
 3451              		.loc 1 215 73 is_stmt 0 discriminator 1 view .LVU1077
 3452 0550 049A     		ldr	r2, [sp, #16]
 3453              	.LVL304:
 3454              	.LBB482:
 3455              	.LBB469:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3456              		.loc 2 216 15 discriminator 1 view .LVU1078
 3457 0552 B9F85C10 		ldrh	r1, [r9, #92]
 3458              	.LBE469:
 3459              	.LBE482:
 215:GFX.cpp       ****             angle2 += 90;
 3460              		.loc 1 215 73 discriminator 1 view .LVU1079
 3461 0556 3244     		add	r2, r2, r6
 3462 0558 92B2     		uxth	r2, r2
 3463              	.LVL305:
 3464              	.LBB483:
 3465              	.LBI463:
 215:Frame.h       ****         if((x<m_Width) && (y<m_Height)){
 3466              		.loc 2 215 17 is_stmt 1 discriminator 1 view .LVU1080
 3467              	.LBB470:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3468              		.loc 2 216 9 discriminator 1 view .LVU1081
 3469 055a 8A42     		cmp	r2, r1
 3470 055c BFF496AD 		bcs	.L102
 3471              	.LBE470:
 3472              	.LBE483:
 3473              	.LBB484:
 3474              	.LBB408:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3475              		.loc 2 216 30 is_stmt 0 view .LVU1082
 3476 0560 B9F85E00 		ldrh	r0, [r9, #94]
 3477              	.LBE408:
 3478              	.LBE484:
 3479              	.LBB485:
 3480              	.LBB471:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3481              		.loc 2 216 24 view .LVU1083
 3482 0564 029C     		ldr	r4, [sp, #8]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 92


 3483              	.LBE471:
 3484              	.LBE485:
 3485              	.LBB486:
 3486              	.LBB409:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3487              		.loc 2 216 30 view .LVU1084
 3488 0566 0A90     		str	r0, [sp, #40]
 3489              	.LVL306:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3490              		.loc 2 216 30 view .LVU1085
 3491              	.LBE409:
 3492              	.LBE486:
 3493              	.LBB487:
 3494              	.LBB472:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3495              		.loc 2 216 24 view .LVU1086
 3496 0568 0A98     		ldr	r0, [sp, #40]
 3497 056a 8442     		cmp	r4, r0
 3498 056c BFF48EAD 		bcs	.L102
 3499 0570 ABE7     		b	.L224
 3500              	.LVL307:
 3501              	.L142:
 216:Frame.h       ****             m_pFrame[x+(y*m_Width)].set(Color);
 3502              		.loc 2 216 24 view .LVU1087
 3503              	.LBE472:
 3504              	.LBE487:
 3505              	.LBE587:
 3506              	.LBE597:
 3507              	.LBE604:
 195:GFX.cpp       ****     if(AlphaIn > AlphaOut){
 3508              		.loc 1 195 10 view .LVU1088
 3509 0572 0022     		movs	r2, #0
 3510 0574 0592     		str	r2, [sp, #20]
 3511 0576 5EE5     		b	.L95
 3512              	.LVL308:
 3513              	.L222:
 3514              	.LBB605:
 3515              	.LBB598:
 3516              	.LBB588:
 3517              	.LBB488:
 3518              	.LBB461:
 217:Frame.h       ****         }
 3519              		.loc 2 217 13 is_stmt 1 view .LVU1089
 217:Frame.h       ****         }
 3520              		.loc 2 217 40 is_stmt 0 view .LVU1090
 3521 0578 D9F85440 		ldr	r4, [r9, #84]
 3522 057c 2046     		mov	r0, r4
 217:Frame.h       ****         }
 3523              		.loc 2 217 23 view .LVU1091
 3524 057e 0B9C     		ldr	r4, [sp, #44]
 3525 0580 01FB042C 		mla	ip, r1, r4, r2
 3526              	.LBB456:
 3527              	.LBB457:
 131:Frame.h       ****         G = Color.m_G;
 3528              		.loc 2 131 11 view .LVU1092
 3529 0584 0446     		mov	r4, r0
 3530 0586 0998     		ldr	r0, [sp, #36]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 93


 3531 0588 04F83C00 		strb	r0, [r4, ip, lsl #3]
 3532              	.LBE457:
 3533              	.LBE456:
 217:Frame.h       ****         }
 3534              		.loc 2 217 40 view .LVU1093
 3535 058c 04EBCC0C 		add	ip, r4, ip, lsl #3
 3536              	.LVL309:
 3537              	.LBB459:
 3538              	.LBI456:
 130:Frame.h       ****         R = Color.m_R;
 3539              		.loc 2 130 17 is_stmt 1 view .LVU1094
 3540              	.LBB458:
 131:Frame.h       ****         G = Color.m_G;
 3541              		.loc 2 131 9 view .LVU1095
 132:Frame.h       ****         B = Color.m_B;
 3542              		.loc 2 132 9 view .LVU1096
 132:Frame.h       ****         B = Color.m_B;
 3543              		.loc 2 132 11 is_stmt 0 view .LVU1097
 3544 0590 0898     		ldr	r0, [sp, #32]
 3545 0592 8CF80100 		strb	r0, [ip, #1]
 133:Frame.h       ****         *m_pChange = true;
 3546              		.loc 2 133 9 is_stmt 1 view .LVU1098
 133:Frame.h       ****         *m_pChange = true;
 3547              		.loc 2 133 11 is_stmt 0 view .LVU1099
 3548 0596 0798     		ldr	r0, [sp, #28]
 3549 0598 8CF80200 		strb	r0, [ip, #2]
 134:Frame.h       ****     }
 3550              		.loc 2 134 9 is_stmt 1 view .LVU1100
 134:Frame.h       ****     }
 3551              		.loc 2 134 20 is_stmt 0 view .LVU1101
 3552 059c DCF80400 		ldr	r0, [ip, #4]
 3553 05a0 4FF0010C 		mov	ip, #1
 3554              	.LVL310:
 134:Frame.h       ****     }
 3555              		.loc 2 134 20 view .LVU1102
 3556 05a4 80F800C0 		strb	ip, [r0]
 3557              	.LVL311:
 134:Frame.h       ****     }
 3558              		.loc 2 134 20 view .LVU1103
 3559              	.LBE458:
 3560              	.LBE459:
 3561 05a8 81E7     		b	.L103
 3562              	.LVL312:
 3563              	.L221:
 134:Frame.h       ****     }
 3564              		.loc 2 134 20 view .LVU1104
 3565              	.LBE461:
 3566              	.LBE488:
 3567              	.LBB489:
 3568              	.LBB418:
 217:Frame.h       ****         }
 3569              		.loc 2 217 13 is_stmt 1 view .LVU1105
 217:Frame.h       ****         }
 3570              		.loc 2 217 40 is_stmt 0 view .LVU1106
 3571 05aa D9F85440 		ldr	r4, [r9, #84]
 3572 05ae 2046     		mov	r0, r4
 217:Frame.h       ****         }
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 94


 3573              		.loc 2 217 23 view .LVU1107
 3574 05b0 0B9C     		ldr	r4, [sp, #44]
 3575 05b2 01FB042C 		mla	ip, r1, r4, r2
 3576              	.LBB413:
 3577              	.LBB414:
 131:Frame.h       ****         G = Color.m_G;
 3578              		.loc 2 131 11 view .LVU1108
 3579 05b6 0446     		mov	r4, r0
 3580 05b8 0998     		ldr	r0, [sp, #36]
 3581 05ba 04F83C00 		strb	r0, [r4, ip, lsl #3]
 3582              	.LBE414:
 3583              	.LBE413:
 217:Frame.h       ****         }
 3584              		.loc 2 217 40 view .LVU1109
 3585 05be 04EBCC0C 		add	ip, r4, ip, lsl #3
 3586              	.LVL313:
 3587              	.LBB416:
 3588              	.LBI413:
 130:Frame.h       ****         R = Color.m_R;
 3589              		.loc 2 130 17 is_stmt 1 view .LVU1110
 3590              	.LBB415:
 131:Frame.h       ****         G = Color.m_G;
 3591              		.loc 2 131 9 view .LVU1111
 132:Frame.h       ****         B = Color.m_B;
 3592              		.loc 2 132 9 view .LVU1112
 132:Frame.h       ****         B = Color.m_B;
 3593              		.loc 2 132 11 is_stmt 0 view .LVU1113
 3594 05c2 0898     		ldr	r0, [sp, #32]
 3595 05c4 8CF80100 		strb	r0, [ip, #1]
 133:Frame.h       ****         *m_pChange = true;
 3596              		.loc 2 133 9 is_stmt 1 view .LVU1114
 133:Frame.h       ****         *m_pChange = true;
 3597              		.loc 2 133 11 is_stmt 0 view .LVU1115
 3598 05c8 0798     		ldr	r0, [sp, #28]
 3599 05ca 8CF80200 		strb	r0, [ip, #2]
 134:Frame.h       ****     }
 3600              		.loc 2 134 9 is_stmt 1 view .LVU1116
 134:Frame.h       ****     }
 3601              		.loc 2 134 20 is_stmt 0 view .LVU1117
 3602 05ce DCF80400 		ldr	r0, [ip, #4]
 3603 05d2 4FF0010C 		mov	ip, #1
 3604              	.LVL314:
 134:Frame.h       ****     }
 3605              		.loc 2 134 20 view .LVU1118
 3606 05d6 80F800C0 		strb	ip, [r0]
 3607              	.LVL315:
 134:Frame.h       ****     }
 3608              		.loc 2 134 20 view .LVU1119
 3609              	.LBE415:
 3610              	.LBE416:
 3611 05da F9E6     		b	.L113
 3612              	.LVL316:
 3613              	.L219:
 134:Frame.h       ****     }
 3614              		.loc 2 134 20 view .LVU1120
 3615              	.LBE418:
 3616              	.LBE489:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 95


 3617              	.LBE588:
 3618              	.LBB589:
 3619              	.LBB578:
 3620              	.LBB522:
 217:Frame.h       ****         }
 3621              		.loc 2 217 13 is_stmt 1 view .LVU1121
 217:Frame.h       ****         }
 3622              		.loc 2 217 23 is_stmt 0 view .LVU1122
 3623 05dc 01FB0282 		mla	r2, r1, r2, r8
 3624              	.LBB514:
 3625              	.LBB515:
 131:Frame.h       ****         G = Color.m_G;
 3626              		.loc 2 131 11 view .LVU1123
 3627 05e0 0998     		ldr	r0, [sp, #36]
 3628              	.LBE515:
 3629              	.LBE514:
 217:Frame.h       ****         }
 3630              		.loc 2 217 40 view .LVU1124
 3631 05e2 D9F85410 		ldr	r1, [r9, #84]
 3632              	.LBB518:
 3633              	.LBB516:
 131:Frame.h       ****         G = Color.m_G;
 3634              		.loc 2 131 11 view .LVU1125
 3635 05e6 01F83200 		strb	r0, [r1, r2, lsl #3]
 3636              	.LBE516:
 3637              	.LBE518:
 217:Frame.h       ****         }
 3638              		.loc 2 217 40 view .LVU1126
 3639 05ea 01EBC202 		add	r2, r1, r2, lsl #3
 3640              	.LVL317:
 3641              	.LBB519:
 3642              	.LBI514:
 130:Frame.h       ****         R = Color.m_R;
 3643              		.loc 2 130 17 is_stmt 1 view .LVU1127
 3644              	.LBB517:
 131:Frame.h       ****         G = Color.m_G;
 3645              		.loc 2 131 9 view .LVU1128
 132:Frame.h       ****         B = Color.m_B;
 3646              		.loc 2 132 9 view .LVU1129
 132:Frame.h       ****         B = Color.m_B;
 3647              		.loc 2 132 11 is_stmt 0 view .LVU1130
 3648 05ee 0899     		ldr	r1, [sp, #32]
 3649 05f0 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3650              		.loc 2 133 9 is_stmt 1 view .LVU1131
 133:Frame.h       ****         *m_pChange = true;
 3651              		.loc 2 133 11 is_stmt 0 view .LVU1132
 3652 05f2 0799     		ldr	r1, [sp, #28]
 3653 05f4 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3654              		.loc 2 134 9 is_stmt 1 view .LVU1133
 134:Frame.h       ****     }
 3655              		.loc 2 134 20 is_stmt 0 view .LVU1134
 3656 05f6 0121     		movs	r1, #1
 3657 05f8 5268     		ldr	r2, [r2, #4]
 3658              	.LVL318:
 134:Frame.h       ****     }
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 96


 3659              		.loc 2 134 20 view .LVU1135
 3660 05fa 1170     		strb	r1, [r2]
 3661              	.LVL319:
 134:Frame.h       ****     }
 3662              		.loc 2 134 20 view .LVU1136
 3663              	.LBE517:
 3664              	.LBE519:
 3665 05fc 12E6     		b	.L125
 3666              	.LVL320:
 3667              	.L218:
 134:Frame.h       ****     }
 3668              		.loc 2 134 20 view .LVU1137
 3669              	.LBE522:
 3670              	.LBE578:
 3671              	.LBB579:
 3672              	.LBB501:
 217:Frame.h       ****         }
 3673              		.loc 2 217 13 is_stmt 1 view .LVU1138
 217:Frame.h       ****         }
 3674              		.loc 2 217 23 is_stmt 0 view .LVU1139
 3675 05fe 01FB0282 		mla	r2, r1, r2, r8
 3676              	.LBB493:
 3677              	.LBB494:
 131:Frame.h       ****         G = Color.m_G;
 3678              		.loc 2 131 11 view .LVU1140
 3679 0602 0998     		ldr	r0, [sp, #36]
 3680              	.LBE494:
 3681              	.LBE493:
 217:Frame.h       ****         }
 3682              		.loc 2 217 40 view .LVU1141
 3683 0604 D9F85410 		ldr	r1, [r9, #84]
 3684              	.LBB497:
 3685              	.LBB495:
 131:Frame.h       ****         G = Color.m_G;
 3686              		.loc 2 131 11 view .LVU1142
 3687 0608 01F83200 		strb	r0, [r1, r2, lsl #3]
 3688              	.LBE495:
 3689              	.LBE497:
 217:Frame.h       ****         }
 3690              		.loc 2 217 40 view .LVU1143
 3691 060c 01EBC202 		add	r2, r1, r2, lsl #3
 3692              	.LVL321:
 3693              	.LBB498:
 3694              	.LBI493:
 130:Frame.h       ****         R = Color.m_R;
 3695              		.loc 2 130 17 is_stmt 1 view .LVU1144
 3696              	.LBB496:
 131:Frame.h       ****         G = Color.m_G;
 3697              		.loc 2 131 9 view .LVU1145
 132:Frame.h       ****         B = Color.m_B;
 3698              		.loc 2 132 9 view .LVU1146
 132:Frame.h       ****         B = Color.m_B;
 3699              		.loc 2 132 11 is_stmt 0 view .LVU1147
 3700 0610 0899     		ldr	r1, [sp, #32]
 3701 0612 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3702              		.loc 2 133 9 is_stmt 1 view .LVU1148
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 97


 133:Frame.h       ****         *m_pChange = true;
 3703              		.loc 2 133 11 is_stmt 0 view .LVU1149
 3704 0614 0799     		ldr	r1, [sp, #28]
 3705 0616 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3706              		.loc 2 134 9 is_stmt 1 view .LVU1150
 134:Frame.h       ****     }
 3707              		.loc 2 134 20 is_stmt 0 view .LVU1151
 3708 0618 0121     		movs	r1, #1
 3709 061a 5268     		ldr	r2, [r2, #4]
 3710              	.LVL322:
 134:Frame.h       ****     }
 3711              		.loc 2 134 20 view .LVU1152
 3712 061c 1170     		strb	r1, [r2]
 3713              	.LVL323:
 134:Frame.h       ****     }
 3714              		.loc 2 134 20 view .LVU1153
 3715              	.LBE496:
 3716              	.LBE498:
 3717 061e B9E5     		b	.L118
 3718              	.LVL324:
 3719              	.L220:
 134:Frame.h       ****     }
 3720              		.loc 2 134 20 view .LVU1154
 3721              	.LBE501:
 3722              	.LBE579:
 3723              	.LBB580:
 3724              	.LBB535:
 217:Frame.h       ****         }
 3725              		.loc 2 217 13 is_stmt 1 view .LVU1155
 217:Frame.h       ****         }
 3726              		.loc 2 217 23 is_stmt 0 view .LVU1156
 3727 0620 01FB02B2 		mla	r2, r1, r2, fp
 3728              	.LBB527:
 3729              	.LBB528:
 131:Frame.h       ****         G = Color.m_G;
 3730              		.loc 2 131 11 view .LVU1157
 3731 0624 0998     		ldr	r0, [sp, #36]
 3732              	.LBE528:
 3733              	.LBE527:
 217:Frame.h       ****         }
 3734              		.loc 2 217 40 view .LVU1158
 3735 0626 D9F85410 		ldr	r1, [r9, #84]
 3736              	.LBB531:
 3737              	.LBB529:
 131:Frame.h       ****         G = Color.m_G;
 3738              		.loc 2 131 11 view .LVU1159
 3739 062a 01F83200 		strb	r0, [r1, r2, lsl #3]
 3740              	.LBE529:
 3741              	.LBE531:
 217:Frame.h       ****         }
 3742              		.loc 2 217 40 view .LVU1160
 3743 062e 01EBC202 		add	r2, r1, r2, lsl #3
 3744              	.LVL325:
 3745              	.LBB532:
 3746              	.LBI527:
 130:Frame.h       ****         R = Color.m_R;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 98


 3747              		.loc 2 130 17 is_stmt 1 view .LVU1161
 3748              	.LBB530:
 131:Frame.h       ****         G = Color.m_G;
 3749              		.loc 2 131 9 view .LVU1162
 132:Frame.h       ****         B = Color.m_B;
 3750              		.loc 2 132 9 view .LVU1163
 132:Frame.h       ****         B = Color.m_B;
 3751              		.loc 2 132 11 is_stmt 0 view .LVU1164
 3752 0632 0899     		ldr	r1, [sp, #32]
 3753 0634 5170     		strb	r1, [r2, #1]
 133:Frame.h       ****         *m_pChange = true;
 3754              		.loc 2 133 9 is_stmt 1 view .LVU1165
 133:Frame.h       ****         *m_pChange = true;
 3755              		.loc 2 133 11 is_stmt 0 view .LVU1166
 3756 0636 0799     		ldr	r1, [sp, #28]
 3757 0638 9170     		strb	r1, [r2, #2]
 134:Frame.h       ****     }
 3758              		.loc 2 134 9 is_stmt 1 view .LVU1167
 134:Frame.h       ****     }
 3759              		.loc 2 134 20 is_stmt 0 view .LVU1168
 3760 063a 0121     		movs	r1, #1
 3761 063c 5268     		ldr	r2, [r2, #4]
 3762              	.LVL326:
 134:Frame.h       ****     }
 3763              		.loc 2 134 20 view .LVU1169
 3764 063e 1170     		strb	r1, [r2]
 3765              	.LVL327:
 134:Frame.h       ****     }
 3766              		.loc 2 134 20 view .LVU1170
 3767              	.LBE530:
 3768              	.LBE532:
 3769 0640 03E6     		b	.L126
 3770              	.LBE535:
 3771              	.LBE580:
 3772              	.LBE589:
 3773              	.LBE598:
 3774              	.LBE605:
 3775              		.cfi_endproc
 3776              	.LFE2637:
 3778 0642 00BF     		.section	.text._ZN4cGFX14drawFillCircleEttt6cColor,"ax",%progbits
 3779              		.align	1
 3780              		.p2align 2,,3
 3781              		.global	_ZN4cGFX14drawFillCircleEttt6cColor
 3782              		.syntax unified
 3783              		.thumb
 3784              		.thumb_func
 3786              	_ZN4cGFX14drawFillCircleEttt6cColor:
 3787              	.LVL328:
 3788              	.LFB2638:
 254:GFX.cpp       **** 
 255:GFX.cpp       **** //-----------------------------------------------------------------------------------
 256:GFX.cpp       **** // Dessin d'un cercle plein
 257:GFX.cpp       **** void cGFX::drawFillCircle(uint16_t centerX, uint16_t centerY, uint16_t radius, cColor Color)
 258:GFX.cpp       **** {
 3789              		.loc 1 258 1 is_stmt 1 view -0
 3790              		.cfi_startproc
 3791              		@ args = 4, pretend = 0, frame = 48
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 99


 3792              		@ frame_needed = 0, uses_anonymous_args = 0
 3793              		.loc 1 258 1 is_stmt 0 view .LVU1172
 3794 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3795              		.cfi_def_cfa_offset 36
 3796              		.cfi_offset 4, -36
 3797              		.cfi_offset 5, -32
 3798              		.cfi_offset 6, -28
 3799              		.cfi_offset 7, -24
 3800              		.cfi_offset 8, -20
 3801              		.cfi_offset 9, -16
 3802              		.cfi_offset 10, -12
 3803              		.cfi_offset 11, -8
 3804              		.cfi_offset 14, -4
 3805 0004 8DB0     		sub	sp, sp, #52
 3806              		.cfi_def_cfa_offset 88
 3807 0006 B0F85C50 		ldrh	r5, [r0, #92]
 3808 000a 8B46     		mov	fp, r1
 259:GFX.cpp       ****     int x = 0;
 3809              		.loc 1 259 9 view .LVU1173
 3810 000c 4FF00008 		mov	r8, #0
 258:GFX.cpp       ****     int x = 0;
 3811              		.loc 1 258 1 view .LVU1174
 3812 0010 0492     		str	r2, [sp, #16]
 3813 0012 B0F85E20 		ldrh	r2, [r0, #94]
 3814              	.LVL329:
 258:GFX.cpp       ****     int x = 0;
 3815              		.loc 1 258 1 view .LVU1175
 3816 0016 406D     		ldr	r0, [r0, #84]
 3817              	.LVL330:
 258:GFX.cpp       ****     int x = 0;
 3818              		.loc 1 258 1 view .LVU1176
 3819 0018 0392     		str	r2, [sp, #12]
 3820              	.LBB629:
 3821              	.LBB630:
 3822              	.LBB631:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 3823              		.loc 2 209 27 view .LVU1177
 3824 001a 013A     		subs	r2, r2, #1
 3825 001c 0290     		str	r0, [sp, #8]
 3826 001e 90B2     		uxth	r0, r2
 3827 0020 9DF85840 		ldrb	r4, [sp, #88]	@ zero_extendqisi2
 3828              	.LVL331:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 3829              		.loc 2 209 27 view .LVU1178
 3830              	.LBE631:
 3831              	.LBE630:
 3832              	.LBE629:
 260:GFX.cpp       ****     int y = radius;
 261:GFX.cpp       ****     int m = 5 - 4 * radius;
 3833              		.loc 1 261 19 view .LVU1179
 3834 0024 9A00     		lsls	r2, r3, #2
 3835 0026 9DF859E0 		ldrb	lr, [sp, #89]	@ zero_extendqisi2
 3836              	.LVL332:
 3837              		.loc 1 261 19 view .LVU1180
 3838 002a 9DF85AC0 		ldrb	ip, [sp, #90]	@ zero_extendqisi2
 3839              	.LVL333:
 259:GFX.cpp       ****     int y = radius;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 100


 3840              		.loc 1 259 5 is_stmt 1 view .LVU1181
 260:GFX.cpp       ****     int y = radius;
 3841              		.loc 1 260 5 view .LVU1182
 3842              		.loc 1 261 5 view .LVU1183
 262:GFX.cpp       **** 
 263:GFX.cpp       ****     while (x <= y)
 3843              		.loc 1 263 5 view .LVU1184
 3844              		.loc 1 263 14 view .LVU1185
 261:GFX.cpp       **** 
 3845              		.loc 1 261 9 is_stmt 0 view .LVU1186
 3846 002e C2F10502 		rsb	r2, r2, #5
 258:GFX.cpp       ****     int x = 0;
 3847              		.loc 1 258 1 view .LVU1187
 3848 0032 0A91     		str	r1, [sp, #40]
 3849 0034 0695     		str	r5, [sp, #24]
 261:GFX.cpp       **** 
 3850              		.loc 1 261 9 view .LVU1188
 3851 0036 0192     		str	r2, [sp, #4]
 3852              	.LVL334:
 3853              	.LBB697:
 3854              	.LBB638:
 3855              	.LBB632:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3856              		.loc 2 208 26 view .LVU1189
 3857 0038 6A1E     		subs	r2, r5, #1
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 3858              		.loc 2 209 27 view .LVU1190
 3859 003a 0990     		str	r0, [sp, #36]
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3860              		.loc 2 208 26 view .LVU1191
 3861 003c 92B2     		uxth	r2, r2
 3862              	.LBE632:
 3863              	.LBE638:
 3864              	.LBB639:
 264:GFX.cpp       ****     {
 265:GFX.cpp       ****         RGB *pFrame = getPtr(centerX - y, centerY - x);
 266:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 3865              		.loc 1 266 23 view .LVU1192
 3866 003e 0591     		str	r1, [sp, #20]
 3867              	.LBE639:
 3868              	.LBB644:
 3869              	.LBB633:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3870              		.loc 2 208 26 view .LVU1193
 3871 0040 0892     		str	r2, [sp, #32]
 3872              	.LBE633:
 3873              	.LBE644:
 3874              	.LBB645:
 3875              	.LBB646:
 210:Frame.h       ****     } 
 3876              		.loc 2 210 30 view .LVU1194
 3877 0042 05FB00F2 		mul	r2, r5, r0
 3878 0046 0B92     		str	r2, [sp, #44]
 3879              	.LVL335:
 3880              	.L242:
 210:Frame.h       ****     } 
 3881              		.loc 2 210 30 view .LVU1195
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 101


 3882              	.LBE646:
 3883              	.LBE645:
 265:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 3884              		.loc 1 265 9 is_stmt 1 view .LVU1196
 3885              	.LBB650:
 3886              		.loc 1 266 18 is_stmt 0 view .LVU1197
 3887 0048 0A9A     		ldr	r2, [sp, #40]
 3888              	.LBE650:
 265:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 3889              		.loc 1 265 29 view .LVU1198
 3890 004a 99B2     		uxth	r1, r3
 3891              	.LBB651:
 3892              	.LBB634:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3893              		.loc 2 208 26 view .LVU1199
 3894 004c 069E     		ldr	r6, [sp, #24]
 3895 004e 1FFA88FA 		uxth	r10, r8
 3896              	.LBE634:
 3897              	.LBE651:
 265:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 3898              		.loc 1 265 29 view .LVU1200
 3899 0052 0791     		str	r1, [sp, #28]
 3900 0054 511A     		subs	r1, r2, r1
 3901              	.LBB652:
 3902              		.loc 1 266 18 view .LVU1201
 3903 0056 D01A     		subs	r0, r2, r3
 3904              		.loc 1 266 50 view .LVU1202
 3905 0058 02EB0309 		add	r9, r2, r3
 3906              	.LBE652:
 265:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 3907              		.loc 1 265 29 view .LVU1203
 3908 005c 89B2     		uxth	r1, r1
 3909              	.LBB653:
 3910              	.LBB635:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3911              		.loc 2 208 26 view .LVU1204
 3912 005e 089A     		ldr	r2, [sp, #32]
 210:Frame.h       ****     } 
 3913              		.loc 2 210 29 view .LVU1205
 3914 0060 039F     		ldr	r7, [sp, #12]
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3915              		.loc 2 208 26 view .LVU1206
 3916 0062 B142     		cmp	r1, r6
 3917 0064 28BF     		it	cs
 3918 0066 1146     		movcs	r1, r2
 3919 0068 049A     		ldr	r2, [sp, #16]
 3920 006a A2EB0A05 		sub	r5, r2, r10
 210:Frame.h       ****     } 
 3921              		.loc 2 210 29 view .LVU1207
 3922 006e 099A     		ldr	r2, [sp, #36]
 3923 0070 ADB2     		uxth	r5, r5
 3924              	.LVL336:
 210:Frame.h       ****     } 
 3925              		.loc 2 210 29 view .LVU1208
 3926              	.LBE635:
 3927              	.LBI630:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 102


 3928              		.loc 2 207 17 is_stmt 1 view .LVU1209
 3929              	.LBB636:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 3930              		.loc 2 208 9 view .LVU1210
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 3931              		.loc 2 209 9 view .LVU1211
 210:Frame.h       ****     } 
 3932              		.loc 2 210 29 is_stmt 0 view .LVU1212
 3933 0072 BD42     		cmp	r5, r7
 3934 0074 38BF     		it	cc
 3935 0076 2A46     		movcc	r2, r5
 3936              	.LVL337:
 210:Frame.h       ****     } 
 3937              		.loc 2 210 9 is_stmt 1 view .LVU1213
 210:Frame.h       ****     } 
 3938              		.loc 2 210 39 is_stmt 0 view .LVU1214
 3939 0078 029D     		ldr	r5, [sp, #8]
 3940              	.LBE636:
 3941              	.LBE653:
 3942              	.LBB654:
 3943              		.loc 1 266 39 view .LVU1215
 3944 007a 4845     		cmp	r0, r9
 3945              	.LBE654:
 3946              	.LBB655:
 3947              	.LBB637:
 210:Frame.h       ****     } 
 3948              		.loc 2 210 27 view .LVU1216
 3949 007c 02FB0612 		mla	r2, r2, r6, r1
 210:Frame.h       ****     } 
 3950              		.loc 2 210 39 view .LVU1217
 3951 0080 05EBC202 		add	r2, r5, r2, lsl #3
 3952              	.LVL338:
 210:Frame.h       ****     } 
 3953              		.loc 2 210 39 view .LVU1218
 3954              	.LBE637:
 3955              	.LBE655:
 3956              		.loc 1 266 9 is_stmt 1 view .LVU1219
 3957              	.LBB656:
 3958              		.loc 1 266 39 view .LVU1220
 3959 0084 29DC     		bgt	.L230
 3960 0086 09F10107 		add	r7, r9, #1
 3961 008a 3F1A     		subs	r7, r7, r0
 3962 008c 02EBC707 		add	r7, r2, r7, lsl #3
 3963              	.LVL339:
 3964              	.L232:
 267:GFX.cpp       ****             pFrame++->set(Color);
 3965              		.loc 1 267 13 discriminator 2 view .LVU1221
 3966              	.LBB640:
 3967              	.LBI640:
 130:Frame.h       ****         R = Color.m_R;
 3968              		.loc 2 130 17 discriminator 2 view .LVU1222
 3969              	.LBB641:
 131:Frame.h       ****         G = Color.m_G;
 3970              		.loc 2 131 9 discriminator 2 view .LVU1223
 131:Frame.h       ****         G = Color.m_G;
 3971              		.loc 2 131 11 is_stmt 0 discriminator 2 view .LVU1224
 3972 0090 02F8084B 		strb	r4, [r2], #8
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 103


 3973              	.LVL340:
 132:Frame.h       ****         B = Color.m_B;
 3974              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU1225
 134:Frame.h       ****     }
 3975              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1226
 3976 0094 0126     		movs	r6, #1
 3977 0096 52F8045C 		ldr	r5, [r2, #-4]
 3978              	.LBE641:
 3979              	.LBE640:
 266:GFX.cpp       ****             pFrame++->set(Color);
 3980              		.loc 1 266 39 discriminator 2 view .LVU1227
 3981 009a BA42     		cmp	r2, r7
 3982              	.LBB643:
 3983              	.LBB642:
 132:Frame.h       ****         B = Color.m_B;
 3984              		.loc 2 132 11 discriminator 2 view .LVU1228
 3985 009c 02F807EC 		strb	lr, [r2, #-7]
 133:Frame.h       ****         *m_pChange = true;
 3986              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU1229
 133:Frame.h       ****         *m_pChange = true;
 3987              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU1230
 3988 00a0 02F806CC 		strb	ip, [r2, #-6]
 134:Frame.h       ****     }
 3989              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU1231
 134:Frame.h       ****     }
 3990              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1232
 3991 00a4 2E70     		strb	r6, [r5]
 3992              	.LVL341:
 134:Frame.h       ****     }
 3993              		.loc 2 134 20 discriminator 2 view .LVU1233
 3994              	.LBE642:
 3995              	.LBE643:
 266:GFX.cpp       ****             pFrame++->set(Color);
 3996              		.loc 1 266 9 is_stmt 1 discriminator 2 view .LVU1234
 266:GFX.cpp       ****             pFrame++->set(Color);
 3997              		.loc 1 266 39 discriminator 2 view .LVU1235
 3998 00a6 F3D1     		bne	.L232
 3999              	.LBE656:
 268:GFX.cpp       **** 
 269:GFX.cpp       ****         pFrame = getPtr(centerX - y, centerY + x);
 4000              		.loc 1 269 9 view .LVU1236
 4001 00a8 049A     		ldr	r2, [sp, #16]
 4002              	.LVL342:
 4003              		.loc 1 269 9 is_stmt 0 view .LVU1237
 4004 00aa 9244     		add	r10, r10, r2
 4005              	.LBB657:
 4006              	.LBB647:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4007              		.loc 2 209 9 view .LVU1238
 4008 00ac 039A     		ldr	r2, [sp, #12]
 4009 00ae 1FFA8AFA 		uxth	r10, r10
 4010              	.LVL343:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4011              		.loc 2 209 9 view .LVU1239
 4012              	.LBE647:
 4013              	.LBI645:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 104


 4014              		.loc 2 207 17 is_stmt 1 view .LVU1240
 4015              	.LBB648:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4016              		.loc 2 208 9 view .LVU1241
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4017              		.loc 2 209 9 view .LVU1242
 4018 00b2 9245     		cmp	r10, r2
 4019 00b4 26D3     		bcc	.L262
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4020              		.loc 2 209 25 view .LVU1243
 4021              	.LVL344:
 210:Frame.h       ****     } 
 4022              		.loc 2 210 9 view .LVU1244
 210:Frame.h       ****     } 
 4023              		.loc 2 210 27 is_stmt 0 view .LVU1245
 4024 00b6 0B9A     		ldr	r2, [sp, #44]
 4025 00b8 1144     		add	r1, r1, r2
 210:Frame.h       ****     } 
 4026              		.loc 2 210 39 view .LVU1246
 4027 00ba 029A     		ldr	r2, [sp, #8]
 4028 00bc 02EBC101 		add	r1, r2, r1, lsl #3
 4029              	.LVL345:
 210:Frame.h       ****     } 
 4030              		.loc 2 210 39 view .LVU1247
 4031              	.LBE648:
 4032              	.LBE657:
 270:GFX.cpp       ****         for (int xx = centerX - y; xx <= centerX + y; xx++)
 4033              		.loc 1 270 9 is_stmt 1 view .LVU1248
 4034              	.LBB658:
 4035              		.loc 1 270 39 view .LVU1249
 4036              	.L235:
 271:GFX.cpp       ****             pFrame++->set(Color);
 4037              		.loc 1 271 13 discriminator 2 view .LVU1250
 4038              	.LBB659:
 4039              	.LBI659:
 130:Frame.h       ****         R = Color.m_R;
 4040              		.loc 2 130 17 discriminator 2 view .LVU1251
 4041              	.LBB660:
 131:Frame.h       ****         G = Color.m_G;
 4042              		.loc 2 131 9 discriminator 2 view .LVU1252
 4043              	.LBE660:
 4044              	.LBE659:
 270:GFX.cpp       ****             pFrame++->set(Color);
 4045              		.loc 1 270 9 is_stmt 0 discriminator 2 view .LVU1253
 4046 00c0 0130     		adds	r0, r0, #1
 4047              	.LVL346:
 4048              	.LBB663:
 4049              	.LBB661:
 131:Frame.h       ****         G = Color.m_G;
 4050              		.loc 2 131 11 discriminator 2 view .LVU1254
 4051 00c2 01F8084B 		strb	r4, [r1], #8
 4052              	.LVL347:
 132:Frame.h       ****         B = Color.m_B;
 4053              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU1255
 134:Frame.h       ****     }
 4054              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1256
 4055 00c6 0125     		movs	r5, #1
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 105


 4056 00c8 51F8042C 		ldr	r2, [r1, #-4]
 4057              	.LBE661:
 4058              	.LBE663:
 270:GFX.cpp       ****             pFrame++->set(Color);
 4059              		.loc 1 270 39 discriminator 2 view .LVU1257
 4060 00cc 4845     		cmp	r0, r9
 4061              	.LBB664:
 4062              	.LBB662:
 132:Frame.h       ****         B = Color.m_B;
 4063              		.loc 2 132 11 discriminator 2 view .LVU1258
 4064 00ce 01F807EC 		strb	lr, [r1, #-7]
 133:Frame.h       ****         *m_pChange = true;
 4065              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU1259
 133:Frame.h       ****         *m_pChange = true;
 4066              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU1260
 4067 00d2 01F806CC 		strb	ip, [r1, #-6]
 134:Frame.h       ****     }
 4068              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU1261
 134:Frame.h       ****     }
 4069              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1262
 4070 00d6 1570     		strb	r5, [r2]
 4071              	.LVL348:
 134:Frame.h       ****     }
 4072              		.loc 2 134 20 discriminator 2 view .LVU1263
 4073              	.LBE662:
 4074              	.LBE664:
 270:GFX.cpp       ****             pFrame++->set(Color);
 4075              		.loc 1 270 9 is_stmt 1 discriminator 2 view .LVU1264
 270:GFX.cpp       ****             pFrame++->set(Color);
 4076              		.loc 1 270 39 discriminator 2 view .LVU1265
 4077 00d8 F2DD     		ble	.L235
 4078              	.LVL349:
 4079              	.L230:
 270:GFX.cpp       ****             pFrame++->set(Color);
 4080              		.loc 1 270 39 is_stmt 0 discriminator 2 view .LVU1266
 4081              	.LBE658:
 272:GFX.cpp       **** 
 273:GFX.cpp       ****         if (m > 0)
 4082              		.loc 1 273 9 is_stmt 1 view .LVU1267
 4083              	.LBB665:
 4084 00da 019A     		ldr	r2, [sp, #4]
 4085 00dc 002A     		cmp	r2, #0
 4086 00de 18DC     		bgt	.L263
 4087              	.L234:
 4088              		.loc 1 273 9 is_stmt 0 view .LVU1268
 4089              	.LBE665:
 274:GFX.cpp       ****         {
 275:GFX.cpp       ****             pFrame = getPtr(centerX - x, centerY - y);
 276:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 277:GFX.cpp       ****                 pFrame++->set(Color);
 278:GFX.cpp       **** 
 279:GFX.cpp       ****             pFrame = getPtr(centerX - x, centerY + y);
 280:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 281:GFX.cpp       ****                 pFrame++->set(Color);
 282:GFX.cpp       **** 
 283:GFX.cpp       ****             y--;
 284:GFX.cpp       ****             m -= 8 * y;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 106


 285:GFX.cpp       ****         }
 286:GFX.cpp       **** 
 287:GFX.cpp       ****         x++;
 4090              		.loc 1 287 9 is_stmt 1 view .LVU1269
 4091              	.LBE697:
 263:GFX.cpp       ****     {
 4092              		.loc 1 263 14 is_stmt 0 view .LVU1270
 4093 00e0 059A     		ldr	r2, [sp, #20]
 4094              	.LBB698:
 4095              		.loc 1 287 10 view .LVU1271
 4096 00e2 08F10108 		add	r8, r8, #1
 4097              	.LVL350:
 288:GFX.cpp       ****         m += 8 * x + 4;
 4098              		.loc 1 288 9 is_stmt 1 view .LVU1272
 4099              	.LBE698:
 263:GFX.cpp       ****     {
 4100              		.loc 1 263 14 is_stmt 0 view .LVU1273
 4101 00e6 0BF1010B 		add	fp, fp, #1
 4102 00ea 013A     		subs	r2, r2, #1
 4103 00ec 4345     		cmp	r3, r8
 4104 00ee 0592     		str	r2, [sp, #20]
 4105              	.LBB699:
 4106              		.loc 1 288 11 view .LVU1274
 4107 00f0 019A     		ldr	r2, [sp, #4]
 4108 00f2 02EBC802 		add	r2, r2, r8, lsl #3
 4109 00f6 02F10402 		add	r2, r2, #4
 4110 00fa 0192     		str	r2, [sp, #4]
 4111              	.LVL351:
 4112              		.loc 1 288 11 view .LVU1275
 4113              	.LBE699:
 263:GFX.cpp       ****     {
 4114              		.loc 1 263 5 is_stmt 1 view .LVU1276
 263:GFX.cpp       ****     {
 4115              		.loc 1 263 14 view .LVU1277
 4116 00fc A4DA     		bge	.L242
 289:GFX.cpp       ****     }
 290:GFX.cpp       **** }
 4117              		.loc 1 290 1 is_stmt 0 view .LVU1278
 4118 00fe 0DB0     		add	sp, sp, #52
 4119              		.cfi_remember_state
 4120              		.cfi_def_cfa_offset 36
 4121              		@ sp needed
 4122 0100 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4123              	.LVL352:
 4124              	.L262:
 4125              		.cfi_restore_state
 4126              	.LBB700:
 4127              	.LBB694:
 4128              	.LBB649:
 210:Frame.h       ****     } 
 4129              		.loc 2 210 9 is_stmt 1 view .LVU1279
 210:Frame.h       ****     } 
 4130              		.loc 2 210 27 is_stmt 0 view .LVU1280
 4131 0104 069A     		ldr	r2, [sp, #24]
 4132 0106 02FB0A11 		mla	r1, r2, r10, r1
 210:Frame.h       ****     } 
 4133              		.loc 2 210 39 view .LVU1281
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 107


 4134 010a 029A     		ldr	r2, [sp, #8]
 4135 010c 02EBC101 		add	r1, r2, r1, lsl #3
 4136              	.LVL353:
 210:Frame.h       ****     } 
 4137              		.loc 2 210 39 view .LVU1282
 4138              	.LBE649:
 4139              	.LBE694:
 270:GFX.cpp       ****             pFrame++->set(Color);
 4140              		.loc 1 270 9 is_stmt 1 view .LVU1283
 4141              	.LBB695:
 270:GFX.cpp       ****             pFrame++->set(Color);
 4142              		.loc 1 270 39 view .LVU1284
 4143 0110 D6E7     		b	.L235
 4144              	.LVL354:
 4145              	.L263:
 270:GFX.cpp       ****             pFrame++->set(Color);
 4146              		.loc 1 270 39 is_stmt 0 view .LVU1285
 4147              	.LBE695:
 4148              	.LBB696:
 4149              	.LBB666:
 275:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 4150              		.loc 1 275 13 is_stmt 1 view .LVU1286
 275:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 4151              		.loc 1 275 28 is_stmt 0 view .LVU1287
 4152 0112 0799     		ldr	r1, [sp, #28]
 4153 0114 049A     		ldr	r2, [sp, #16]
 4154 0116 059E     		ldr	r6, [sp, #20]
 4155 0118 521A     		subs	r2, r2, r1
 4156              	.LBB667:
 4157              	.LBB668:
 210:Frame.h       ****     } 
 4158              		.loc 2 210 29 view .LVU1288
 4159 011a 0398     		ldr	r0, [sp, #12]
 4160 011c 0999     		ldr	r1, [sp, #36]
 4161              	.LBE668:
 4162              	.LBE667:
 275:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 4163              		.loc 1 275 28 view .LVU1289
 4164 011e 92B2     		uxth	r2, r2
 4165              	.LVL355:
 4166              	.LBB671:
 4167              	.LBI667:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 4168              		.loc 2 207 17 is_stmt 1 view .LVU1290
 4169              	.LBB669:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4170              		.loc 2 208 9 view .LVU1291
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4171              		.loc 2 208 26 is_stmt 0 view .LVU1292
 4172 0120 089D     		ldr	r5, [sp, #32]
 210:Frame.h       ****     } 
 4173              		.loc 2 210 29 view .LVU1293
 4174 0122 8242     		cmp	r2, r0
 4175 0124 38BF     		it	cc
 4176 0126 1146     		movcc	r1, r2
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4177              		.loc 2 208 26 view .LVU1294
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 108


 4178 0128 069A     		ldr	r2, [sp, #24]
 4179              	.LVL356:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4180              		.loc 2 208 26 view .LVU1295
 4181 012a B0B2     		uxth	r0, r6
 4182 012c 8242     		cmp	r2, r0
 4183 012e 98BF     		it	ls
 4184 0130 2846     		movls	r0, r5
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4185              		.loc 2 209 9 is_stmt 1 view .LVU1296
 4186              	.LVL357:
 210:Frame.h       ****     } 
 4187              		.loc 2 210 9 view .LVU1297
 4188              	.LBE669:
 4189              	.LBE671:
 4190              	.LBB672:
 276:GFX.cpp       ****                 pFrame++->set(Color);
 4191              		.loc 1 276 43 is_stmt 0 view .LVU1298
 4192 0132 5E45     		cmp	r6, fp
 276:GFX.cpp       ****                 pFrame++->set(Color);
 4193              		.loc 1 276 22 view .LVU1299
 4194 0134 3546     		mov	r5, r6
 4195              	.LBE672:
 4196              	.LBB677:
 4197              	.LBB670:
 210:Frame.h       ****     } 
 4198              		.loc 2 210 27 view .LVU1300
 4199 0136 02FB0101 		mla	r1, r2, r1, r0
 210:Frame.h       ****     } 
 4200              		.loc 2 210 39 view .LVU1301
 4201 013a 029A     		ldr	r2, [sp, #8]
 4202 013c 02EBC101 		add	r1, r2, r1, lsl #3
 4203              	.LVL358:
 210:Frame.h       ****     } 
 4204              		.loc 2 210 39 view .LVU1302
 4205              	.LBE670:
 4206              	.LBE677:
 276:GFX.cpp       ****                 pFrame++->set(Color);
 4207              		.loc 1 276 13 is_stmt 1 view .LVU1303
 4208              	.LBB678:
 276:GFX.cpp       ****                 pFrame++->set(Color);
 4209              		.loc 1 276 43 view .LVU1304
 4210 0140 27DC     		bgt	.L238
 4211 0142 01EB0817 		add	r7, r1, r8, lsl #4
 4212 0146 0837     		adds	r7, r7, #8
 4213              	.LVL359:
 4214              	.L240:
 277:GFX.cpp       **** 
 4215              		.loc 1 277 17 discriminator 2 view .LVU1305
 4216              	.LBB673:
 4217              	.LBI673:
 130:Frame.h       ****         R = Color.m_R;
 4218              		.loc 2 130 17 discriminator 2 view .LVU1306
 4219              	.LBB674:
 131:Frame.h       ****         G = Color.m_G;
 4220              		.loc 2 131 9 discriminator 2 view .LVU1307
 131:Frame.h       ****         G = Color.m_G;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 109


 4221              		.loc 2 131 11 is_stmt 0 discriminator 2 view .LVU1308
 4222 0148 01F8084B 		strb	r4, [r1], #8
 4223              	.LVL360:
 132:Frame.h       ****         B = Color.m_B;
 4224              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU1309
 134:Frame.h       ****     }
 4225              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1310
 4226 014c 0126     		movs	r6, #1
 4227 014e 51F8042C 		ldr	r2, [r1, #-4]
 4228              	.LBE674:
 4229              	.LBE673:
 276:GFX.cpp       ****                 pFrame++->set(Color);
 4230              		.loc 1 276 43 discriminator 2 view .LVU1311
 4231 0152 B942     		cmp	r1, r7
 4232              	.LBB676:
 4233              	.LBB675:
 132:Frame.h       ****         B = Color.m_B;
 4234              		.loc 2 132 11 discriminator 2 view .LVU1312
 4235 0154 01F807EC 		strb	lr, [r1, #-7]
 133:Frame.h       ****         *m_pChange = true;
 4236              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU1313
 133:Frame.h       ****         *m_pChange = true;
 4237              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU1314
 4238 0158 01F806CC 		strb	ip, [r1, #-6]
 134:Frame.h       ****     }
 4239              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU1315
 134:Frame.h       ****     }
 4240              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1316
 4241 015c 1670     		strb	r6, [r2]
 4242              	.LVL361:
 134:Frame.h       ****     }
 4243              		.loc 2 134 20 discriminator 2 view .LVU1317
 4244              	.LBE675:
 4245              	.LBE676:
 276:GFX.cpp       ****                 pFrame++->set(Color);
 4246              		.loc 1 276 13 is_stmt 1 discriminator 2 view .LVU1318
 276:GFX.cpp       ****                 pFrame++->set(Color);
 4247              		.loc 1 276 43 discriminator 2 view .LVU1319
 4248 015e F3D1     		bne	.L240
 4249              	.LBE678:
 279:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 4250              		.loc 1 279 13 view .LVU1320
 279:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 4251              		.loc 1 279 28 is_stmt 0 view .LVU1321
 4252 0160 0499     		ldr	r1, [sp, #16]
 4253              	.LVL362:
 279:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 4254              		.loc 1 279 28 view .LVU1322
 4255 0162 079A     		ldr	r2, [sp, #28]
 4256 0164 0A44     		add	r2, r2, r1
 4257              	.LBB679:
 4258              	.LBB680:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4259              		.loc 2 209 9 view .LVU1323
 4260 0166 0399     		ldr	r1, [sp, #12]
 4261              	.LBE680:
 4262              	.LBE679:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 110


 279:GFX.cpp       ****             for (int xx = centerX - x; xx <= centerX + x; xx++)
 4263              		.loc 1 279 28 view .LVU1324
 4264 0168 92B2     		uxth	r2, r2
 4265              	.LVL363:
 4266              	.LBB683:
 4267              	.LBI679:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 4268              		.loc 2 207 17 is_stmt 1 view .LVU1325
 4269              	.LBB681:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4270              		.loc 2 208 9 view .LVU1326
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4271              		.loc 2 209 9 view .LVU1327
 4272 016a 8A42     		cmp	r2, r1
 4273 016c 17D3     		bcc	.L259
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4274              		.loc 2 209 25 view .LVU1328
 4275              	.LVL364:
 210:Frame.h       ****     } 
 4276              		.loc 2 210 9 view .LVU1329
 210:Frame.h       ****     } 
 4277              		.loc 2 210 27 is_stmt 0 view .LVU1330
 4278 016e 0B9A     		ldr	r2, [sp, #44]
 4279 0170 1044     		add	r0, r0, r2
 210:Frame.h       ****     } 
 4280              		.loc 2 210 39 view .LVU1331
 4281 0172 029A     		ldr	r2, [sp, #8]
 4282 0174 02EBC000 		add	r0, r2, r0, lsl #3
 4283              	.LVL365:
 210:Frame.h       ****     } 
 4284              		.loc 2 210 39 view .LVU1332
 4285              	.LBE681:
 4286              	.LBE683:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4287              		.loc 1 280 13 is_stmt 1 view .LVU1333
 4288              	.LBB684:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4289              		.loc 1 280 43 view .LVU1334
 4290              	.L241:
 281:GFX.cpp       **** 
 4291              		.loc 1 281 17 discriminator 2 view .LVU1335
 4292              	.LBB685:
 4293              	.LBI685:
 130:Frame.h       ****         R = Color.m_R;
 4294              		.loc 2 130 17 discriminator 2 view .LVU1336
 4295              	.LBB686:
 131:Frame.h       ****         G = Color.m_G;
 4296              		.loc 2 131 9 discriminator 2 view .LVU1337
 4297              	.LBE686:
 4298              	.LBE685:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4299              		.loc 1 280 13 is_stmt 0 discriminator 2 view .LVU1338
 4300 0178 0135     		adds	r5, r5, #1
 4301              	.LVL366:
 4302              	.LBB689:
 4303              	.LBB687:
 131:Frame.h       ****         G = Color.m_G;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 111


 4304              		.loc 2 131 11 discriminator 2 view .LVU1339
 4305 017a 00F8084B 		strb	r4, [r0], #8
 4306              	.LVL367:
 132:Frame.h       ****         B = Color.m_B;
 4307              		.loc 2 132 9 is_stmt 1 discriminator 2 view .LVU1340
 134:Frame.h       ****     }
 4308              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1341
 4309 017e 0121     		movs	r1, #1
 4310 0180 50F8042C 		ldr	r2, [r0, #-4]
 4311              	.LBE687:
 4312              	.LBE689:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4313              		.loc 1 280 43 discriminator 2 view .LVU1342
 4314 0184 5D45     		cmp	r5, fp
 4315              	.LBB690:
 4316              	.LBB688:
 132:Frame.h       ****         B = Color.m_B;
 4317              		.loc 2 132 11 discriminator 2 view .LVU1343
 4318 0186 00F807EC 		strb	lr, [r0, #-7]
 133:Frame.h       ****         *m_pChange = true;
 4319              		.loc 2 133 9 is_stmt 1 discriminator 2 view .LVU1344
 133:Frame.h       ****         *m_pChange = true;
 4320              		.loc 2 133 11 is_stmt 0 discriminator 2 view .LVU1345
 4321 018a 00F806CC 		strb	ip, [r0, #-6]
 134:Frame.h       ****     }
 4322              		.loc 2 134 9 is_stmt 1 discriminator 2 view .LVU1346
 134:Frame.h       ****     }
 4323              		.loc 2 134 20 is_stmt 0 discriminator 2 view .LVU1347
 4324 018e 1170     		strb	r1, [r2]
 4325              	.LVL368:
 134:Frame.h       ****     }
 4326              		.loc 2 134 20 discriminator 2 view .LVU1348
 4327              	.LBE688:
 4328              	.LBE690:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4329              		.loc 1 280 13 is_stmt 1 discriminator 2 view .LVU1349
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4330              		.loc 1 280 43 discriminator 2 view .LVU1350
 4331 0190 F2DD     		ble	.L241
 4332              	.LVL369:
 4333              	.L238:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4334              		.loc 1 280 43 is_stmt 0 discriminator 2 view .LVU1351
 4335              	.LBE684:
 283:GFX.cpp       ****             m -= 8 * y;
 4336              		.loc 1 283 13 is_stmt 1 view .LVU1352
 284:GFX.cpp       ****         }
 4337              		.loc 1 284 15 is_stmt 0 view .LVU1353
 4338 0192 019A     		ldr	r2, [sp, #4]
 283:GFX.cpp       ****             m -= 8 * y;
 4339              		.loc 1 283 14 view .LVU1354
 4340 0194 013B     		subs	r3, r3, #1
 4341              	.LVL370:
 284:GFX.cpp       ****         }
 4342              		.loc 1 284 13 is_stmt 1 view .LVU1355
 284:GFX.cpp       ****         }
 4343              		.loc 1 284 15 is_stmt 0 view .LVU1356
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 112


 4344 0196 A2EBC302 		sub	r2, r2, r3, lsl #3
 4345 019a 0192     		str	r2, [sp, #4]
 4346              	.LVL371:
 284:GFX.cpp       ****         }
 4347              		.loc 1 284 15 view .LVU1357
 4348              	.LBE666:
 4349 019c A0E7     		b	.L234
 4350              	.LVL372:
 4351              	.L259:
 4352              	.LBB693:
 4353              	.LBB691:
 4354              	.LBB682:
 210:Frame.h       ****     } 
 4355              		.loc 2 210 9 is_stmt 1 view .LVU1358
 210:Frame.h       ****     } 
 4356              		.loc 2 210 27 is_stmt 0 view .LVU1359
 4357 019e 0699     		ldr	r1, [sp, #24]
 4358 01a0 01FB0200 		mla	r0, r1, r2, r0
 210:Frame.h       ****     } 
 4359              		.loc 2 210 39 view .LVU1360
 4360 01a4 029A     		ldr	r2, [sp, #8]
 4361              	.LVL373:
 210:Frame.h       ****     } 
 4362              		.loc 2 210 39 view .LVU1361
 4363 01a6 02EBC000 		add	r0, r2, r0, lsl #3
 4364              	.LVL374:
 210:Frame.h       ****     } 
 4365              		.loc 2 210 39 view .LVU1362
 4366              	.LBE682:
 4367              	.LBE691:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4368              		.loc 1 280 13 is_stmt 1 view .LVU1363
 4369              	.LBB692:
 280:GFX.cpp       ****                 pFrame++->set(Color);
 4370              		.loc 1 280 43 view .LVU1364
 4371 01aa E5E7     		b	.L241
 4372              	.LBE692:
 4373              	.LBE693:
 4374              	.LBE696:
 4375              	.LBE700:
 4376              		.cfi_endproc
 4377              	.LFE2638:
 4379              		.section	.text._ZN4cGFX15drawR8G8B8ImageEttttPKh,"ax",%progbits
 4380              		.align	1
 4381              		.p2align 2,,3
 4382              		.global	_ZN4cGFX15drawR8G8B8ImageEttttPKh
 4383              		.syntax unified
 4384              		.thumb
 4385              		.thumb_func
 4387              	_ZN4cGFX15drawR8G8B8ImageEttttPKh:
 4388              	.LVL375:
 4389              	.LFB2639:
 291:GFX.cpp       **** 
 292:GFX.cpp       **** //-----------------------------------------------------------------------------------
 293:GFX.cpp       **** // Tracer une image 8bits par couleurs
 294:GFX.cpp       **** void cGFX::drawR8G8B8Image(uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, const uint8_t *pImg){
 4390              		.loc 1 294 98 view -0
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 113


 4391              		.cfi_startproc
 4392              		@ args = 8, pretend = 0, frame = 8
 4393              		@ frame_needed = 0, uses_anonymous_args = 0
 4394              		.loc 1 294 98 is_stmt 0 view .LVU1366
 4395 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4396              		.cfi_def_cfa_offset 36
 4397              		.cfi_offset 4, -36
 4398              		.cfi_offset 5, -32
 4399              		.cfi_offset 6, -28
 4400              		.cfi_offset 7, -24
 4401              		.cfi_offset 8, -20
 4402              		.cfi_offset 9, -16
 4403              		.cfi_offset 10, -12
 4404              		.cfi_offset 11, -8
 4405              		.cfi_offset 14, -4
 4406 0004 83B0     		sub	sp, sp, #12
 4407              		.cfi_def_cfa_offset 48
 4408              		.loc 1 294 98 view .LVU1367
 4409 0006 BDF83080 		ldrh	r8, [sp, #48]
 295:GFX.cpp       ****     RGB *pFrame;
 4410              		.loc 1 295 5 is_stmt 1 view .LVU1368
 296:GFX.cpp       ****     RGB *pEndLigne;
 4411              		.loc 1 296 5 view .LVU1369
 297:GFX.cpp       ****     
 298:GFX.cpp       ****     for (uint16_t PosY = y; PosY < (y+dy); PosY++){
 4412              		.loc 1 298 5 view .LVU1370
 4413              	.LVL376:
 294:GFX.cpp       ****     RGB *pFrame;
 4414              		.loc 1 294 98 is_stmt 0 view .LVU1371
 4415 000a 0D9E     		ldr	r6, [sp, #52]
 4416              	.LVL377:
 4417              	.LBB709:
 4418              		.loc 1 298 34 is_stmt 1 view .LVU1372
 4419              		.loc 1 298 38 is_stmt 0 view .LVU1373
 4420 000c 9044     		add	r8, r8, r2
 4421              		.loc 1 298 34 view .LVU1374
 4422 000e 9045     		cmp	r8, r2
 4423 0010 4CDD     		ble	.L264
 4424 0012 B0F85C90 		ldrh	r9, [r0, #92]
 299:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 300:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 4425              		.loc 1 300 27 view .LVU1375
 4426 0016 0B44     		add	r3, r3, r1
 4427              	.LVL378:
 4428              		.loc 1 300 27 view .LVU1376
 4429 0018 B0F85EA0 		ldrh	r10, [r0, #94]
 4430 001c 476D     		ldr	r7, [r0, #84]
 4431              	.LBB710:
 4432              	.LBB711:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4433              		.loc 2 208 26 view .LVU1377
 4434 001e 09F1FF30 		add	r0, r9, #-1
 4435              	.LVL379:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4436              		.loc 2 208 26 view .LVU1378
 4437              	.LBE711:
 4438              	.LBE710:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 114


 4439              		.loc 1 300 27 view .LVU1379
 4440 0022 9BB2     		uxth	r3, r3
 4441              	.LBB718:
 4442              	.LBB712:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4443              		.loc 2 208 26 view .LVU1380
 4444 0024 80B2     		uxth	r0, r0
 4445              	.LBE712:
 4446              	.LBE718:
 4447              	.LBB719:
 4448              	.LBB720:
 210:Frame.h       ****     } 
 4449              		.loc 2 210 26 view .LVU1381
 4450 0026 4B45     		cmp	r3, r9
 4451 0028 28BF     		it	cs
 4452 002a 0346     		movcs	r3, r0
 4453              	.LBE720:
 4454              	.LBE719:
 4455              	.LBB725:
 4456              	.LBB713:
 4457 002c 4945     		cmp	r1, r9
 4458 002e 34BF     		ite	cc
 4459 0030 8B46     		movcc	fp, r1
 4460 0032 8346     		movcs	fp, r0
 4461              	.LBE713:
 4462              	.LBE725:
 4463              	.LBB726:
 4464              	.LBB721:
 4465 0034 0093     		str	r3, [sp]
 4466              	.LBE721:
 4467              	.LBE726:
 4468              	.LBB727:
 4469              	.LBB714:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4470              		.loc 2 209 27 view .LVU1382
 4471 0036 0AF1FF33 		add	r3, r10, #-1
 4472 003a 9BB2     		uxth	r3, r3
 4473 003c 0193     		str	r3, [sp, #4]
 4474              	.LVL380:
 4475              	.L270:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4476              		.loc 2 209 27 view .LVU1383
 4477              	.LBE714:
 4478              	.LBE727:
 299:GFX.cpp       ****         pEndLigne = getPtr(x+dx, PosY);
 4479              		.loc 1 299 9 is_stmt 1 view .LVU1384
 4480              	.LBB728:
 4481              	.LBI710:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 4482              		.loc 2 207 17 view .LVU1385
 4483              	.LBB715:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4484              		.loc 2 208 9 view .LVU1386
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4485              		.loc 2 209 9 view .LVU1387
 4486 003e 0199     		ldr	r1, [sp, #4]
 4487              	.LBE715:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 115


 4488              	.LBE728:
 4489              	.LBB729:
 4490              	.LBB722:
 210:Frame.h       ****     } 
 4491              		.loc 2 210 27 is_stmt 0 view .LVU1388
 4492 0040 0098     		ldr	r0, [sp]
 4493              	.LBE722:
 4494              	.LBE729:
 4495              	.LBB730:
 4496              	.LBB716:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4497              		.loc 2 209 9 view .LVU1389
 4498 0042 5245     		cmp	r2, r10
 4499 0044 38BF     		it	cc
 4500 0046 1146     		movcc	r1, r2
 4501              	.LVL381:
 210:Frame.h       ****     } 
 4502              		.loc 2 210 9 is_stmt 1 view .LVU1390
 210:Frame.h       ****     } 
 4503              		.loc 2 210 30 is_stmt 0 view .LVU1391
 4504 0048 09FB01F1 		mul	r1, r9, r1
 210:Frame.h       ****     } 
 4505              		.loc 2 210 27 view .LVU1392
 4506 004c 0BEB0103 		add	r3, fp, r1
 4507              	.LBE716:
 4508              	.LBE730:
 4509              	.LBB731:
 4510              	.LBB723:
 4511 0050 0144     		add	r1, r1, r0
 4512              	.LBE723:
 4513              	.LBE731:
 4514              	.LBB732:
 4515              	.LBB717:
 210:Frame.h       ****     } 
 4516              		.loc 2 210 39 view .LVU1393
 4517 0052 07EBC303 		add	r3, r7, r3, lsl #3
 4518              	.LVL382:
 210:Frame.h       ****     } 
 4519              		.loc 2 210 39 view .LVU1394
 4520              	.LBE717:
 4521              	.LBE732:
 4522              		.loc 1 300 9 is_stmt 1 view .LVU1395
 4523              	.LBB733:
 4524              	.LBI719:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 4525              		.loc 2 207 17 view .LVU1396
 4526              	.LBB724:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4527              		.loc 2 208 9 view .LVU1397
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4528              		.loc 2 209 9 view .LVU1398
 210:Frame.h       ****     } 
 4529              		.loc 2 210 9 view .LVU1399
 210:Frame.h       ****     } 
 4530              		.loc 2 210 39 is_stmt 0 view .LVU1400
 4531 0056 07EBC101 		add	r1, r7, r1, lsl #3
 4532              	.LVL383:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 116


 210:Frame.h       ****     } 
 4533              		.loc 2 210 39 view .LVU1401
 4534              	.LBE724:
 4535              	.LBE733:
 301:GFX.cpp       ****         while (pFrame < pEndLigne){
 4536              		.loc 1 301 9 is_stmt 1 view .LVU1402
 4537              		.loc 1 301 23 view .LVU1403
 4538 005a 9942     		cmp	r1, r3
 4539 005c 22D9     		bls	.L267
 4540              		.loc 1 301 23 is_stmt 0 view .LVU1404
 4541 005e 481E     		subs	r0, r1, #1
 4542 0060 06F1060E 		add	lr, r6, #6
 4543 0064 F11C     		adds	r1, r6, #3
 4544              	.LVL384:
 4545              		.loc 1 301 23 view .LVU1405
 4546 0066 C01A     		subs	r0, r0, r3
 4547              	.LVL385:
 4548              		.loc 1 301 23 view .LVU1406
 4549 0068 0833     		adds	r3, r3, #8
 4550              	.LVL386:
 4551              		.loc 1 301 23 view .LVU1407
 4552 006a C008     		lsrs	r0, r0, #3
 4553 006c 00EB4004 		add	r4, r0, r0, lsl #1
 4554 0070 A644     		add	lr, lr, r4
 4555              	.LVL387:
 4556              	.L268:
 302:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 4557              		.loc 1 302 13 is_stmt 1 view .LVU1408
 4558              		.loc 1 302 24 is_stmt 0 view .LVU1409
 4559 0072 11F8025C 		ldrb	r5, [r1, #-2]	@ zero_extendqisi2
 301:GFX.cpp       ****         while (pFrame < pEndLigne){
 4560              		.loc 1 301 23 view .LVU1410
 4561 0076 0331     		adds	r1, r1, #3
 4562              	.LVL388:
 4563              		.loc 1 302 24 view .LVU1411
 4564 0078 11F8064C 		ldrb	r4, [r1, #-6]	@ zero_extendqisi2
 4565              	.LVL389:
 301:GFX.cpp       ****         while (pFrame < pEndLigne){
 4566              		.loc 1 301 23 view .LVU1412
 4567 007c 0833     		adds	r3, r3, #8
 4568              	.LVL390:
 4569              		.loc 1 302 24 view .LVU1413
 4570 007e 11F804CC 		ldrb	ip, [r1, #-4]	@ zero_extendqisi2
 4571              	.LVL391:
 4572              	.LBB734:
 4573              	.LBI734:
 109:Frame.h       ****         m_R = R;
 4574              		.loc 2 109 5 is_stmt 1 view .LVU1414
 4575              	.LBE734:
 4576              	.LBE709:
 110:Frame.h       ****         m_G = G;
 4577              		.loc 2 110 9 view .LVU1415
 111:Frame.h       ****         m_B = B;
 4578              		.loc 2 111 9 view .LVU1416
 112:Frame.h       ****         m_Trans = Trans;
 4579              		.loc 2 112 9 view .LVU1417
 113:Frame.h       ****     }
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 117


 4580              		.loc 2 113 9 view .LVU1418
 4581              	.LBB739:
 4582              	.LBB735:
 4583              	.LBI735:
 130:Frame.h       ****         R = Color.m_R;
 4584              		.loc 2 130 17 view .LVU1419
 4585              	.LBB736:
 131:Frame.h       ****         G = Color.m_G;
 4586              		.loc 2 131 9 view .LVU1420
 4587              	.LBE736:
 4588              	.LBE735:
 301:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 4589              		.loc 1 301 23 is_stmt 0 view .LVU1421
 4590 0082 7145     		cmp	r1, lr
 4591              	.LBB738:
 4592              	.LBB737:
 132:Frame.h       ****         B = Color.m_B;
 4593              		.loc 2 132 11 view .LVU1422
 4594 0084 03F80F5C 		strb	r5, [r3, #-15]
 134:Frame.h       ****     }
 4595              		.loc 2 134 20 view .LVU1423
 4596 0088 4FF00105 		mov	r5, #1
 4597              	.LVL392:
 133:Frame.h       ****         *m_pChange = true;
 4598              		.loc 2 133 11 view .LVU1424
 4599 008c 03F80E4C 		strb	r4, [r3, #-14]
 134:Frame.h       ****     }
 4600              		.loc 2 134 20 view .LVU1425
 4601 0090 53F80C4C 		ldr	r4, [r3, #-12]
 4602              	.LVL393:
 131:Frame.h       ****         G = Color.m_G;
 4603              		.loc 2 131 11 view .LVU1426
 4604 0094 03F810CC 		strb	ip, [r3, #-16]
 132:Frame.h       ****         B = Color.m_B;
 4605              		.loc 2 132 9 is_stmt 1 view .LVU1427
 133:Frame.h       ****         *m_pChange = true;
 4606              		.loc 2 133 9 view .LVU1428
 134:Frame.h       ****     }
 4607              		.loc 2 134 9 view .LVU1429
 134:Frame.h       ****     }
 4608              		.loc 2 134 20 is_stmt 0 view .LVU1430
 4609 0098 2570     		strb	r5, [r4]
 4610              	.LVL394:
 134:Frame.h       ****     }
 4611              		.loc 2 134 20 view .LVU1431
 4612              	.LBE737:
 4613              	.LBE738:
 303:GFX.cpp       ****             pImg = pImg+3;
 4614              		.loc 1 303 13 is_stmt 1 view .LVU1432
 304:GFX.cpp       ****             pFrame++;
 4615              		.loc 1 304 13 view .LVU1433
 301:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 4616              		.loc 1 301 9 view .LVU1434
 301:GFX.cpp       ****             pFrame->set(cColor((*(pImg+2)),(*(pImg+1)),(*(pImg))));
 4617              		.loc 1 301 23 view .LVU1435
 4618 009a EAD1     		bne	.L268
 303:GFX.cpp       ****             pImg = pImg+3;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 118


 4619              		.loc 1 303 18 is_stmt 0 view .LVU1436
 4620 009c 2844     		add	r0, r0, r5
 4621 009e 00EB4000 		add	r0, r0, r0, lsl #1
 4622 00a2 0644     		add	r6, r6, r0
 4623              	.LVL395:
 4624              	.L267:
 298:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 4625              		.loc 1 298 5 is_stmt 1 discriminator 2 view .LVU1437
 4626 00a4 0132     		adds	r2, r2, #1
 4627              	.LVL396:
 298:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 4628              		.loc 1 298 5 is_stmt 0 discriminator 2 view .LVU1438
 4629 00a6 92B2     		uxth	r2, r2
 4630              	.LVL397:
 298:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 4631              		.loc 1 298 34 is_stmt 1 discriminator 2 view .LVU1439
 4632 00a8 4245     		cmp	r2, r8
 4633 00aa C8DB     		blt	.L270
 4634              	.L264:
 298:GFX.cpp       ****         pFrame = getPtr(x, PosY);
 4635              		.loc 1 298 34 is_stmt 0 discriminator 2 view .LVU1440
 4636              	.LBE739:
 305:GFX.cpp       ****         }
 306:GFX.cpp       ****     }
 307:GFX.cpp       **** }
 4637              		.loc 1 307 1 view .LVU1441
 4638 00ac 03B0     		add	sp, sp, #12
 4639              		.cfi_def_cfa_offset 36
 4640              		@ sp needed
 4641 00ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4642              		.loc 1 307 1 view .LVU1442
 4643              		.cfi_endproc
 4644              	.LFE2639:
 4646 00b2 00BF     		.section	.text._ZN4cGFX8drawCharEcb,"ax",%progbits
 4647              		.align	1
 4648              		.p2align 2,,3
 4649              		.global	_ZN4cGFX8drawCharEcb
 4650              		.syntax unified
 4651              		.thumb
 4652              		.thumb_func
 4654              	_ZN4cGFX8drawCharEcb:
 4655              	.LVL398:
 4656              	.LFB2640:
 308:GFX.cpp       **** // ==========================================================================
 309:GFX.cpp       **** // Dessiner du texte
 310:GFX.cpp       **** 
 311:GFX.cpp       **** //-----------------------------------------------------------------------------------
 312:GFX.cpp       **** // Dessiner le caractère c
 313:GFX.cpp       **** void cGFX::drawChar(const char c, bool Erase){
 4657              		.loc 1 313 46 is_stmt 1 view -0
 4658              		.cfi_startproc
 4659              		@ args = 0, pretend = 0, frame = 40
 4660              		@ frame_needed = 0, uses_anonymous_args = 0
 314:GFX.cpp       ****     const GFXglyph *pTable = m_pFont->getGFXglyph(c);
 4661              		.loc 1 314 5 view .LVU1444
 313:GFX.cpp       ****     const GFXglyph *pTable = m_pFont->getGFXglyph(c);
 4662              		.loc 1 313 46 is_stmt 0 view .LVU1445
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 119


 4663 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4664              		.cfi_def_cfa_offset 36
 4665              		.cfi_offset 4, -36
 4666              		.cfi_offset 5, -32
 4667              		.cfi_offset 6, -28
 4668              		.cfi_offset 7, -24
 4669              		.cfi_offset 8, -20
 4670              		.cfi_offset 9, -16
 4671              		.cfi_offset 10, -12
 4672              		.cfi_offset 11, -8
 4673              		.cfi_offset 14, -4
 4674              		.loc 1 314 30 view .LVU1446
 4675 0004 D0F8DC40 		ldr	r4, [r0, #220]
 4676              	.LVL399:
 4677              	.LBB751:
 4678              	.LBI751:
 101:GFX.h         ****     {
 4679              		.loc 3 101 28 is_stmt 1 view .LVU1447
 4680              	.LBB752:
 103:GFX.h         ****     }
 4681              		.loc 3 103 9 view .LVU1448
 4682              	.LBE752:
 4683              	.LBE751:
 313:GFX.cpp       ****     const GFXglyph *pTable = m_pFont->getGFXglyph(c);
 4684              		.loc 1 313 46 is_stmt 0 view .LVU1449
 4685 0008 8BB0     		sub	sp, sp, #44
 4686              		.cfi_def_cfa_offset 80
 4687              	.LBB756:
 4688              	.LBB753:
 103:GFX.h         ****     }
 4689              		.loc 3 103 46 view .LVU1450
 4690 000a D4E90035 		ldrd	r3, r5, [r4]
 103:GFX.h         ****     }
 4691              		.loc 3 103 41 view .LVU1451
 4692 000e 1C89     		ldrh	r4, [r3, #8]
 4693              	.LVL400:
 103:GFX.h         ****     }
 4694              		.loc 3 103 30 view .LVU1452
 4695 0010 091B     		subs	r1, r1, r4
 4696              	.LVL401:
 103:GFX.h         ****     }
 4697              		.loc 3 103 30 view .LVU1453
 4698              	.LBE753:
 4699              	.LBE756:
 4700              	.LBB757:
 4701              	.LBB758:
 110:GFX.h         ****     }
 4702              		.loc 3 110 74 view .LVU1454
 4703 0012 1C68     		ldr	r4, [r3]
 4704              	.LBE758:
 4705              	.LBE757:
 4706              	.LBB761:
 4707              	.LBB754:
 103:GFX.h         ****     }
 4708              		.loc 3 103 46 view .LVU1455
 4709 0014 05EBC106 		add	r6, r5, r1, lsl #3
 4710              	.LBE754:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 120


 4711              	.LBE761:
 4712              	.LBB762:
 4713              	.LBB759:
 110:GFX.h         ****     }
 4714              		.loc 3 110 62 view .LVU1456
 4715 0018 35F83130 		ldrh	r3, [r5, r1, lsl #3]
 110:GFX.h         ****     }
 4716              		.loc 3 110 74 view .LVU1457
 4717 001c 04EB030E 		add	lr, r4, r3
 4718              	.LBE759:
 4719              	.LBE762:
 315:GFX.cpp       ****     const uint8_t *pBitmap = m_pFont->getBitmap(c);
 316:GFX.cpp       ****     uint8_t BitMap = *pBitmap++;
 4720              		.loc 1 316 30 view .LVU1458
 4721 0020 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4722              	.LBB763:
 317:GFX.cpp       ****     uint8_t numBit = 0;
 318:GFX.cpp       ****     uint8_t indexX;
 319:GFX.cpp       ****     RGB * pFrame;
 320:GFX.cpp       ****     
 321:GFX.cpp       ****     for (uint8_t indexY=0; indexY < pTable->height; indexY ++){
 4723              		.loc 1 321 45 view .LVU1459
 4724 0022 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 4725              	.LBE763:
 4726              	.LBB778:
 4727              	.LBB755:
 103:GFX.h         ****     }
 4728              		.loc 3 103 46 view .LVU1460
 4729 0024 0996     		str	r6, [sp, #36]
 4730              	.LVL402:
 103:GFX.h         ****     }
 4731              		.loc 3 103 46 view .LVU1461
 4732              	.LBE755:
 4733              	.LBE778:
 315:GFX.cpp       ****     const uint8_t *pBitmap = m_pFont->getBitmap(c);
 4734              		.loc 1 315 5 is_stmt 1 view .LVU1462
 4735              	.LBB779:
 4736              	.LBI757:
 108:GFX.h         ****     {
 4737              		.loc 3 108 27 view .LVU1463
 4738              	.LBB760:
 110:GFX.h         ****     }
 4739              		.loc 3 110 9 view .LVU1464
 110:GFX.h         ****     }
 4740              		.loc 3 110 9 is_stmt 0 view .LVU1465
 4741              	.LBE760:
 4742              	.LBE779:
 316:GFX.cpp       ****     uint8_t numBit = 0;
 4743              		.loc 1 316 5 is_stmt 1 view .LVU1466
 317:GFX.cpp       ****     uint8_t indexX;
 4744              		.loc 1 317 5 view .LVU1467
 318:GFX.cpp       ****     RGB * pFrame;
 4745              		.loc 1 318 5 view .LVU1468
 319:GFX.cpp       ****     
 4746              		.loc 1 319 5 view .LVU1469
 4747              		.loc 1 321 5 view .LVU1470
 4748              	.LBB780:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 121


 4749              		.loc 1 321 35 view .LVU1471
 4750 0026 002B     		cmp	r3, #0
 4751 0028 7FD0     		beq	.L275
 322:GFX.cpp       ****         indexX = 0;
 323:GFX.cpp       ****         pFrame = getPtr(m_xCursor+pTable->xOffset, indexY+m_yCursor+pTable->yOffset);
 4752              		.loc 1 323 77 is_stmt 0 view .LVU1472
 4753 002a 96F90650 		ldrsb	r5, [r6, #6]
 4754 002e 013B     		subs	r3, r3, #1
 4755 0030 B0F8DA40 		ldrh	r4, [r0, #218]
 4756 0034 0EF1010E 		add	lr, lr, #1
 4757              	.LVL403:
 4758              		.loc 1 323 77 view .LVU1473
 4759 0038 B0F85C80 		ldrh	r8, [r0, #92]
 4760              	.LBE780:
 317:GFX.cpp       ****     uint8_t indexX;
 4761              		.loc 1 317 13 view .LVU1474
 4762 003c 4FF0000C 		mov	ip, #0
 4763 0040 2544     		add	r5, r5, r4
 4764              	.LBB781:
 4765              		.loc 1 323 25 view .LVU1475
 4766 0042 B0F8D840 		ldrh	r4, [r0, #216]
 4767 0046 B0F85E70 		ldrh	r7, [r0, #94]
 4768 004a ADB2     		uxth	r5, r5
 4769 004c 0894     		str	r4, [sp, #32]
 4770 004e 0297     		str	r7, [sp, #8]
 4771 0050 55FA83F3 		uxtab	r3, r5, r3
 4772 0054 9BB2     		uxth	r3, r3
 4773 0056 0693     		str	r3, [sp, #24]
 4774              		.loc 1 323 43 view .LVU1476
 4775 0058 96F90530 		ldrsb	r3, [r6, #5]
 324:GFX.cpp       ****         while (indexX < pTable->width){
 4776              		.loc 1 324 33 view .LVU1477
 4777 005c B678     		ldrb	r6, [r6, #2]	@ zero_extendqisi2
 4778              	.LVL404:
 323:GFX.cpp       ****         while (indexX < pTable->width){
 4779              		.loc 1 323 24 view .LVU1478
 4780 005e 2344     		add	r3, r3, r4
 4781              	.LBB764:
 4782              	.LBB765:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4783              		.loc 2 208 26 view .LVU1479
 4784 0060 08F1FF34 		add	r4, r8, #-1
 4785              	.LBE765:
 4786              	.LBE764:
 4787              		.loc 1 324 33 view .LVU1480
 4788 0064 0596     		str	r6, [sp, #20]
 323:GFX.cpp       ****         while (indexX < pTable->width){
 4789              		.loc 1 323 24 view .LVU1481
 4790 0066 9BB2     		uxth	r3, r3
 4791              	.LBB768:
 4792              	.LBB766:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4793              		.loc 2 208 26 view .LVU1482
 4794 0068 A4B2     		uxth	r4, r4
 210:Frame.h       ****     } 
 4795              		.loc 2 210 26 view .LVU1483
 4796 006a 4345     		cmp	r3, r8
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 122


 4797 006c 28BF     		it	cs
 4798 006e 2346     		movcs	r3, r4
 4799 0070 0493     		str	r3, [sp, #16]
 4800 0072 731E     		subs	r3, r6, #1
 4801 0074 DBB2     		uxtb	r3, r3
 4802 0076 DB00     		lsls	r3, r3, #3
 4803 0078 0793     		str	r3, [sp, #28]
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4804              		.loc 2 209 27 view .LVU1484
 4805 007a 7B1E     		subs	r3, r7, #1
 4806 007c 9BB2     		uxth	r3, r3
 4807 007e 0393     		str	r3, [sp, #12]
 4808 0080 436D     		ldr	r3, [r0, #84]
 4809 0082 0193     		str	r3, [sp, #4]
 4810              	.LVL405:
 4811              	.L284:
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4812              		.loc 2 209 27 view .LVU1485
 4813              	.LBE766:
 4814              	.LBE768:
 322:GFX.cpp       ****         pFrame = getPtr(m_xCursor+pTable->xOffset, indexY+m_yCursor+pTable->yOffset);
 4815              		.loc 1 322 9 is_stmt 1 view .LVU1486
 323:GFX.cpp       ****         while (indexX < pTable->width){
 4816              		.loc 1 323 9 view .LVU1487
 4817              	.LBB769:
 4818              	.LBI764:
 207:Frame.h       ****         if(x>=m_Width) x = m_Width-1;
 4819              		.loc 2 207 17 view .LVU1488
 4820              	.LBB767:
 208:Frame.h       ****         if(y>=m_Height) y = m_Height-1;
 4821              		.loc 2 208 9 view .LVU1489
 209:Frame.h       ****         return &m_pFrame[x+(y*m_Width)];
 4822              		.loc 2 209 9 view .LVU1490
 4823 0084 DDE90243 		ldrd	r4, r3, [sp, #8]
 4824 0088 A542     		cmp	r5, r4
 4825 008a 38BF     		it	cc
 4826 008c 2B46     		movcc	r3, r5
 4827              	.LVL406:
 210:Frame.h       ****     } 
 4828              		.loc 2 210 9 view .LVU1491
 210:Frame.h       ****     } 
 4829              		.loc 2 210 27 is_stmt 0 view .LVU1492
 4830 008e 049C     		ldr	r4, [sp, #16]
 4831 0090 08FB0343 		mla	r3, r8, r3, r4
 4832              	.LVL407:
 210:Frame.h       ****     } 
 4833              		.loc 2 210 39 view .LVU1493
 4834 0094 019C     		ldr	r4, [sp, #4]
 4835 0096 04EBC303 		add	r3, r4, r3, lsl #3
 4836              	.LVL408:
 210:Frame.h       ****     } 
 4837              		.loc 2 210 39 view .LVU1494
 4838              	.LBE767:
 4839              	.LBE769:
 4840              		.loc 1 324 9 is_stmt 1 view .LVU1495
 4841              		.loc 1 324 23 view .LVU1496
 4842 009a 059C     		ldr	r4, [sp, #20]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 123


 4843 009c 002C     		cmp	r4, #0
 4844 009e 3DD0     		beq	.L277
 4845              		.loc 1 324 23 is_stmt 0 view .LVU1497
 4846 00a0 079C     		ldr	r4, [sp, #28]
 4847 00a2 1034     		adds	r4, r4, #16
 4848 00a4 1C44     		add	r4, r4, r3
 4849 00a6 0833     		adds	r3, r3, #8
 4850              	.LVL409:
 4851              		.loc 1 324 23 view .LVU1498
 4852 00a8 11E0     		b	.L282
 4853              	.LVL410:
 4854              	.L278:
 325:GFX.cpp       ****             if((BitMap&0x80) != 0){
 326:GFX.cpp       ****                 if(Erase){
 327:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 328:GFX.cpp       ****                 }else{
 329:GFX.cpp       ****                     pFrame->set(m_TextFrontColor);
 330:GFX.cpp       ****                 }
 331:GFX.cpp       ****             }
 332:GFX.cpp       ****             pFrame++;
 4855              		.loc 1 332 13 is_stmt 1 view .LVU1499
 333:GFX.cpp       ****             numBit++;
 4856              		.loc 1 333 13 view .LVU1500
 334:GFX.cpp       ****             if(numBit > 7){
 335:GFX.cpp       ****                 numBit = 0;
 4857              		.loc 1 335 17 view .LVU1501
 336:GFX.cpp       ****                 BitMap = *pBitmap++;
 4858              		.loc 1 336 17 view .LVU1502
 337:GFX.cpp       ****             }else{
 338:GFX.cpp       ****                 BitMap <<= 1 ;
 4859              		.loc 1 338 17 view .LVU1503
 333:GFX.cpp       ****             if(numBit > 7){
 4860              		.loc 1 333 19 is_stmt 0 view .LVU1504
 4861 00aa 0CF1010C 		add	ip, ip, #1
 4862              		.loc 1 338 24 view .LVU1505
 4863 00ae 4900     		lsls	r1, r1, #1
 4864              	.LVL411:
 336:GFX.cpp       ****                 BitMap = *pBitmap++;
 4865              		.loc 1 336 34 view .LVU1506
 4866 00b0 7646     		mov	r6, lr
 4867              	.LVL412:
 333:GFX.cpp       ****             if(numBit > 7){
 4868              		.loc 1 333 19 view .LVU1507
 4869 00b2 5FFA8CFC 		uxtb	ip, ip
 4870              	.LVL413:
 334:GFX.cpp       ****                 numBit = 0;
 4871              		.loc 1 334 13 is_stmt 1 view .LVU1508
 4872              		.loc 1 338 24 is_stmt 0 view .LVU1509
 4873 00b6 C9B2     		uxtb	r1, r1
 4874              	.LVL414:
 334:GFX.cpp       ****                 numBit = 0;
 4875              		.loc 1 334 13 view .LVU1510
 4876 00b8 BCF1070F 		cmp	ip, #7
 4877 00bc 04D9     		bls	.L281
 336:GFX.cpp       ****             }else{
 4878              		.loc 1 336 24 view .LVU1511
 4879 00be 16F8011B 		ldrb	r1, [r6], #1	@ zero_extendqisi2
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 124


 4880              	.LVL415:
 335:GFX.cpp       ****                 BitMap = *pBitmap++;
 4881              		.loc 1 335 24 view .LVU1512
 4882 00c2 4FF0000C 		mov	ip, #0
 4883              	.LVL416:
 336:GFX.cpp       ****             }else{
 4884              		.loc 1 336 34 view .LVU1513
 4885 00c6 B646     		mov	lr, r6
 4886              	.LVL417:
 4887              	.L281:
 339:GFX.cpp       ****             }
 340:GFX.cpp       ****             indexX++;
 4888              		.loc 1 340 13 is_stmt 1 view .LVU1514
 324:GFX.cpp       ****             if((BitMap&0x80) != 0){
 4889              		.loc 1 324 9 view .LVU1515
 324:GFX.cpp       ****             if((BitMap&0x80) != 0){
 4890              		.loc 1 324 23 view .LVU1516
 4891 00c8 0833     		adds	r3, r3, #8
 4892              	.LVL418:
 324:GFX.cpp       ****             if((BitMap&0x80) != 0){
 4893              		.loc 1 324 23 is_stmt 0 view .LVU1517
 4894 00ca A342     		cmp	r3, r4
 4895 00cc 26D0     		beq	.L277
 4896              	.LVL419:
 4897              	.L282:
 325:GFX.cpp       ****                 if(Erase){
 4898              		.loc 1 325 13 is_stmt 1 view .LVU1518
 326:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 4899              		.loc 1 326 17 view .LVU1519
 325:GFX.cpp       ****                 if(Erase){
 4900              		.loc 1 325 13 is_stmt 0 view .LVU1520
 4901 00ce 0E06     		lsls	r6, r1, #24
 4902 00d0 EBD5     		bpl	.L278
 327:GFX.cpp       ****                 }else{
 4903              		.loc 1 327 21 is_stmt 1 view .LVU1521
 4904              	.LVL420:
 329:GFX.cpp       ****                 }
 4905              		.loc 1 329 21 view .LVU1522
 4906              	.LBB770:
 4907              	.LBB771:
 134:Frame.h       ****     }
 4908              		.loc 2 134 20 is_stmt 0 view .LVU1523
 4909 00d2 4FF00109 		mov	r9, #1
 4910              	.LBE771:
 4911              	.LBE770:
 4912              	.LBB773:
 4913              	.LBB774:
 4914 00d6 4F46     		mov	r7, r9
 4915              	.LBE774:
 4916              	.LBE773:
 326:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 4917              		.loc 1 326 17 view .LVU1524
 4918 00d8 82B1     		cbz	r2, .L279
 4919 00da 90F8E4B0 		ldrb	fp, [r0, #228]	@ zero_extendqisi2
 4920              	.LVL421:
 326:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 4921              		.loc 1 326 17 view .LVU1525
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 125


 4922 00de 90F8E5A0 		ldrb	r10, [r0, #229]	@ zero_extendqisi2
 4923              	.LVL422:
 326:GFX.cpp       ****                     pFrame->set(m_TextBackColor);
 4924              		.loc 1 326 17 view .LVU1526
 4925 00e2 90F8E670 		ldrb	r7, [r0, #230]	@ zero_extendqisi2
 4926              	.LVL423:
 4927              	.LBB776:
 4928              	.LBI770:
 130:Frame.h       ****         R = Color.m_R;
 4929              		.loc 2 130 17 is_stmt 1 view .LVU1527
 4930              	.LBB772:
 131:Frame.h       ****         G = Color.m_G;
 4931              		.loc 2 131 9 view .LVU1528
 134:Frame.h       ****     }
 4932              		.loc 2 134 20 is_stmt 0 view .LVU1529
 4933 00e6 53F8046C 		ldr	r6, [r3, #-4]
 131:Frame.h       ****         G = Color.m_G;
 4934              		.loc 2 131 11 view .LVU1530
 4935 00ea 03F808BC 		strb	fp, [r3, #-8]
 132:Frame.h       ****         B = Color.m_B;
 4936              		.loc 2 132 9 is_stmt 1 view .LVU1531
 132:Frame.h       ****         B = Color.m_B;
 4937              		.loc 2 132 11 is_stmt 0 view .LVU1532
 4938 00ee 03F807AC 		strb	r10, [r3, #-7]
 133:Frame.h       ****         *m_pChange = true;
 4939              		.loc 2 133 9 is_stmt 1 view .LVU1533
 133:Frame.h       ****         *m_pChange = true;
 4940              		.loc 2 133 11 is_stmt 0 view .LVU1534
 4941 00f2 03F8067C 		strb	r7, [r3, #-6]
 134:Frame.h       ****     }
 4942              		.loc 2 134 9 is_stmt 1 view .LVU1535
 134:Frame.h       ****     }
 4943              		.loc 2 134 20 is_stmt 0 view .LVU1536
 4944 00f6 86F80090 		strb	r9, [r6]
 4945              	.LVL424:
 134:Frame.h       ****     }
 4946              		.loc 2 134 20 view .LVU1537
 4947              	.LBE772:
 4948              	.LBE776:
 4949 00fa D6E7     		b	.L278
 4950              	.LVL425:
 4951              	.L279:
 134:Frame.h       ****     }
 4952              		.loc 2 134 20 view .LVU1538
 4953 00fc 90F8E0B0 		ldrb	fp, [r0, #224]	@ zero_extendqisi2
 4954              	.LVL426:
 134:Frame.h       ****     }
 4955              		.loc 2 134 20 view .LVU1539
 4956 0100 90F8E1A0 		ldrb	r10, [r0, #225]	@ zero_extendqisi2
 4957              	.LVL427:
 134:Frame.h       ****     }
 4958              		.loc 2 134 20 view .LVU1540
 4959 0104 90F8E290 		ldrb	r9, [r0, #226]	@ zero_extendqisi2
 4960              	.LVL428:
 4961              	.LBB777:
 4962              	.LBI773:
 130:Frame.h       ****         R = Color.m_R;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 126


 4963              		.loc 2 130 17 is_stmt 1 view .LVU1541
 4964              	.LBB775:
 131:Frame.h       ****         G = Color.m_G;
 4965              		.loc 2 131 9 view .LVU1542
 134:Frame.h       ****     }
 4966              		.loc 2 134 20 is_stmt 0 view .LVU1543
 4967 0108 53F8046C 		ldr	r6, [r3, #-4]
 131:Frame.h       ****         G = Color.m_G;
 4968              		.loc 2 131 11 view .LVU1544
 4969 010c 03F808BC 		strb	fp, [r3, #-8]
 132:Frame.h       ****         B = Color.m_B;
 4970              		.loc 2 132 9 is_stmt 1 view .LVU1545
 132:Frame.h       ****         B = Color.m_B;
 4971              		.loc 2 132 11 is_stmt 0 view .LVU1546
 4972 0110 03F807AC 		strb	r10, [r3, #-7]
 133:Frame.h       ****         *m_pChange = true;
 4973              		.loc 2 133 9 is_stmt 1 view .LVU1547
 133:Frame.h       ****         *m_pChange = true;
 4974              		.loc 2 133 11 is_stmt 0 view .LVU1548
 4975 0114 03F8069C 		strb	r9, [r3, #-6]
 134:Frame.h       ****     }
 4976              		.loc 2 134 9 is_stmt 1 view .LVU1549
 134:Frame.h       ****     }
 4977              		.loc 2 134 20 is_stmt 0 view .LVU1550
 4978 0118 3770     		strb	r7, [r6]
 4979              	.LVL429:
 134:Frame.h       ****     }
 4980              		.loc 2 134 20 view .LVU1551
 4981 011a C6E7     		b	.L278
 4982              	.LVL430:
 4983              	.L277:
 134:Frame.h       ****     }
 4984              		.loc 2 134 20 view .LVU1552
 4985              	.LBE775:
 4986              	.LBE777:
 321:GFX.cpp       ****         indexX = 0;
 4987              		.loc 1 321 5 is_stmt 1 discriminator 2 view .LVU1553
 321:GFX.cpp       ****         indexX = 0;
 4988              		.loc 1 321 35 discriminator 2 view .LVU1554
 4989 011c 069C     		ldr	r4, [sp, #24]
 4990 011e 6B1C     		adds	r3, r5, #1
 4991 0120 A542     		cmp	r5, r4
 4992 0122 9BB2     		uxth	r3, r3
 4993 0124 04D0     		beq	.L283
 4994 0126 1D46     		mov	r5, r3
 4995 0128 ACE7     		b	.L284
 4996              	.LVL431:
 4997              	.L275:
 321:GFX.cpp       ****         indexX = 0;
 4998              		.loc 1 321 35 is_stmt 0 discriminator 2 view .LVU1555
 4999              	.LBE781:
 341:GFX.cpp       ****         }
 342:GFX.cpp       ****     }  
 343:GFX.cpp       ****     m_xCursor += pTable->xAdvance;
 5000              		.loc 1 343 15 view .LVU1556
 5001 012a B0F8D830 		ldrh	r3, [r0, #216]
 5002 012e 0893     		str	r3, [sp, #32]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 127


 5003              	.LVL432:
 5004              	.L283:
 5005              		.loc 1 343 5 is_stmt 1 view .LVU1557
 5006              		.loc 1 343 26 is_stmt 0 view .LVU1558
 5007 0130 099B     		ldr	r3, [sp, #36]
 5008              		.loc 1 343 15 view .LVU1559
 5009 0132 089A     		ldr	r2, [sp, #32]
 5010              	.LVL433:
 5011              		.loc 1 343 26 view .LVU1560
 5012 0134 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5013              		.loc 1 343 15 view .LVU1561
 5014 0136 1A44     		add	r2, r2, r3
 5015 0138 A0F8D820 		strh	r2, [r0, #216]	@ movhi
 344:GFX.cpp       **** }
 5016              		.loc 1 344 1 view .LVU1562
 5017 013c 0BB0     		add	sp, sp, #44
 5018              		.cfi_def_cfa_offset 36
 5019              		@ sp needed
 5020 013e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5021              		.loc 1 344 1 view .LVU1563
 5022              		.cfi_endproc
 5023              	.LFE2640:
 5025 0142 00BF     		.section	.text._ZN4cGFX8drawTextEPKcb,"ax",%progbits
 5026              		.align	1
 5027              		.p2align 2,,3
 5028              		.global	_ZN4cGFX8drawTextEPKcb
 5029              		.syntax unified
 5030              		.thumb
 5031              		.thumb_func
 5033              	_ZN4cGFX8drawTextEPKcb:
 5034              	.LVL434:
 5035              	.LFB2641:
 345:GFX.cpp       **** 
 346:GFX.cpp       **** //-----------------------------------------------------------------------------------
 347:GFX.cpp       **** // Dessiner le texte
 348:GFX.cpp       **** void cGFX::drawText(const char *Text, bool Erase){
 5036              		.loc 1 348 50 is_stmt 1 view -0
 5037              		.cfi_startproc
 5038              		@ args = 0, pretend = 0, frame = 0
 5039              		@ frame_needed = 0, uses_anonymous_args = 0
 349:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 5040              		.loc 1 349 5 view .LVU1565
 348:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 5041              		.loc 1 348 50 is_stmt 0 view .LVU1566
 5042 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5043              		.cfi_def_cfa_offset 36
 5044              		.cfi_offset 4, -36
 5045              		.cfi_offset 5, -32
 5046              		.cfi_offset 6, -28
 5047              		.cfi_offset 7, -24
 5048              		.cfi_offset 8, -20
 5049              		.cfi_offset 9, -16
 5050              		.cfi_offset 10, -12
 5051              		.cfi_offset 11, -8
 5052              		.cfi_offset 14, -4
 5053 0004 0646     		mov	r6, r0
 5054              		.loc 1 349 39 view .LVU1567
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 128


 5055 0006 D0F8DC00 		ldr	r0, [r0, #220]
 5056              	.LVL435:
 5057              	.LBB790:
 5058              	.LBI790:
  79:GFX.h         ****     {
 5059              		.loc 3 79 20 is_stmt 1 view .LVU1568
 5060              	.LBB791:
  81:GFX.h         ****     }
 5061              		.loc 3 81 9 view .LVU1569
 5062              	.LBE791:
 5063              	.LBE790:
 348:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 5064              		.loc 1 348 50 is_stmt 0 view .LVU1570
 5065 000a 0C46     		mov	r4, r1
 5066 000c 1746     		mov	r7, r2
 5067              	.LBB794:
 5068              	.LBB792:
  81:GFX.h         ****     }
 5069              		.loc 3 81 17 view .LVU1571
 5070 000e 90F80880 		ldrb	r8, [r0, #8]	@ zero_extendqisi2
 5071              	.LVL436:
  81:GFX.h         ****     }
 5072              		.loc 3 81 17 view .LVU1572
 5073              	.LBE792:
 5074              	.LBE794:
 348:GFX.cpp       ****     drawFillRect(m_xCursor, m_yCursor-m_pFont->getPosHeight(),m_pFont->getTextWidth(Text), m_pFont-
 5075              		.loc 1 348 50 view .LVU1573
 5076 0012 83B0     		sub	sp, sp, #12
 5077              		.cfi_def_cfa_offset 48
 5078              		.loc 1 349 17 view .LVU1574
 5079 0014 B6F8DA20 		ldrh	r2, [r6, #218]
 5080              	.LVL437:
 5081              	.LBB795:
 5082              	.LBB793:
  81:GFX.h         ****     }
 5083              		.loc 3 81 17 view .LVU1575
 5084 0018 C8F10005 		rsb	r5, r8, #0
 5085              	.LBE793:
 5086              	.LBE795:
 5087              	.LBB796:
 5088              	.LBB797:
  63:GFX.h         ****         {
 5089              		.loc 3 63 16 view .LVU1576
 5090 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 5091              	.LBE797:
 5092              	.LBE796:
 5093              		.loc 1 349 17 view .LVU1577
 5094 001e B6F8D810 		ldrh	r1, [r6, #216]
 5095              	.LVL438:
 5096              		.loc 1 349 60 view .LVU1578
 5097 0022 EDB2     		uxtb	r5, r5
 5098              		.loc 1 349 17 view .LVU1579
 5099 0024 521B     		subs	r2, r2, r5
 5100 0026 92B2     		uxth	r2, r2
 5101              	.LVL439:
 5102              	.LBB808:
 5103              	.LBI796:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 129


  59:GFX.h         ****     {
 5104              		.loc 3 59 14 is_stmt 1 view .LVU1580
 5105              	.LBB806:
  61:GFX.h         ****         uint16_t result = 0;
 5106              		.loc 3 61 9 view .LVU1581
  62:GFX.h         ****         while (*pText != '\0')
 5107              		.loc 3 62 9 view .LVU1582
  63:GFX.h         ****         {
 5108              		.loc 3 63 9 view .LVU1583
  63:GFX.h         ****         {
 5109              		.loc 3 63 23 view .LVU1584
 5110 0028 BBB1     		cbz	r3, .L293
 5111              	.LBB798:
 5112              	.LBB799:
  54:GFX.h         ****     }
 5113              		.loc 3 54 18 is_stmt 0 view .LVU1585
 5114 002a D0F800C0 		ldr	ip, [r0]
  54:GFX.h         ****     }
 5115              		.loc 3 54 50 view .LVU1586
 5116 002e 2546     		mov	r5, r4
 5117              	.LBE799:
 5118              	.LBE798:
  62:GFX.h         ****         while (*pText != '\0')
 5119              		.loc 3 62 18 view .LVU1587
 5120 0030 4FF0000B 		mov	fp, #0
 5121              	.LBB803:
 5122              	.LBB800:
  54:GFX.h         ****     }
 5123              		.loc 3 54 27 view .LVU1588
 5124 0034 DCF804A0 		ldr	r10, [ip, #4]
  54:GFX.h         ****     }
 5125              		.loc 3 54 50 view .LVU1589
 5126 0038 BCF80890 		ldrh	r9, [ip, #8]
 5127              	.LVL440:
 5128              	.L294:
  54:GFX.h         ****     }
 5129              		.loc 3 54 50 view .LVU1590
 5130              	.LBE800:
 5131              	.LBE803:
  65:GFX.h         ****         }
 5132              		.loc 3 65 13 is_stmt 1 view .LVU1591
 5133              	.LBB804:
 5134              	.LBI798:
  52:GFX.h         ****     {
 5135              		.loc 3 52 13 view .LVU1592
 5136              	.LBB801:
  54:GFX.h         ****     }
 5137              		.loc 3 54 9 view .LVU1593
  54:GFX.h         ****     }
 5138              		.loc 3 54 39 is_stmt 0 view .LVU1594
 5139 003c A3EB090E 		sub	lr, r3, r9
 5140              	.LBE801:
 5141              	.LBE804:
  63:GFX.h         ****         {
 5142              		.loc 3 63 16 view .LVU1595
 5143 0040 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 5144              	.LVL441:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 130


 5145              	.LBB805:
 5146              	.LBB802:
  54:GFX.h         ****     }
 5147              		.loc 3 54 59 view .LVU1596
 5148 0044 0AEBCE0E 		add	lr, r10, lr, lsl #3
 5149              	.LBE802:
 5150              	.LBE805:
  65:GFX.h         ****         }
 5151              		.loc 3 65 20 view .LVU1597
 5152 0048 9EF804C0 		ldrb	ip, [lr, #4]	@ zero_extendqisi2
 5153 004c DC44     		add	ip, ip, fp
 5154 004e 1FFA8CFB 		uxth	fp, ip
 5155              	.LVL442:
  63:GFX.h         ****         {
 5156              		.loc 3 63 9 is_stmt 1 view .LVU1598
  63:GFX.h         ****         {
 5157              		.loc 3 63 23 view .LVU1599
 5158 0052 002B     		cmp	r3, #0
 5159 0054 F2D1     		bne	.L294
 5160              	.LBE806:
 5161              	.LBE808:
 5162              		.loc 1 349 17 is_stmt 0 view .LVU1600
 5163 0056 0FFA8BF3 		sxth	r3, fp
 5164              	.LVL443:
 5165              	.L293:
 5166              	.LBB809:
 5167              	.LBB807:
  67:GFX.h         ****     }
 5168              		.loc 3 67 9 is_stmt 1 view .LVU1601
  67:GFX.h         ****     }
 5169              		.loc 3 67 9 is_stmt 0 view .LVU1602
 5170              	.LBE807:
 5171              	.LBE809:
 5172              	.LBB810:
 5173              	.LBI810:
  72:GFX.h         ****     {
 5174              		.loc 3 72 20 is_stmt 1 view .LVU1603
 5175              	.LBB811:
  74:GFX.h         ****     }
 5176              		.loc 3 74 9 view .LVU1604
  74:GFX.h         ****     }
 5177              		.loc 3 74 9 is_stmt 0 view .LVU1605
 5178              	.LBE811:
 5179              	.LBE810:
 5180              		.loc 1 349 17 view .LVU1606
 5181 005a D6F8E450 		ldr	r5, [r6, #228]
 5182 005e 0195     		str	r5, [sp, #4]
 5183              	.LBB813:
 5184              	.LBB812:
  74:GFX.h         ****     }
 5185              		.loc 3 74 30 view .LVU1607
 5186 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 5187 0062 A0EB0808 		sub	r8, r0, r8
 5188              	.LBE812:
 5189              	.LBE813:
 5190              		.loc 1 349 17 view .LVU1608
 5191 0066 5FFA88F0 		uxtb	r0, r8
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 131


 5192 006a 0090     		str	r0, [sp]
 5193 006c 3046     		mov	r0, r6
 5194 006e FFF7FEFF 		bl	_ZN4cGFX12drawFillRectEttss6cColor
 5195              	.LVL444:
 350:GFX.cpp       ****     const char *pText = Text;
 5196              		.loc 1 350 5 is_stmt 1 view .LVU1609
 351:GFX.cpp       ****     while(*pText != '\0'){
 5197              		.loc 1 351 5 view .LVU1610
 5198              		.loc 1 351 18 view .LVU1611
 5199              		.loc 1 351 11 is_stmt 0 view .LVU1612
 5200 0072 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5201              		.loc 1 351 18 view .LVU1613
 5202 0074 39B1     		cbz	r1, .L292
 5203              	.LVL445:
 5204              	.L295:
 352:GFX.cpp       ****         drawChar(*pText++, Erase);
 5205              		.loc 1 352 9 is_stmt 1 view .LVU1614
 5206              		.loc 1 352 17 is_stmt 0 view .LVU1615
 5207 0076 3A46     		mov	r2, r7
 5208 0078 3046     		mov	r0, r6
 5209 007a FFF7FEFF 		bl	_ZN4cGFX8drawCharEcb
 5210              	.LVL446:
 351:GFX.cpp       ****     while(*pText != '\0'){
 5211              		.loc 1 351 5 is_stmt 1 view .LVU1616
 351:GFX.cpp       ****     while(*pText != '\0'){
 5212              		.loc 1 351 18 view .LVU1617
 351:GFX.cpp       ****     while(*pText != '\0'){
 5213              		.loc 1 351 11 is_stmt 0 view .LVU1618
 5214 007e 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 5215              	.LVL447:
 351:GFX.cpp       ****     while(*pText != '\0'){
 5216              		.loc 1 351 18 view .LVU1619
 5217 0082 0029     		cmp	r1, #0
 5218 0084 F7D1     		bne	.L295
 5219              	.L292:
 353:GFX.cpp       ****     }
 354:GFX.cpp       **** }
 5220              		.loc 1 354 1 view .LVU1620
 5221 0086 03B0     		add	sp, sp, #12
 5222              		.cfi_def_cfa_offset 36
 5223              		@ sp needed
 5224 0088 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5225              		.loc 1 354 1 view .LVU1621
 5226              		.cfi_endproc
 5227              	.LFE2641:
 5229              		.section	.text._ZN4cGFX13drawTransTextEPKcb,"ax",%progbits
 5230              		.align	1
 5231              		.p2align 2,,3
 5232              		.global	_ZN4cGFX13drawTransTextEPKcb
 5233              		.syntax unified
 5234              		.thumb
 5235              		.thumb_func
 5237              	_ZN4cGFX13drawTransTextEPKcb:
 5238              	.LVL448:
 5239              	.LFB2642:
 355:GFX.cpp       **** 
 356:GFX.cpp       **** //-----------------------------------------------------------------------------------
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 132


 357:GFX.cpp       **** // Dessiner le texte sans couleur d'arriere plan
 358:GFX.cpp       **** void cGFX::drawTransText(const char *Text, bool Erase){
 5240              		.loc 1 358 55 is_stmt 1 view -0
 5241              		.cfi_startproc
 5242              		@ args = 0, pretend = 0, frame = 0
 5243              		@ frame_needed = 0, uses_anonymous_args = 0
 359:GFX.cpp       ****     const char *pText = Text;
 5244              		.loc 1 359 5 view .LVU1623
 358:GFX.cpp       ****     const char *pText = Text;
 5245              		.loc 1 358 55 is_stmt 0 view .LVU1624
 5246 0000 38B5     		push	{r3, r4, r5, lr}
 5247              		.cfi_def_cfa_offset 16
 5248              		.cfi_offset 3, -16
 5249              		.cfi_offset 4, -12
 5250              		.cfi_offset 5, -8
 5251              		.cfi_offset 14, -4
 358:GFX.cpp       ****     const char *pText = Text;
 5252              		.loc 1 358 55 view .LVU1625
 5253 0002 0C46     		mov	r4, r1
 5254              	.LVL449:
 360:GFX.cpp       ****     while(*pText != '\0'){
 5255              		.loc 1 360 5 is_stmt 1 view .LVU1626
 5256              		.loc 1 360 18 view .LVU1627
 5257              		.loc 1 360 11 is_stmt 0 view .LVU1628
 5258 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5259              	.LVL450:
 5260              		.loc 1 360 18 view .LVU1629
 5261 0006 39B1     		cbz	r1, .L304
 5262 0008 1546     		mov	r5, r2
 5263              	.LVL451:
 5264              	.L306:
 361:GFX.cpp       ****         drawChar(*pText++, Erase);
 5265              		.loc 1 361 9 is_stmt 1 view .LVU1630
 5266              		.loc 1 361 17 is_stmt 0 view .LVU1631
 5267 000a 2A46     		mov	r2, r5
 5268 000c FFF7FEFF 		bl	_ZN4cGFX8drawCharEcb
 5269              	.LVL452:
 360:GFX.cpp       ****     while(*pText != '\0'){
 5270              		.loc 1 360 5 is_stmt 1 view .LVU1632
 360:GFX.cpp       ****     while(*pText != '\0'){
 5271              		.loc 1 360 18 view .LVU1633
 360:GFX.cpp       ****     while(*pText != '\0'){
 5272              		.loc 1 360 11 is_stmt 0 view .LVU1634
 5273 0010 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 5274              	.LVL453:
 360:GFX.cpp       ****     while(*pText != '\0'){
 5275              		.loc 1 360 18 view .LVU1635
 5276 0014 0029     		cmp	r1, #0
 5277 0016 F8D1     		bne	.L306
 5278              	.L304:
 362:GFX.cpp       ****     }
 363:GFX.cpp       **** }
 5279              		.loc 1 363 1 view .LVU1636
 5280 0018 38BD     		pop	{r3, r4, r5, pc}
 5281              		.loc 1 363 1 view .LVU1637
 5282              		.cfi_endproc
 5283              	.LFE2642:
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 133


 5285 001a 00BF     		.section	.text._ZN4cGFX9drawGhostEtttt6cColorS0_,"ax",%progbits
 5286              		.align	1
 5287              		.p2align 2,,3
 5288              		.global	_ZN4cGFX9drawGhostEtttt6cColorS0_
 5289              		.syntax unified
 5290              		.thumb
 5291              		.thumb_func
 5293              	_ZN4cGFX9drawGhostEtttt6cColorS0_:
 5294              	.LVL454:
 5295              	.LFB2643:
 364:GFX.cpp       **** 
 365:GFX.cpp       **** void cGFX::drawGhost(uint16_t x, uint16_t y, uint16_t width, uint16_t height, cColor bodyColor, cCo
 366:GFX.cpp       **** {
 5296              		.loc 1 366 1 is_stmt 1 view -0
 5297              		.cfi_startproc
 5298              		@ args = 12, pretend = 0, frame = 24
 5299              		@ frame_needed = 0, uses_anonymous_args = 0
 367:GFX.cpp       ****     // Draw the ghost's body (main circle)
 368:GFX.cpp       ****     uint16_t radius = width / 2;
 369:GFX.cpp       ****     drawFillCircle(x + radius, y + radius, radius, bodyColor);
 5300              		.loc 1 369 19 is_stmt 0 view .LVU1639
 5301 0000 02EB5302 		add	r2, r2, r3, lsr #1
 5302              	.LVL455:
 366:GFX.cpp       ****     // Draw the ghost's body (main circle)
 5303              		.loc 1 366 1 view .LVU1640
 5304 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5305              		.cfi_def_cfa_offset 36
 5306              		.cfi_offset 4, -36
 5307              		.cfi_offset 5, -32
 5308              		.cfi_offset 6, -28
 5309              		.cfi_offset 7, -24
 5310              		.cfi_offset 8, -20
 5311              		.cfi_offset 9, -16
 5312              		.cfi_offset 10, -12
 5313              		.cfi_offset 11, -8
 5314              		.cfi_offset 14, -4
 5315 0008 1D46     		mov	r5, r3
 5316 000a 89B0     		sub	sp, sp, #36
 5317              		.cfi_def_cfa_offset 72
 5318              		.loc 1 369 19 view .LVU1641
 5319 000c 94B2     		uxth	r4, r2
 366:GFX.cpp       ****     // Draw the ghost's body (main circle)
 5320              		.loc 1 366 1 view .LVU1642
 5321 000e 8846     		mov	r8, r1
 368:GFX.cpp       ****     drawFillCircle(x + radius, y + radius, radius, bodyColor);
 5322              		.loc 1 368 14 view .LVU1643
 5323 0010 5A08     		lsrs	r2, r3, #1
 5324              		.loc 1 369 19 view .LVU1644
 5325 0012 139B     		ldr	r3, [sp, #76]
 5326              	.LVL456:
 5327              		.loc 1 369 19 view .LVU1645
 5328 0014 01EB5501 		add	r1, r1, r5, lsr #1
 5329              	.LVL457:
 366:GFX.cpp       ****     // Draw the ghost's body (main circle)
 5330              		.loc 1 366 1 view .LVU1646
 5331 0018 0746     		mov	r7, r0
 368:GFX.cpp       ****     drawFillCircle(x + radius, y + radius, radius, bodyColor);
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 134


 5332              		.loc 1 368 5 is_stmt 1 view .LVU1647
 5333              	.LVL458:
 5334              		.loc 1 369 5 view .LVU1648
 5335              		.loc 1 369 19 is_stmt 0 view .LVU1649
 5336 001a 9146     		mov	r9, r2
 5337 001c 0093     		str	r3, [sp]
 5338 001e 89B2     		uxth	r1, r1
 5339 0020 1346     		mov	r3, r2
 5340 0022 2246     		mov	r2, r4
 366:GFX.cpp       ****     // Draw the ghost's body (main circle)
 5341              		.loc 1 366 1 view .LVU1650
 5342 0024 BDF84860 		ldrh	r6, [sp, #72]
 5343              		.loc 1 369 19 view .LVU1651
 5344 0028 FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5345              	.LVL459:
 370:GFX.cpp       **** 
 371:GFX.cpp       ****     // Draw the ghost's bottom part (rectangular)
 372:GFX.cpp       ****     drawFillRect(x, y + radius, width, height - radius, bodyColor);
 5346              		.loc 1 372 5 is_stmt 1 view .LVU1652
 5347              		.loc 1 372 47 is_stmt 0 view .LVU1653
 5348 002c 4B46     		mov	r3, r9
 5349              		.loc 1 372 17 view .LVU1654
 5350 002e 2246     		mov	r2, r4
 5351 0030 4146     		mov	r1, r8
 5352              		.loc 1 372 47 view .LVU1655
 5353 0032 F61A     		subs	r6, r6, r3
 5354              		.loc 1 372 17 view .LVU1656
 5355 0034 139B     		ldr	r3, [sp, #76]
 5356 0036 3846     		mov	r0, r7
 5357              		.loc 1 372 47 view .LVU1657
 5358 0038 CDF81090 		str	r9, [sp, #16]
 5359              		.loc 1 372 17 view .LVU1658
 5360 003c 36B2     		sxth	r6, r6
 5361 003e 0193     		str	r3, [sp, #4]
 5362 0040 2BB2     		sxth	r3, r5
 5363              	.LBB814:
 373:GFX.cpp       **** 
 374:GFX.cpp       ****     // Draw the ghost's eyes (small circles)
 375:GFX.cpp       ****     uint16_t eyeRadius = width / 10;
 376:GFX.cpp       ****     drawFillCircle(x + radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 377:GFX.cpp       ****     drawFillCircle(x + 3 * radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 378:GFX.cpp       **** 
 379:GFX.cpp       **** 
 380:GFX.cpp       ****     // Draw the ghost's arms (thick lines)
 381:GFX.cpp       ****     uint16_t armLength = width / 2; // Length of the arms
 382:GFX.cpp       ****     uint16_t armThickness = 5; // Thickness of the arms
 383:GFX.cpp       ****     
 384:GFX.cpp       ****     // Left arm
 385:GFX.cpp       ****     for (uint16_t i = 0; i < armThickness; ++i)
 386:GFX.cpp       ****     {
 387:GFX.cpp       ****         drawLine(x, y + radius + i, x - armLength, y + radius - armLength / 4 + i, bodyColor);
 5364              		.loc 1 387 17 view .LVU1659
 5365 0042 A346     		mov	fp, r4
 5366              	.LBE814:
 372:GFX.cpp       **** 
 5367              		.loc 1 372 17 view .LVU1660
 5368 0044 0096     		str	r6, [sp]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 135


 5369              	.LBB815:
 5370              		.loc 1 387 63 view .LVU1661
 5371 0046 A4EBD506 		sub	r6, r4, r5, lsr #3
 5372              	.LBE815:
 372:GFX.cpp       **** 
 5373              		.loc 1 372 17 view .LVU1662
 5374 004a FFF7FEFF 		bl	_ZN4cGFX12drawFillRectEttss6cColor
 5375              	.LVL460:
 375:GFX.cpp       ****     drawFillCircle(x + radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5376              		.loc 1 375 5 is_stmt 1 view .LVU1663
 375:GFX.cpp       ****     drawFillCircle(x + radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5377              		.loc 1 375 14 is_stmt 0 view .LVU1664
 5378 004e 584B     		ldr	r3, .L319
 376:GFX.cpp       ****     drawFillCircle(x + 3 * radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5379              		.loc 1 376 19 view .LVU1665
 5380 0050 08EB9501 		add	r1, r8, r5, lsr #2
 5381 0054 3846     		mov	r0, r7
 375:GFX.cpp       ****     drawFillCircle(x + radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5382              		.loc 1 375 14 view .LVU1666
 5383 0056 A3FB0523 		umull	r2, r3, r3, r5
 376:GFX.cpp       ****     drawFillCircle(x + 3 * radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5384              		.loc 1 376 19 view .LVU1667
 5385 005a 149A     		ldr	r2, [sp, #80]
 5386 005c 89B2     		uxth	r1, r1
 5387 005e 0092     		str	r2, [sp]
 5388 0060 A4EB1312 		sub	r2, r4, r3, lsr #4
 375:GFX.cpp       ****     drawFillCircle(x + radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5389              		.loc 1 375 14 view .LVU1668
 5390 0064 DB08     		lsrs	r3, r3, #3
 5391              	.LVL461:
 376:GFX.cpp       ****     drawFillCircle(x + 3 * radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5392              		.loc 1 376 5 is_stmt 1 view .LVU1669
 376:GFX.cpp       ****     drawFillCircle(x + 3 * radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5393              		.loc 1 376 19 is_stmt 0 view .LVU1670
 5394 0066 92B2     		uxth	r2, r2
 5395 0068 0593     		str	r3, [sp, #20]
 5396              	.LBB816:
 5397              		.loc 1 387 63 view .LVU1671
 5398 006a 1FFA86FA 		uxth	r10, r6
 5399              	.LBE816:
 376:GFX.cpp       ****     drawFillCircle(x + 3 * radius / 2, y + radius - eyeRadius / 2, eyeRadius, eyeColor);
 5400              		.loc 1 376 19 view .LVU1672
 5401 006e 0392     		str	r2, [sp, #12]
 5402 0070 FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5403              	.LVL462:
 377:GFX.cpp       **** 
 5404              		.loc 1 377 5 is_stmt 1 view .LVU1673
 377:GFX.cpp       **** 
 5405              		.loc 1 377 19 is_stmt 0 view .LVU1674
 5406 0074 1498     		ldr	r0, [sp, #80]
 5407 0076 059B     		ldr	r3, [sp, #20]
 5408 0078 0090     		str	r0, [sp]
 5409 007a 3846     		mov	r0, r7
 377:GFX.cpp       **** 
 5410              		.loc 1 377 26 view .LVU1675
 5411 007c DDE90321 		ldrd	r2, r1, [sp, #12]
 5412 0080 01EB4101 		add	r1, r1, r1, lsl #1
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 136


 377:GFX.cpp       **** 
 5413              		.loc 1 377 19 view .LVU1676
 5414 0084 08EB5101 		add	r1, r8, r1, lsr #1
 5415 0088 89B2     		uxth	r1, r1
 5416 008a FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5417              	.LVL463:
 381:GFX.cpp       ****     uint16_t armThickness = 5; // Thickness of the arms
 5418              		.loc 1 381 5 is_stmt 1 view .LVU1677
 382:GFX.cpp       ****     
 5419              		.loc 1 382 5 view .LVU1678
 385:GFX.cpp       ****     {
 5420              		.loc 1 385 5 view .LVU1679
 5421              	.LBB817:
 385:GFX.cpp       ****     {
 5422              		.loc 1 385 28 view .LVU1680
 5423 008e 631D     		adds	r3, r4, #5
 5424              		.loc 1 387 17 is_stmt 0 view .LVU1681
 5425 0090 0499     		ldr	r1, [sp, #16]
 5426              		.loc 1 387 75 view .LVU1682
 5427 0092 EA08     		lsrs	r2, r5, #3
 5428 0094 9BB2     		uxth	r3, r3
 5429              		.loc 1 387 17 view .LVU1683
 5430 0096 0595     		str	r5, [sp, #20]
 5431              	.LVL464:
 5432              		.loc 1 387 17 view .LVU1684
 5433 0098 A8EB0109 		sub	r9, r8, r1
 5434 009c 0796     		str	r6, [sp, #28]
 5435 009e 1D46     		mov	r5, r3
 5436              	.LVL465:
 5437              		.loc 1 387 17 view .LVU1685
 5438 00a0 2646     		mov	r6, r4
 5439 00a2 1FFA89F9 		uxth	r9, r9
 5440 00a6 1446     		mov	r4, r2
 5441 00a8 0693     		str	r3, [sp, #24]
 5442              		.loc 1 387 75 view .LVU1686
 5443 00aa 0392     		str	r2, [sp, #12]
 5444              	.LVL466:
 5445              	.L313:
 5446              		.loc 1 387 9 is_stmt 1 discriminator 2 view .LVU1687
 5447              		.loc 1 387 17 is_stmt 0 discriminator 2 view .LVU1688
 5448 00ac 139B     		ldr	r3, [sp, #76]
 5449 00ae 5A46     		mov	r2, fp
 5450 00b0 4146     		mov	r1, r8
 5451 00b2 3846     		mov	r0, r7
 5452 00b4 0193     		str	r3, [sp, #4]
 5453 00b6 ABEB0403 		sub	r3, fp, r4
 385:GFX.cpp       ****     {
 5454              		.loc 1 385 28 discriminator 2 view .LVU1689
 5455 00ba 0BF1010B 		add	fp, fp, #1
 5456              		.loc 1 387 17 discriminator 2 view .LVU1690
 5457 00be 9BB2     		uxth	r3, r3
 385:GFX.cpp       ****     {
 5458              		.loc 1 385 28 discriminator 2 view .LVU1691
 5459 00c0 1FFA8BFB 		uxth	fp, fp
 5460              		.loc 1 387 17 discriminator 2 view .LVU1692
 5461 00c4 0093     		str	r3, [sp]
 5462 00c6 4B46     		mov	r3, r9
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 137


 5463 00c8 FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 5464              	.LVL467:
 385:GFX.cpp       ****     {
 5465              		.loc 1 385 5 is_stmt 1 discriminator 2 view .LVU1693
 385:GFX.cpp       ****     {
 5466              		.loc 1 385 28 discriminator 2 view .LVU1694
 5467 00cc AB45     		cmp	fp, r5
 5468 00ce EDD1     		bne	.L313
 5469              	.LBE817:
 388:GFX.cpp       ****     }
 389:GFX.cpp       ****     
 390:GFX.cpp       ****     // Fingers on the left arm
 391:GFX.cpp       ****     uint16_t leftArmX = x - armLength;
 5470              		.loc 1 391 5 view .LVU1695
 5471              	.LVL468:
 392:GFX.cpp       ****     uint16_t leftArmY = y + radius - armLength / 4;
 5472              		.loc 1 392 5 view .LVU1696
 393:GFX.cpp       ****     uint16_t fingerLength = armLength / 4;
 5473              		.loc 1 393 5 view .LVU1697
 394:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY - fingerLength / 2, bodyColor); 
 5474              		.loc 1 394 5 view .LVU1698
 5475              		.loc 1 394 13 is_stmt 0 view .LVU1699
 5476 00d0 059D     		ldr	r5, [sp, #20]
 5477 00d2 4946     		mov	r1, r9
 5478 00d4 039B     		ldr	r3, [sp, #12]
 5479 00d6 3846     		mov	r0, r7
 5480 00d8 AAEB1512 		sub	r2, r10, r5, lsr #4
 5481 00dc 3446     		mov	r4, r6
 5482 00de A9EB0303 		sub	r3, r9, r3
 5483 00e2 079E     		ldr	r6, [sp, #28]
 5484 00e4 92B2     		uxth	r2, r2
 5485 00e6 9BB2     		uxth	r3, r3
 5486 00e8 0592     		str	r2, [sp, #20]
 5487              	.LVL469:
 5488              		.loc 1 394 83 view .LVU1700
 5489 00ea 4FEA151B 		lsr	fp, r5, #4
 5490              		.loc 1 394 13 view .LVU1701
 5491 00ee 0092     		str	r2, [sp]
 5492              	.LBB818:
 395:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY, bodyColor); // Middle finger
 396:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY + fingerLength / 2, bodyColor); 
 397:GFX.cpp       **** 
 398:GFX.cpp       ****     // Right arm
 399:GFX.cpp       ****     for (uint16_t i = 0; i < armThickness; ++i)
 400:GFX.cpp       ****     {
 401:GFX.cpp       ****         drawLine(x + width, y + radius + i, x + width + armLength, y + radius - armLength / 4 + i, 
 5493              		.loc 1 401 17 view .LVU1702
 5494 00f0 4544     		add	r5, r5, r8
 5495              	.LBE818:
 394:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY - fingerLength / 2, bodyColor); 
 5496              		.loc 1 394 13 view .LVU1703
 5497 00f2 139A     		ldr	r2, [sp, #76]
 396:GFX.cpp       **** 
 5498              		.loc 1 396 13 view .LVU1704
 5499 00f4 D344     		add	fp, fp, r10
 394:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY - fingerLength / 2, bodyColor); 
 5500              		.loc 1 394 13 view .LVU1705
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 138


 5501 00f6 0793     		str	r3, [sp, #28]
 5502              	.LBB819:
 5503              		.loc 1 401 17 view .LVU1706
 5504 00f8 ADB2     		uxth	r5, r5
 5505              	.LBE819:
 394:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY - fingerLength / 2, bodyColor); 
 5506              		.loc 1 394 13 view .LVU1707
 5507 00fa 0192     		str	r2, [sp, #4]
 5508 00fc 5246     		mov	r2, r10
 5509 00fe FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 5510              	.LVL470:
 395:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY, bodyColor); // Middle finger
 5511              		.loc 1 395 5 is_stmt 1 view .LVU1708
 395:GFX.cpp       ****     drawLine(leftArmX, leftArmY, leftArmX - fingerLength, leftArmY, bodyColor); // Middle finger
 5512              		.loc 1 395 13 is_stmt 0 view .LVU1709
 5513 0102 139A     		ldr	r2, [sp, #76]
 5514 0104 4946     		mov	r1, r9
 5515 0106 079B     		ldr	r3, [sp, #28]
 5516 0108 3846     		mov	r0, r7
 5517 010a 0192     		str	r2, [sp, #4]
 5518 010c CDF800A0 		str	r10, [sp]
 5519 0110 5246     		mov	r2, r10
 5520 0112 FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 5521              	.LVL471:
 396:GFX.cpp       **** 
 5522              		.loc 1 396 5 is_stmt 1 view .LVU1710
 396:GFX.cpp       **** 
 5523              		.loc 1 396 13 is_stmt 0 view .LVU1711
 5524 0116 139A     		ldr	r2, [sp, #76]
 5525 0118 1FFA8BFB 		uxth	fp, fp
 5526 011c 4946     		mov	r1, r9
 5527 011e 0192     		str	r2, [sp, #4]
 5528 0120 3846     		mov	r0, r7
 5529 0122 5246     		mov	r2, r10
 5530 0124 CDF800B0 		str	fp, [sp]
 5531 0128 079B     		ldr	r3, [sp, #28]
 5532              	.LBB820:
 5533              		.loc 1 401 17 view .LVU1712
 5534 012a 07EE905A 		vmov	s15, r5	@ int
 5535              	.LBE820:
 396:GFX.cpp       **** 
 5536              		.loc 1 396 13 view .LVU1713
 5537 012e FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 5538              	.LVL472:
 399:GFX.cpp       ****     {
 5539              		.loc 1 399 5 is_stmt 1 view .LVU1714
 5540              	.LBB821:
 399:GFX.cpp       ****     {
 5541              		.loc 1 399 28 view .LVU1715
 5542              		.loc 1 401 17 is_stmt 0 view .LVU1716
 5543 0132 049A     		ldr	r2, [sp, #16]
 5544 0134 DDF80C80 		ldr	r8, [sp, #12]
 5545              		.loc 1 401 17 view .LVU1717
 5546 0138 2A44     		add	r2, r2, r5
 5547 013a CDF810B0 		str	fp, [sp, #16]
 5548 013e DDF818B0 		ldr	fp, [sp, #24]
 5549 0142 1FFA82F9 		uxth	r9, r2
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 139


 5550              	.LVL473:
 5551              	.L314:
 5552              		.loc 1 401 9 is_stmt 1 discriminator 2 view .LVU1718
 5553              		.loc 1 401 17 is_stmt 0 discriminator 2 view .LVU1719
 5554 0146 2246     		mov	r2, r4
 399:GFX.cpp       ****     {
 5555              		.loc 1 399 28 discriminator 2 view .LVU1720
 5556 0148 0134     		adds	r4, r4, #1
 5557              		.loc 1 401 17 discriminator 2 view .LVU1721
 5558 014a B6B2     		uxth	r6, r6
 5559 014c 139D     		ldr	r5, [sp, #76]
 399:GFX.cpp       ****     {
 5560              		.loc 1 399 28 discriminator 2 view .LVU1722
 5561 014e A4B2     		uxth	r4, r4
 5562              		.loc 1 401 17 discriminator 2 view .LVU1723
 5563 0150 4B46     		mov	r3, r9
 5564 0152 17EE901A 		vmov	r1, s15	@ int
 5565 0156 3846     		mov	r0, r7
 5566 0158 CDE90065 		strd	r6, r5, [sp]
 5567 015c FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 5568              	.LVL474:
 399:GFX.cpp       ****     {
 5569              		.loc 1 399 5 is_stmt 1 discriminator 2 view .LVU1724
 399:GFX.cpp       ****     {
 5570              		.loc 1 399 28 discriminator 2 view .LVU1725
 5571 0160 5C45     		cmp	r4, fp
 5572 0162 A4EB0806 		sub	r6, r4, r8
 5573 0166 EED1     		bne	.L314
 5574              	.LBE821:
 402:GFX.cpp       ****     }
 403:GFX.cpp       **** 
 404:GFX.cpp       ****     // Fingers on the right arm
 405:GFX.cpp       ****     uint16_t rightArmX = x + width + armLength;
 406:GFX.cpp       ****     uint16_t rightArmY = y + radius - armLength / 4;
 407:GFX.cpp       ****     drawLine(rightArmX, rightArmY, rightArmX + fingerLength, rightArmY - fingerLength / 2, bodyColo
 5575              		.loc 1 407 13 is_stmt 0 view .LVU1726
 5576 0168 139A     		ldr	r2, [sp, #76]
 5577 016a 4946     		mov	r1, r9
 5578 016c 3846     		mov	r0, r7
 5579 016e 0192     		str	r2, [sp, #4]
 5580 0170 5246     		mov	r2, r10
 5581 0172 DDE904B3 		ldrd	fp, r3, [sp, #16]
 5582 0176 0093     		str	r3, [sp]
 5583 0178 039B     		ldr	r3, [sp, #12]
 5584 017a 4B44     		add	r3, r3, r9
 5585 017c 9BB2     		uxth	r3, r3
 5586 017e 0393     		str	r3, [sp, #12]
 5587 0180 FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 5588              	.LVL475:
 408:GFX.cpp       ****     drawLine(rightArmX, rightArmY, rightArmX + fingerLength, rightArmY, bodyColor); // Middle finge
 5589              		.loc 1 408 5 is_stmt 1 view .LVU1727
 5590              		.loc 1 408 13 is_stmt 0 view .LVU1728
 5591 0184 139A     		ldr	r2, [sp, #76]
 5592 0186 039B     		ldr	r3, [sp, #12]
 5593 0188 4946     		mov	r1, r9
 5594 018a 3846     		mov	r0, r7
 5595 018c 0192     		str	r2, [sp, #4]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 140


 5596 018e CDF800A0 		str	r10, [sp]
 5597 0192 5246     		mov	r2, r10
 5598 0194 FFF7FEFF 		bl	_ZN4cGFX8drawLineEtttt6cColor
 5599              	.LVL476:
 409:GFX.cpp       ****     drawLine(rightArmX, rightArmY, rightArmX + fingerLength, rightArmY + fingerLength / 2, bodyColo
 5600              		.loc 1 409 5 is_stmt 1 view .LVU1729
 5601              		.loc 1 409 13 is_stmt 0 view .LVU1730
 5602 0198 039B     		ldr	r3, [sp, #12]
 5603 019a 5246     		mov	r2, r10
 5604 019c 4946     		mov	r1, r9
 5605 019e 3846     		mov	r0, r7
 5606 01a0 CDF848B0 		str	fp, [sp, #72]
 5607              	.LVL477:
 410:GFX.cpp       **** }
 5608              		.loc 1 410 1 view .LVU1731
 5609 01a4 09B0     		add	sp, sp, #36
 5610              		.cfi_def_cfa_offset 36
 5611              		@ sp needed
 5612 01a6 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5613              		.cfi_restore 14
 5614              		.cfi_restore 11
 5615              		.cfi_restore 10
 5616              		.cfi_restore 9
 5617              		.cfi_restore 8
 5618              		.cfi_restore 7
 5619              		.cfi_restore 6
 5620              		.cfi_restore 5
 5621              		.cfi_restore 4
 5622              		.cfi_def_cfa_offset 0
 5623              	.LVL478:
 409:GFX.cpp       ****     drawLine(rightArmX, rightArmY, rightArmX + fingerLength, rightArmY + fingerLength / 2, bodyColo
 5624              		.loc 1 409 13 view .LVU1732
 5625 01aa FFF7FEBF 		b	_ZN4cGFX8drawLineEtttt6cColor
 5626              	.LVL479:
 5627              	.L320:
 409:GFX.cpp       ****     drawLine(rightArmX, rightArmY, rightArmX + fingerLength, rightArmY + fingerLength / 2, bodyColo
 5628              		.loc 1 409 13 view .LVU1733
 5629 01ae 00BF     		.align	2
 5630              	.L319:
 5631 01b0 CDCCCCCC 		.word	-858993459
 5632              		.cfi_endproc
 5633              	.LFE2643:
 5635              		.section	.text._ZN4cGFX13drawExplosionEttt6cColorS0_,"ax",%progbits
 5636              		.align	1
 5637              		.p2align 2,,3
 5638              		.global	_ZN4cGFX13drawExplosionEttt6cColorS0_
 5639              		.syntax unified
 5640              		.thumb
 5641              		.thumb_func
 5643              	_ZN4cGFX13drawExplosionEttt6cColorS0_:
 5644              	.LVL480:
 5645              	.LFB2644:
 411:GFX.cpp       **** 
 412:GFX.cpp       **** 
 413:GFX.cpp       **** void cGFX::drawExplosion(uint16_t x, uint16_t y, uint16_t size, cColor mainColor, cColor secondaryC
 414:GFX.cpp       **** {
 5646              		.loc 1 414 1 is_stmt 1 view -0
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 141


 5647              		.cfi_startproc
 5648              		@ args = 8, pretend = 0, frame = 16
 5649              		@ frame_needed = 0, uses_anonymous_args = 0
 415:GFX.cpp       ****     // Draw the center of the explosion (main circle with a smiley face)
 416:GFX.cpp       ****     uint16_t centerRadius = size / 4;
 5650              		.loc 1 416 5 view .LVU1735
 414:GFX.cpp       ****     // Draw the center of the explosion (main circle with a smiley face)
 5651              		.loc 1 414 1 is_stmt 0 view .LVU1736
 5652 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5653              		.cfi_def_cfa_offset 36
 5654              		.cfi_offset 4, -36
 5655              		.cfi_offset 5, -32
 5656              		.cfi_offset 6, -28
 5657              		.cfi_offset 7, -24
 5658              		.cfi_offset 8, -20
 5659              		.cfi_offset 9, -16
 5660              		.cfi_offset 10, -12
 5661              		.cfi_offset 11, -8
 5662              		.cfi_offset 14, -4
 5663 0004 2DED068B 		vpush.64	{d8, d9, d10}
 5664              		.cfi_def_cfa_offset 60
 5665              		.cfi_offset 80, -60
 5666              		.cfi_offset 81, -56
 5667              		.cfi_offset 82, -52
 5668              		.cfi_offset 83, -48
 5669              		.cfi_offset 84, -44
 5670              		.cfi_offset 85, -40
 5671 0008 89B0     		sub	sp, sp, #36
 5672              		.cfi_def_cfa_offset 96
 414:GFX.cpp       ****     // Draw the center of the explosion (main circle with a smiley face)
 5673              		.loc 1 414 1 view .LVU1737
 5674 000a 1C46     		mov	r4, r3
 5675              	.LVL481:
 417:GFX.cpp       ****     drawFillCircle(x, y, centerRadius, mainColor);
 5676              		.loc 1 417 5 is_stmt 1 view .LVU1738
 414:GFX.cpp       ****     // Draw the center of the explosion (main circle with a smiley face)
 5677              		.loc 1 414 1 is_stmt 0 view .LVU1739
 5678 000c 0D46     		mov	r5, r1
 5679 000e 1746     		mov	r7, r2
 5680              		.loc 1 417 19 view .LVU1740
 5681 0010 189B     		ldr	r3, [sp, #96]
 5682              	.LVL482:
 414:GFX.cpp       ****     // Draw the center of the explosion (main circle with a smiley face)
 5683              		.loc 1 414 1 view .LVU1741
 5684 0012 0646     		mov	r6, r0
 418:GFX.cpp       ****     
 419:GFX.cpp       ****     // Draw smiley face in the center
 420:GFX.cpp       ****     uint16_t eyeRadius = centerRadius / 8;
 5685              		.loc 1 420 14 view .LVU1742
 5686 0014 4FEA5418 		lsr	r8, r4, #5
 5687              	.LBB822:
 5688              	.LBB823:
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 422:GFX.cpp       ****     drawFillCircle(x + centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 423:GFX.cpp       ****     drawArc(x, y + centerRadius / 8, centerRadius / 2, 30, 150, secondaryColor);
 424:GFX.cpp       ****     
 425:GFX.cpp       ****     // Draw outer circles for the explosion effect
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 142


 426:GFX.cpp       ****     uint16_t numCircles = 10; // Number of circles
 427:GFX.cpp       ****     for (uint16_t i = 0; i < numCircles; ++i)
 428:GFX.cpp       ****     {
 429:GFX.cpp       ****         float angle = i * (360.0 / numCircles);
 430:GFX.cpp       ****         float rad = angle * (3.14159 / 180.0); // Convert to radians
 431:GFX.cpp       ****         
 432:GFX.cpp       ****         uint16_t outerX = x + size * cos(rad);
 433:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5689              		.loc 1 433 29 view .LVU1743
 5690 0018 B7EE008A 		vmov.f32	s16, #1.0e+0
 5691              	.LBE823:
 5692              	.LBE822:
 417:GFX.cpp       ****     
 5693              		.loc 1 417 19 view .LVU1744
 5694 001c 0093     		str	r3, [sp]
 5695 001e A308     		lsrs	r3, r4, #2
 5696 0020 FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5697              	.LVL483:
 420:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5698              		.loc 1 420 5 is_stmt 1 view .LVU1745
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5699              		.loc 1 421 5 view .LVU1746
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5700              		.loc 1 421 37 is_stmt 0 view .LVU1747
 5701 0024 584B     		ldr	r3, .L326+16
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5702              		.loc 1 421 19 view .LVU1748
 5703 0026 A7EB1412 		sub	r2, r7, r4, lsr #4
 5704 002a 3046     		mov	r0, r6
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5705              		.loc 1 421 37 view .LVU1749
 5706 002c A3FB0439 		umull	r3, r9, r3, r4
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5707              		.loc 1 421 19 view .LVU1750
 5708 0030 199B     		ldr	r3, [sp, #100]
 5709 0032 92B2     		uxth	r2, r2
 5710 0034 A5EBD901 		sub	r1, r5, r9, lsr #3
 5711 0038 0093     		str	r3, [sp]
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5712              		.loc 1 421 37 view .LVU1751
 5713 003a 4FEAD90A 		lsr	r10, r9, #3
 421:GFX.cpp       ****     drawFillCircle(x - centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5714              		.loc 1 421 19 view .LVU1752
 5715 003e 4346     		mov	r3, r8
 5716 0040 89B2     		uxth	r1, r1
 5717 0042 0592     		str	r2, [sp, #20]
 5718 0044 FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5719              	.LVL484:
 422:GFX.cpp       ****     drawArc(x, y + centerRadius / 8, centerRadius / 2, 30, 150, secondaryColor);
 5720              		.loc 1 422 5 is_stmt 1 view .LVU1753
 422:GFX.cpp       ****     drawArc(x, y + centerRadius / 8, centerRadius / 2, 30, 150, secondaryColor);
 5721              		.loc 1 422 19 is_stmt 0 view .LVU1754
 5722 0048 199B     		ldr	r3, [sp, #100]
 5723 004a 0AEB0501 		add	r1, r10, r5
 5724 004e 059A     		ldr	r2, [sp, #20]
 5725 0050 3046     		mov	r0, r6
 5726 0052 0093     		str	r3, [sp]
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 143


 5727 0054 89B2     		uxth	r1, r1
 5728 0056 4346     		mov	r3, r8
 5729 0058 FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5730              	.LVL485:
 423:GFX.cpp       ****     
 5731              		.loc 1 423 5 is_stmt 1 view .LVU1755
 423:GFX.cpp       ****     
 5732              		.loc 1 423 12 is_stmt 0 view .LVU1756
 5733 005c 199B     		ldr	r3, [sp, #100]
 5734 005e 07EB0802 		add	r2, r7, r8
 5735 0062 9621     		movs	r1, #150
 5736 0064 0293     		str	r3, [sp, #8]
 5737 0066 4FEAD40A 		lsr	r10, r4, #3
 5738 006a 1E23     		movs	r3, #30
 5739 006c 92B2     		uxth	r2, r2
 5740 006e 3046     		mov	r0, r6
 5741              	.LBB838:
 5742              	.LBB832:
 434:GFX.cpp       ****         
 435:GFX.cpp       ****         drawFillCircle(outerX, outerY, centerRadius / 2, mainColor);
 436:GFX.cpp       ****         
 437:GFX.cpp       ****         // Draw smiley faces on outer circles
 438:GFX.cpp       ****         drawFillCircle(outerX - centerRadius / 6, outerY - centerRadius / 8, eyeRadius, secondaryCo
 5743              		.loc 1 438 46 view .LVU1757
 5744 0070 4FEA1919 		lsr	r9, r9, #4
 5745              	.LBE832:
 5746              	.LBE838:
 421:GFX.cpp       ****     drawFillCircle(x + centerRadius / 3, y - centerRadius / 4, eyeRadius, secondaryColor);
 5747              		.loc 1 421 59 view .LVU1758
 5748 0074 4FEA141B 		lsr	fp, r4, #4
 423:GFX.cpp       ****     
 5749              		.loc 1 423 12 view .LVU1759
 5750 0078 CDE90031 		strd	r3, r1, [sp]
 5751 007c 5346     		mov	r3, r10
 5752 007e 2946     		mov	r1, r5
 5753 0080 FFF7FEFF 		bl	_ZN4cGFX7drawArcEttttt6cColor
 5754              	.LVL486:
 426:GFX.cpp       ****     for (uint16_t i = 0; i < numCircles; ++i)
 5755              		.loc 1 426 5 is_stmt 1 view .LVU1760
 427:GFX.cpp       ****     {
 5756              		.loc 1 427 5 view .LVU1761
 5757              	.LBB839:
 427:GFX.cpp       ****     {
 5758              		.loc 1 427 28 view .LVU1762
 5759              	.LBB833:
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5760              		.loc 1 432 29 is_stmt 0 view .LVU1763
 5761 0084 07EE905A 		vmov	s15, r5	@ int
 439:GFX.cpp       ****         drawFillCircle(outerX + centerRadius / 6, outerY - centerRadius / 8, eyeRadius, secondaryCo
 440:GFX.cpp       ****         drawArc(outerX, outerY + centerRadius / 16, centerRadius / 4, 30, 150, secondaryColor);
 5762              		.loc 1 440 47 view .LVU1764
 5763 0088 A309     		lsrs	r3, r4, #6
 433:GFX.cpp       ****         
 5764              		.loc 1 433 29 view .LVU1765
 5765 008a 9FED400A 		vldr.32	s0, .L326+20
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5766              		.loc 1 432 29 view .LVU1766
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 144


 5767 008e B8EEE79A 		vcvt.f32.s32	s18, s15
 433:GFX.cpp       ****         
 5768              		.loc 1 433 29 view .LVU1767
 5769 0092 07EE907A 		vmov	s15, r7	@ int
 5770 0096 0027     		movs	r7, #0
 5771              		.loc 1 440 47 view .LVU1768
 5772 0098 0793     		str	r3, [sp, #28]
 433:GFX.cpp       ****         
 5773              		.loc 1 433 29 view .LVU1769
 5774 009a F8EEE79A 		vcvt.f32.s32	s19, s15
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5775              		.loc 1 432 36 view .LVU1770
 5776 009e 07EE904A 		vmov	s15, r4	@ int
 433:GFX.cpp       ****         
 5777              		.loc 1 433 29 view .LVU1771
 5778 00a2 0597     		str	r7, [sp, #20]
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5779              		.loc 1 432 36 view .LVU1772
 5780 00a4 F8EEE78A 		vcvt.f32.s32	s17, s15
 5781 00a8 17E0     		b	.L323
 5782              	.LVL487:
 5783              	.L325:
 429:GFX.cpp       ****         float rad = angle * (3.14159 / 180.0); // Convert to radians
 5784              		.loc 1 429 25 view .LVU1773
 5785 00aa 05EE903A 		vmov	s11, r3	@ int
 5786 00ae B8EEE50B 		vcvt.f64.s32	d0, s11
 5787 00b2 20EE060B 		vmul.f64	d0, d0, d6
 429:GFX.cpp       ****         float rad = angle * (3.14159 / 180.0); // Convert to radians
 5788              		.loc 1 429 15 view .LVU1774
 5789 00b6 B7EEC00B 		vcvt.f32.f64	s0, d0
 430:GFX.cpp       ****         
 5790              		.loc 1 430 21 view .LVU1775
 5791 00ba B7EEC00A 		vcvt.f64.f32	d0, s0
 430:GFX.cpp       ****         
 5792              		.loc 1 430 27 view .LVU1776
 5793 00be 20EE070B 		vmul.f64	d0, d0, d7
 430:GFX.cpp       ****         
 5794              		.loc 1 430 15 view .LVU1777
 5795 00c2 B7EEC0AB 		vcvt.f32.f64	s20, d0
 5796              	.LBB824:
 5797              	.LBB825:
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ceil;
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 145


 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(float __x)
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cos;
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(float __x)
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 5798              		.loc 4 185 26 view .LVU1778
 5799 00c6 B0EE4A0A 		vmov.f32	s0, s20
 5800 00ca FFF7FEFF 		bl	cosf
 5801              	.LVL488:
 5802 00ce B0EE408A 		vmov.f32	s16, s0
 5803              	.LVL489:
 5804              		.loc 4 185 26 view .LVU1779
 5805              	.LBE825:
 5806              	.LBE824:
 5807              	.LBB827:
 5808              	.LBB828:
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(long double __x)
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cosh;
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(float __x)
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(long double __x)
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 146


 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::exp;
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(float __x)
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(long double __x)
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fabs;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(float __x)
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(long double __x)
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fabs(_Tp __x)
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_fabs(__x); }
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::floor;
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(float __x)
 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorf(__x); }
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(long double __x)
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 147


 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorl(__x); }
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     floor(_Tp __x)
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_floor(__x); }
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fmod;
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(float __x, float __y)
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(long double __x, long double __y)
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::frexp;
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(float __x, int* __exp)
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(long double __x, int* __exp)
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ldexp;
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(float __x, int __exp)
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 148


 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(long double __x, int __exp)
 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log;
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(float __x)
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logf(__x); }
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(long double __x)
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logl(__x); }
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log(_Tp __x)
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log(__x); }
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log10;
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(float __x)
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10f(__x); }
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(long double __x)
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10l(__x); }
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log10(_Tp __x)
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log10(__x); }
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::modf;
 373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(float __x, float* __iptr)
 377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 149


 379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 380:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 383:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 384:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::pow;
 385:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 386:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, float __y)
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 391:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, long double __y)
 393:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 395:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #if __cplusplus < 201103L
 396:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline double
 399:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(double __x, int __i)
 400:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 402:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 403:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, int __n)
 404:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 406:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 407:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, int __n)
 408:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 410:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 411:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 412:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 413:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 417:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 420:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 421:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::sin;
 422:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 423:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   sin(float __x)
 426:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_sinf(__x); }
 5809              		.loc 4 426 26 view .LVU1780
 5810 00d2 B0EE4A0A 		vmov.f32	s0, s20
 5811 00d6 FFF7FEFF 		bl	sinf
 5812              	.LVL490:
 5813              	.L323:
 5814              		.loc 4 426 26 view .LVU1781
 5815              	.LBE828:
 5816              	.LBE827:
 429:GFX.cpp       ****         float rad = angle * (3.14159 / 180.0); // Convert to radians
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 150


 5817              		.loc 1 429 9 is_stmt 1 discriminator 2 view .LVU1782
 430:GFX.cpp       ****         
 5818              		.loc 1 430 9 discriminator 2 view .LVU1783
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5819              		.loc 1 432 9 discriminator 2 view .LVU1784
 5820              	.LBB830:
 5821              	.LBI824:
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 5822              		.loc 4 184 3 discriminator 2 view .LVU1785
 5823              	.LBB826:
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 5824              		.loc 4 185 5 discriminator 2 view .LVU1786
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 5825              		.loc 4 185 5 is_stmt 0 discriminator 2 view .LVU1787
 5826              	.LBE826:
 5827              	.LBE830:
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5828              		.loc 1 432 29 discriminator 2 view .LVU1788
 5829 00da B0EE497A 		vmov.f32	s14, s18
 435:GFX.cpp       ****         
 5830              		.loc 1 435 23 discriminator 2 view .LVU1789
 5831 00de 189A     		ldr	r2, [sp, #96]
 433:GFX.cpp       ****         
 5832              		.loc 1 433 29 discriminator 2 view .LVU1790
 5833 00e0 F0EE697A 		vmov.f32	s15, s19
 5834              	.LBE833:
 427:GFX.cpp       ****     {
 5835              		.loc 1 427 28 discriminator 2 view .LVU1791
 5836 00e4 0599     		ldr	r1, [sp, #20]
 5837              	.LBB834:
 435:GFX.cpp       ****         
 5838              		.loc 1 435 23 discriminator 2 view .LVU1792
 5839 00e6 0092     		str	r2, [sp]
 5840 00e8 5346     		mov	r3, r10
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5841              		.loc 1 432 29 discriminator 2 view .LVU1793
 5842 00ea A8EE887A 		vfma.f32	s14, s17, s16
 5843              	.LBE834:
 427:GFX.cpp       ****     {
 5844              		.loc 1 427 28 discriminator 2 view .LVU1794
 5845 00ee 0131     		adds	r1, r1, #1
 5846              	.LBB835:
 433:GFX.cpp       ****         
 5847              		.loc 1 433 29 discriminator 2 view .LVU1795
 5848 00f0 E8EE807A 		vfma.f32	s15, s17, s0
 435:GFX.cpp       ****         
 5849              		.loc 1 435 23 discriminator 2 view .LVU1796
 5850 00f4 3046     		mov	r0, r6
 5851              	.LBE835:
 427:GFX.cpp       ****     {
 5852              		.loc 1 427 28 discriminator 2 view .LVU1797
 5853 00f6 0591     		str	r1, [sp, #20]
 5854              	.LVL491:
 5855              	.LBB836:
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5856              		.loc 1 432 45 discriminator 2 view .LVU1798
 5857 00f8 BCEEC77A 		vcvt.u32.f32	s14, s14
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 151


 433:GFX.cpp       ****         
 5858              		.loc 1 433 45 discriminator 2 view .LVU1799
 5859 00fc FCEEE77A 		vcvt.u32.f32	s15, s15
 432:GFX.cpp       ****         uint16_t outerY = y + size * sin(rad);
 5860              		.loc 1 432 45 discriminator 2 view .LVU1800
 5861 0100 17EE102A 		vmov	r2, s14	@ int
 5862 0104 95B2     		uxth	r5, r2
 5863              	.LVL492:
 433:GFX.cpp       ****         
 5864              		.loc 1 433 9 is_stmt 1 discriminator 2 view .LVU1801
 5865              	.LBB831:
 5866              	.LBI827:
 425:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_sinf(__x); }
 5867              		.loc 4 425 3 discriminator 2 view .LVU1802
 5868              	.LBB829:
 5869              		.loc 4 426 5 discriminator 2 view .LVU1803
 5870              		.loc 4 426 5 is_stmt 0 discriminator 2 view .LVU1804
 5871              	.LBE829:
 5872              	.LBE831:
 433:GFX.cpp       ****         
 5873              		.loc 1 433 45 discriminator 2 view .LVU1805
 5874 0106 17EE902A 		vmov	r2, s15	@ int
 5875 010a 94B2     		uxth	r4, r2
 5876              	.LVL493:
 435:GFX.cpp       ****         
 5877              		.loc 1 435 9 is_stmt 1 discriminator 2 view .LVU1806
 435:GFX.cpp       ****         
 5878              		.loc 1 435 23 is_stmt 0 discriminator 2 view .LVU1807
 5879 010c 2946     		mov	r1, r5
 5880 010e 2246     		mov	r2, r4
 5881 0110 FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5882              	.LVL494:
 438:GFX.cpp       ****         drawFillCircle(outerX + centerRadius / 6, outerY - centerRadius / 8, eyeRadius, secondaryCo
 5883              		.loc 1 438 9 is_stmt 1 discriminator 2 view .LVU1808
 438:GFX.cpp       ****         drawFillCircle(outerX + centerRadius / 6, outerY - centerRadius / 8, eyeRadius, secondaryCo
 5884              		.loc 1 438 23 is_stmt 0 discriminator 2 view .LVU1809
 5885 0114 A4EB0802 		sub	r2, r4, r8
 5886 0118 1998     		ldr	r0, [sp, #100]
 5887 011a A5EB0901 		sub	r1, r5, r9
 5888 011e 92B2     		uxth	r2, r2
 5889 0120 4346     		mov	r3, r8
 5890 0122 89B2     		uxth	r1, r1
 5891 0124 0090     		str	r0, [sp]
 5892 0126 0692     		str	r2, [sp, #24]
 5893 0128 3046     		mov	r0, r6
 5894 012a FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5895              	.LVL495:
 439:GFX.cpp       ****         drawArc(outerX, outerY + centerRadius / 16, centerRadius / 4, 30, 150, secondaryColor);
 5896              		.loc 1 439 9 is_stmt 1 discriminator 2 view .LVU1810
 439:GFX.cpp       ****         drawArc(outerX, outerY + centerRadius / 16, centerRadius / 4, 30, 150, secondaryColor);
 5897              		.loc 1 439 23 is_stmt 0 discriminator 2 view .LVU1811
 5898 012e 09EB0501 		add	r1, r9, r5
 5899 0132 199F     		ldr	r7, [sp, #100]
 5900 0134 4346     		mov	r3, r8
 5901 0136 069A     		ldr	r2, [sp, #24]
 5902 0138 3046     		mov	r0, r6
 5903 013a 89B2     		uxth	r1, r1
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 152


 5904 013c 0097     		str	r7, [sp]
 5905 013e FFF7FEFF 		bl	_ZN4cGFX14drawFillCircleEttt6cColor
 5906              	.LVL496:
 5907              		.loc 1 440 9 is_stmt 1 discriminator 2 view .LVU1812
 5908              		.loc 1 440 16 is_stmt 0 discriminator 2 view .LVU1813
 5909 0142 079B     		ldr	r3, [sp, #28]
 5910 0144 4FF0960C 		mov	ip, #150
 5911 0148 2946     		mov	r1, r5
 5912 014a 1A19     		adds	r2, r3, r4
 5913 014c 199D     		ldr	r5, [sp, #100]
 5914 014e 1E24     		movs	r4, #30
 5915 0150 5B46     		mov	r3, fp
 5916 0152 92B2     		uxth	r2, r2
 5917 0154 3046     		mov	r0, r6
 5918 0156 0094     		str	r4, [sp]
 5919 0158 CDE901C5 		strd	ip, r5, [sp, #4]
 5920 015c FFF7FEFF 		bl	_ZN4cGFX7drawArcEttttt6cColor
 5921              	.LVL497:
 5922              		.loc 1 440 16 discriminator 2 view .LVU1814
 5923              	.LBE836:
 427:GFX.cpp       ****     {
 5924              		.loc 1 427 5 is_stmt 1 discriminator 2 view .LVU1815
 427:GFX.cpp       ****     {
 5925              		.loc 1 427 28 discriminator 2 view .LVU1816
 427:GFX.cpp       ****     {
 5926              		.loc 1 427 28 is_stmt 0 discriminator 2 view .LVU1817
 5927 0160 059B     		ldr	r3, [sp, #20]
 5928 0162 0A2B     		cmp	r3, #10
 5929              	.LBB837:
 429:GFX.cpp       ****         float rad = angle * (3.14159 / 180.0); // Convert to radians
 5930              		.loc 1 429 25 discriminator 2 view .LVU1818
 5931 0164 9FED046B 		vldr.64	d6, .L326
 430:GFX.cpp       ****         
 5932              		.loc 1 430 27 discriminator 2 view .LVU1819
 5933 0168 9FED057B 		vldr.64	d7, .L326+8
 5934              	.LBE837:
 427:GFX.cpp       ****     {
 5935              		.loc 1 427 28 discriminator 2 view .LVU1820
 5936 016c 9DD1     		bne	.L325
 5937              	.LBE839:
 441:GFX.cpp       ****     }
 442:GFX.cpp       **** }
 5938              		.loc 1 442 1 view .LVU1821
 5939 016e 09B0     		add	sp, sp, #36
 5940              		.cfi_def_cfa_offset 60
 5941              		@ sp needed
 5942 0170 BDEC068B 		vldm	sp!, {d8-d10}
 5943              		.cfi_restore 84
 5944              		.cfi_restore 85
 5945              		.cfi_restore 82
 5946              		.cfi_restore 83
 5947              		.cfi_restore 80
 5948              		.cfi_restore 81
 5949              		.cfi_def_cfa_offset 36
 5950              	.LVL498:
 5951              		.loc 1 442 1 view .LVU1822
 5952 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 153


 5953              	.LVL499:
 5954              	.L327:
 5955              		.loc 1 442 1 view .LVU1823
 5956              		.align	3
 5957              	.L326:
 5958 0178 00000000 		.word	0
 5959 017c 00004240 		.word	1078067200
 5960 0180 70E20DA5 		.word	-1525816720
 5961 0184 45DF913F 		.word	1066524485
 5962 0188 ABAAAAAA 		.word	-1431655765
 5963 018c 00000000 		.word	0
 5964              		.cfi_endproc
 5965              	.LFE2644:
 5967              		.text
 5968              	.Letext0:
 5969              		.file 5 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 5970              		.file 6 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 5971              		.file 7 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 5972              		.file 8 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 5973              		.file 9 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 5974              		.file 10 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 5975              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 5976              		.file 12 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 5977              		.file 13 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 5978              		.file 14 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 5979              		.file 15 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 5980              		.file 16 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 5981              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 5982              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 5983              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 5984              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 5985              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 5986              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 5987              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 5988              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 5989              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 5990              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 5991              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 5992              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 5993              		.file 29 "./libDaisy/src/daisy_core.h"
 5994              		.file 30 "./libDaisy/src/per/gpio.h"
 5995              		.file 31 "./libDaisy/src/per/spi.h"
 5996              		.file 32 "./libDaisy/src/util/wav_format.h"
 5997              		.file 33 "./libDaisy/src/dev/max11300.h"
 5998              		.file 34 "./libDaisy/src/daisy_seed.h"
 5999              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 6000              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 6001              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 6002              		.file 38 "TFT_SPI.h"
 6003              		.file 39 "./libDaisy/src/dev/sr_595.h"
 6004              		.file 40 "<built-in>"
ARM GAS  /var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s 			page 154


DEFINED SYMBOLS
                            *ABS*:0000000000000000 GFX.cpp
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:19     .text._ZN5cFontC2EPK7GFXfont:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:26     .text._ZN5cFontC2EPK7GFXfont:0000000000000000 _ZN5cFontC2EPK7GFXfont
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:26     .text._ZN5cFontC2EPK7GFXfont:0000000000000000 _ZN5cFontC1EPK7GFXfont
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:137    .text._ZN4cGFX12drawFillRectEttss6cColor:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:144    .text._ZN4cGFX12drawFillRectEttss6cColor:0000000000000000 _ZN4cGFX12drawFillRectEttss6cColor
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:396    .text._ZN4cGFX8drawLineEtttt6cColor:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:403    .text._ZN4cGFX8drawLineEtttt6cColor:0000000000000000 _ZN4cGFX8drawLineEtttt6cColor
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:1210   .text._ZN4cGFX8drawRectEttss6cColor:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:1217   .text._ZN4cGFX8drawRectEttss6cColor:0000000000000000 _ZN4cGFX8drawRectEttss6cColor
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:1347   .text._ZN4cGFX10drawCircleEttt6cColor:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:1354   .text._ZN4cGFX10drawCircleEttt6cColor:0000000000000000 _ZN4cGFX10drawCircleEttt6cColor
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:1981   .text._ZN4cGFX7drawArcEttttt6cColor:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:1988   .text._ZN4cGFX7drawArcEttttt6cColor:0000000000000000 _ZN4cGFX7drawArcEttttt6cColor
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:3031   .text._ZN4cGFX7drawArcEttttt6cColor:0000000000000410 $d
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:3045   .text._ZN4cGFX7drawArcEttttt6cColor:0000000000000418 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:3779   .text._ZN4cGFX14drawFillCircleEttt6cColor:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:3786   .text._ZN4cGFX14drawFillCircleEttt6cColor:0000000000000000 _ZN4cGFX14drawFillCircleEttt6cColor
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:4380   .text._ZN4cGFX15drawR8G8B8ImageEttttPKh:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:4387   .text._ZN4cGFX15drawR8G8B8ImageEttttPKh:0000000000000000 _ZN4cGFX15drawR8G8B8ImageEttttPKh
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:4647   .text._ZN4cGFX8drawCharEcb:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:4654   .text._ZN4cGFX8drawCharEcb:0000000000000000 _ZN4cGFX8drawCharEcb
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5026   .text._ZN4cGFX8drawTextEPKcb:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5033   .text._ZN4cGFX8drawTextEPKcb:0000000000000000 _ZN4cGFX8drawTextEPKcb
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5230   .text._ZN4cGFX13drawTransTextEPKcb:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5237   .text._ZN4cGFX13drawTransTextEPKcb:0000000000000000 _ZN4cGFX13drawTransTextEPKcb
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5286   .text._ZN4cGFX9drawGhostEtttt6cColorS0_:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5293   .text._ZN4cGFX9drawGhostEtttt6cColorS0_:0000000000000000 _ZN4cGFX9drawGhostEtttt6cColorS0_
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5631   .text._ZN4cGFX9drawGhostEtttt6cColorS0_:00000000000001b0 $d
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5636   .text._ZN4cGFX13drawExplosionEttt6cColorS0_:0000000000000000 $t
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5643   .text._ZN4cGFX13drawExplosionEttt6cColorS0_:0000000000000000 _ZN4cGFX13drawExplosionEttt6cColorS0_
/var/folders/s6/2bsynnl15rj0bwtb9pgx4dc00000gn/T//ccxpyPRb.s:5958   .text._ZN4cGFX13drawExplosionEttt6cColorS0_:0000000000000178 $d

UNDEFINED SYMBOLS
atan2f
cosf
sinf
